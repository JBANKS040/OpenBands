{"noir_version":"1.0.0-beta.4+3a5a15ac70e52b4e67edc69e8aa5ad7780523f87","hash":"10490446687054338821","abi":{"parameters":[{"name":"partial_data","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":640,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"partial_hash","type":{"kind":"array","length":8,"type":{"kind":"integer","sign":"unsigned","width":32}},"visibility":"private"},{"name":"full_data_length","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"base64_decode_offset","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"jwt_pubkey_modulus_limbs","type":{"kind":"array","length":18,"type":{"kind":"integer","sign":"unsigned","width":128}},"visibility":"private"},{"name":"jwt_pubkey_redc_params_limbs","type":{"kind":"array","length":18,"type":{"kind":"integer","sign":"unsigned","width":128}},"visibility":"private"},{"name":"jwt_signature_limbs","type":{"kind":"array","length":18,"type":{"kind":"integer","sign":"unsigned","width":128}},"visibility":"private"},{"name":"domain","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":64,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"position","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":128,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"salary","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"work_life_balance","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"culture_values","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"career_growth","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"compensation_benefits","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"leadership_quality","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"operational_efficiency","type":{"kind":"integer","sign":"unsigned","width":8},"visibility":"private"},{"name":"header","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":1504,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"pubkey","type":{"kind":"struct","path":"zkemail::dkim::RSAPubkey","fields":[{"name":"modulus","type":{"kind":"array","length":18,"type":{"kind":"field"}}},{"name":"redc","type":{"kind":"array","length":18,"type":{"kind":"field"}}}]},"visibility":"private"},{"name":"signature","type":{"kind":"array","length":18,"type":{"kind":"field"}},"visibility":"private"},{"name":"dkim_header_sequence","type":{"kind":"struct","path":"zkemail::Sequence","fields":[{"name":"index","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"body_trimmed","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":2048,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"}],"return_type":{"abi_type":{"kind":"field"},"visibility":"public"},"error_types":{"1745191622261247408":{"error_kind":"string","string":"rating must be at least 1"},"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"},"4128061241751547076":{"error_kind":"string","string":"Position can not be found in email body"},"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"5634341720269277520":{"error_kind":"fmtstring","length":58,"item_types":[{"kind":"integer","sign":"unsigned","width":8},{"kind":"integer","sign":"unsigned","width":32}]},"5675127253506927136":{"error_kind":"string","string":"utils::search could not find needle in haystack"},"5727012404371710682":{"error_kind":"string","string":"push out of bounds"},"6314603625877298116":{"error_kind":"string","string":"haystack length of size 0 not supported"},"6485997221020871071":{"error_kind":"string","string":"call to assert_max_bit_size"},"6543056410826478903":{"error_kind":"string","string":"incorrect value for claim"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"},"7788270038095378938":{"error_kind":"string","string":"substring not present in main text (match found if a padding text included. is main text correctly formatted?)"},"8397817944888091498":{"error_kind":"string","string":"rating must be at most 5"},"9281715815618326061":{"error_kind":"string","string":"invalid domain"},"10713088778935619315":{"error_kind":"string","string":"char before domain is not '@'"},"13815800804469369678":{"error_kind":"string","string":"partial_data length is too long"},"14044520943542572812":{"error_kind":"string","string":"Salary can not be found in email body"},"14225679739041873922":{"error_kind":"string","string":"Index out of bounds"},"14514982005979867414":{"error_kind":"string","string":"attempt to bit-shift with overflow"},"15412340888643424233":{"error_kind":"string","string":"needle length of size 0 not supported"},"16761564377371454734":{"error_kind":"string","string":"Array index out of bounds"},"17843811134343075018":{"error_kind":"string","string":"Stack too deep"}}},"bytecode":"","debug_symbols":"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0ynBmw0rbjq94M2GFTedXvDezxK/4M2GhTedArzZsOymU4BnN50SvPeTTi94s2HFTacXvNmw4qbTC958DytuOr3gvZ8lfsF7P0s8L3jTKcCbDctuOiV48yed2E2nBG82rLjp9II3G1bcdHrBm+9hxU2nF7z5lNjTdLrZKuFNp+fFDN50CvDmTzqxm04J3nwPy246JXizYdlNpwRvNiy76ZTgNafEN+sBvOn0bFh40ynAmw3LbjoleLNhxU2nebGbTmHOs5tOCd5sWHHT6QXPNmyAN58Se5pON4sZvOn0vNvAm04B3mxYdtMpwZvvYcVNpxe82bDsplOCNxtW3HR6wZvvYcVNpxe8uOlUzE2nYm46FXPTqZibTuVCGzbBi+9hi7npVMxNp2JuOhVz06mYm07F03S6gxd/0qmYm06F3XRK8GbDmptOxdx0KuymU4I3G9bcdCrmplMxN52KuelUPE2nO3jxKXGBN52et0p20yksZuymU4IX38MWc9OpsJtOCd58SmxuOhVz06l4mk538OZTYnjTKcCbT4nZTaewmLGbTmG3YTedErzZsOymU4JHGzbBm0+JzU2nYm46FU/T6Q7efEoMbzoFePHv1insplNYD9hNpwRvNiy76ZTgzfew7KZTgjcb1tx0KuamUzE3nYqn6XQHbz4lhjednhczdtMp7DbsplOCNxvW3HQq7KZTgGc3nRK82bDmplPxNJ3u4DWGvYM338Oym04J3nxKzG46JXjzM6yn6XSzz8ObTs8rMbzpFODN97DsplOCN58Ss5tOCd5sWHjTKcCbDctuOiV48zMsu+kUdht40+l5PYA3nQK82bDsplOCN58Ss5tOCV5s2ApvOgV4sWEru+mU4MWnxPViGzbAi38De4U3nR53mwpvOgV4sWEru+kU4NlNpwQvfh+2eppON3Me3nQK8GbDsptOCV58D1vZTacEL/4N7BXedHrebeBNpwBvNiy76ZTgxfewld10SvBmw3qaTnfwZsPCm04B3nxKzG46JXjzKTG76RS2SnjT6XkxgzedArz4Hraym04JXnwPW9lNpwRvNiy86RTgzYZlN50SvPmUmN10SvDmZ1hP0+lmq4Q3nZ4XM3jTKcCb72HZTacEbz4lZjedErzZsOymU4I3G5bddErw5lNic9OpmptO1dN0utkq4U2n58UM3nQK8OZ7WHbTKcGbT4nZTacEbzYsu+mU4M2GZTedErz5lNjTdLrZbeBNp+f1AN50CvBmw7KbTgnefA/LbjoleLNhPU2nO3izYeFNpwBvPiVmN50SvPmUmN10ClslvOn0vJjBm04B3nwPy246JXjzPSy76ZTgzYaFN50CvNmw7KZTgjefErObTgle/AzbzE2nZm46NU/T6ec+3+BNp8eVuF1swwZ48SlxYzedErz4lLiZm06N3XQKc57ddErwZsOam07N3HRqnqbTzW4Dbzo9rwfwplOANxuW3XRK8OJT4sZuOiV4s2HZTacEbzYsu+mU4MWnxM3cdGqeptPNYgZvOj3vNvCm0zM8u+kUDMtuOiV48T1sYzedErzZsOymU4I3G5bddErw4nvYZm46NU/T6WYxgzednncbeNMpwJsNy246JXjzPSy76ZTgzYaFN50CvNmw7KZTgjefErObTglec0p8s5jBm07Puw286RTgzYZlN50SvPkelt10CvCeptPNnIc3nQK82bDsplOCZxs2wJtPidlNpwRvvoeFN52eFzN40+kZnt10CusBu+mU4M33sOymU4I3G5bddErwZsOym04J3nxKbG46NU/T6WYxgzednncbeNMpwJsNy246JXjzPSy76ZTgzYaFN50CvNmw7KZTgjefErObTmG3gTedntcDeNMpwJsNy246JXjzPSy76ZTgxYbt5qZTNzeduqfpdAcvvoftF9uwAV5zSvxzMevsptPzbtPZTacELzZsZzedAjy76ZTgxfew3dx06uamU/c0ne7gxfewHd50CvDiU+LObjolePMzLLvplOA1z7A3+zy86fS8EsObTgEebdiwmLGbTglefErc2U2nBG82LLzp9AzPbjolePMpMbvplODNz7CeptPNYgZvOj3vNvCmU4A3G5bddErw5lNidtMpwZsNC286BXizYdlNpwRvPiVmN50SvPmU2NN0utkq4U2n58UM3nQK8OZ7WHbTKcGL39bp7KZTgjcblt10SvBmw7KbTgnefEpsbjp1c9Opm5tO3dN0ulmJ4U2n560S3nQK8OZ7WHbTKcGbT4nZTacAz246hTnPbjoleLNh2U2nBM82bIA3P8Oam07d3HTqnqbTzUoMbzo9b5XwplOAN58Ss5tOCd58SmxuOnV20ynMeXbTKcGbDWtuOnVz06mbm07d3HTqnqbTHbz5lNjcdOrsplOCN58Sm5tO3dx06uym0zP8MDedhrnpNMxNp2FuOo2LbdgAL36GHfCm0+NiNsxNp8FuOiV4s2HNTadhbjoNdtMpwZsNa246DXPTaZibTsPcdBqeptPNbgNvOj2vB/CmU4A3G5bddErw4nvYYW46DXbTKcx5dtMpwZsNa246DXPTaZibTsPTdLpZzOBNp+fdBt50CvBmw7KbTglefA87zE2nwW46pTlvNiy76ZTgzfew5qbTMDedhrnpNMxNp+FpOt2sxPCm0/NWCW86BXjzPSy76ZTgzafE5qbTYDedwpxnN50SvNmw5qbTMDedhqfpdLPbwJtOz+sBvOkU4M2GZTedErz5HpbddErwZsOym04J3mxYdtMpwZtPic1Np+FpOt0sZvCm0/NuA286BXizYdlNpwRvvodlN50SvNmw8KbTMzy86RTgzfew7KZTgjefErObTmExgzednncbeNMpwJsNy246JXjzPSy76ZTgzYY1N52Gp+l0B68x7B28+ZSY3XRK8JpT4pvFjN10CrsNu+n0DD/ZTadnw0520ynBi+9hJ7vplODFhp3mptP0NJ3u4MX3sBPedArw4lPiyW46JXjxPexkN53CYgZvOgV4tGHDesBuOiV48T3sZDedErzZsPCm0zM8vOkU4MWnxJPddErw4lPiyW46JXjNM+zNVglvOj0vZvCmU4AX38NOdtMpwLObTgnefEoMbzo9z3l40ynAmw3LbjoleLZhA7z5lNjTdLpZzOBNp+fdBt50CvBmw7KbTgnefA/LbjoleLNhPU2nO3izYeFNpwBvPiVmN50SvPmUmN10ClslvOn0vJjBm04B3nwPy246JXjzPSy76ZTgzYaFN50CvNmw7KZTgjefErObTgne/AxrbjpNc9NpmptO09N0unkYgTednvd5eNMpwJtPidlNpwSPNmyCNz/DsptOYc6zm04J3mxYc9NpmptO09N0utlt4E2n5/UA3nQK8GbDsptOCd58SmxuOk120ynNebNh2U2nBG8+JTY3naa56TQ9TaebxQzedHrebeBNpwBvNiy76ZTgxW/rLHPTabGbTs9zfrGbTglebNh1aQx7By++h13mptPyNJ1+LmYL3nR63G0WvOn0DM9uOgXDsptOCV58D7vYTacEbzYsu+mU4M2GZTedErz4lHiZm07L03S6WczgTafn3QbedArwZsOym04J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f9KpsptOCV58D1vZTacEbzYsu+mU4M2GZTedErzmlPhmPYA3nZ4NC286BXizYdlNpwRvNqy56VTZTac0582GNTedqrnpVM1Np2puOlVP0+lmMYM3nZ53G3jTKcCbDctuOiV48z2suelU2U2nMOfZTacEbzasuelUzU2nam46VXPTqZqbTtXcdKrmplM1N52quelUzU2nam46VXPTqZqbTtXcdKrmplP1NJ1u4OFNp+fFzNx0quymU4I3G9bcdKrmplNlN50SvNmw5qZTNTedqrnpVM1Np+ppOt3Bm0+J4U2n562S3XQKixm76ZTgzfew5qZTZTedAjy76ZTgzYY1N52qp+l0B68x7B28+ZSY3XRK8OZ7WHbTKew27KbTM3xjN52eDdvYTacEL76HbeymU4IXG7aZm07N03S6gxefEjd40ynAi3+3TmM3ncJ6wG46JXizYdlNpwSPNmyCF9/DNnPTqZmbTs3cdGrmplPzNJ3u4MWnxA3edHpezNhNp7DbsJtOCd5sWHPTqbGbTglefA/bzE2nZm46NU/T6Q5efA/b4E2nAM82bIA3nxKzm04J3vwM62k63ezz8KbT80oMbzoFePM9LLvplODNp8TsplOCNxsW3nQK8GbDsptOCd78DMtuOoXdBt50el4P4E2nAG82LLvplODNp8TsplOCNxsW3nQK8GbDsptOCd58SsxuOiV48W9gb/Cm0/NuA286BXizYdlNpwRvvodlN50CvKfpdDPn4U2nAG82LLvplODZhg3w5lNidtMpLGbwptPzbgNvOgV4s2HZTacEb76HZTedErzZsJ6m0x282bDwplOAN58Ss5tOCd58SsxuOoWtEt50el7M4E2nAG++h2U3nRK8+R6W3XRK8GbDwptOAV5s2M5uOiV48SlxZzedErz4GbZfaMM+b5Ud3nR6XMw6vOkU4MX3sJ3ddErw4lPizm46JXizYdlNpwRvNiy76ZTgxafE3dx06uamU/c0nW62SnjT6XkxgzedArz4Hrazm04JXnxK3NlNpwRvNiy76ZTgzYZlN50SvPmU2NN0utlt4E2n5/UA3nQK8GbDsptOCV58D9vZTacEbzasp+l0B282LLzpFODNp8TsplOCN58Ss5tOYauEN52eFzN40ynAm+9h2U2nBG++h2U3nRK82bDwplOANxuW3XRK8OZTYnbTKcGbn2HNTadubjp1T9PpZp+HN52eV2J40ynAm0+J2U2nBG8+JTY3nTq76ZTmvNmw7KZTgDc3nbq56dQ9Taeb3QbedHpeD+BNpwBvNiy76ZTgzafE7KZTgjcblt10SvBmw7KbTgnefEpsbjp1T9PpZjGDN52edxt40ynAmw3LbjoFeHbTKcGb39aBN52e5zy76ZTgzYZlN50SvPke1tx06p6m081iBm86Pe42A950CvBiww520ynBi+9hx4U2bIIXG3bAm04BXmzYwW46JXjxKfFgN50SvOaU+OdiNuBNp+fdBt50CvBmw7KbTglefA872E2nBG82LLzp9AwPbzoFePE97GA3nRK8+JR4sJtOCV58DzvgTafnxQzedArw4nvYwW46BXh20ynBm0+J4U2n5znPbjoleLNh2U2nBG8+JTY3nYan6XSzmMGbTs+7DbzpFODNhmU3nRK8+R6W3XRK8GbDwptOAd5sWHbTKcGbT4nZTaew28CbTs/rAbzpFODNhmU3nRK8+R6W3XRK8GbDmptOw9x0Gp6m0x28+R4W3nQK8JpT4pvFjN10CrsNu+mU4M2GZTedErz5HpbddArw5qbTMDedhqfpdAdvvoeFN50CvPmUmN10SvDmZ1h20ynBa55hb/Z5eNPpeSWGN50CvPkelt10SvBowyZ48ykxvOn0POfhTacAbzYsu+kU4NlNpwRvfob1NJ1uFjN40+l5t4E3nQK82bDsplOCN58Ss5tOCV5s2AlvOgV4sWEnu+mU4MWnxPNiGzbAi0+Jp6fp9HOrnPCm0+NiNuFNpwAvvoed7KZTghe/rTPZTacEbzYsu+mU4M2GZTedErz4lHiam07T3HSa5qbT9DSdblZieNPpeauEN50CPNqwYbdhN50SvPiUeLKbTgnebFh20ynAs5tOCd58SmxuOk1z02mam07T3HSanqbTzUoMbzo9b5XwplOAN58Ss5tOCd58SmxuOk120ynMeXbTKcGbDWtuOk1z02mam07T3HSanqbTHbz5lNjcdJrsplOCRxs27DbmptM0N50mu+mU4M2GNTedprnpNM1Np2luOk1P0+kOHm3YsJiZm06T3XRK8GbDmptO09x0muymU4I3G9bcdJrmptM0N52muek0PU2nm90G3nR6Xg/gTacAbzYsu+mU4M33sOam02Q3ncKcZzedErzZsOam0zQ3naa56TQ9TaebxQzedHrebeBNpwBvNiy76ZTg0YZN8OZ7WHbTKcx5dtMpwZsNa246LXPTaZmbTsvcdFrmptO60IZ9XokXvOn0uFUueNMpwIvvYRe76ZTgxafEy9x0WuymU5jz7KZTgjcb1tx0Wuam0/I0nW52G3jT6Xk9gDedArzZsOymU4IX38MudtMpwZsNy246JXizYdlNpwQvPiVe5qbT8jSdbhYzeNPpebeBN50CvNmw7KZTgkcbNsGL72GXp+l0M+fhTacAbzYsu+kU4NlNpwRvPiVmN53CYgZvOj3vNvCmU4A3G5bddErw5ntYdtMpwZsNa246LU/T6Q7efA8LbzoFeLZhA7zmlPhmMWM3ncJuw246JXizYdlNpwDPbjolePM9rLnptMxNp+VpOt3Bm+9h4U2nAG8+JWY3nRK8+R6W3XQKixm86RTgzfew7KZTgkcbNsGbT4k9TaebOQ9vOgV4s2HZTacAz246JXjzKTG76ZTgNc+wN1slvOn0vJjBm04B3nwPy246JXjzKTG76RTg4U2n5zkPbzoFeLNh2U2nBM82bIA3nxJ7mk43ixm86fS828CbTgFebNjNbjolePE97GY3nRK82LD7Eht2w5tOAV58SrzZTacELz4l3uymU4BnN52et8oNbzo9LmYb3nQK8OJ72M1uOiV48T3sZjedErzZsPCmU4A3G5bddErw4lPizW46JXjzM6y56bTNTadtbjptT9Pp5mEE3nR63ufhTadneHbTKWyV7KZTgjefEpubTpvddApznt10SvBmw5qbTtvcdNqeptPNbgNvOj2vB/CmU4A3G5bddErwaMMmePMpMbvpFOY8u+mU4M2GNTedtrnptM1Np+1pOt0sZvCm0/NuA286BXizYdlNpwQvfltnm5tOm910CnOe3XRK8GbDmptO29x02uam0/Y0nW4WM3jT6Xm3gTedArzZsOymU4BnN50SvPkelt10CnOe3XRK8GbDsptOCd58SmxuOm1P0+lmMYM3nZ53G3jTKcCbDctuOiV48z0su+mU4M2GZTedErzZsOymU4I3nxKbm07b3HTanqbTzVYJbzo9L2bwplOAN9/DsptOCd58D8tuOiV4sWEPu+mU4MWGPeymU4IXnxKfi23YAC++hz3wptPjbnPgTacALzbsYTedAjy76ZTgxafEB950ep7z7KZTgjcblt10SvDiU+LjaTrd7DbwptPzegBvOj3Ds5tOQVLsplOCF9/DHnbTKcGbDWtuOh1z0+l4mk538OJ72ANvOj3Ds5tOYTFjN53CbsNuOiV4s2HZTacEL76HPeymU4I3G9bcdDqeptMNPLzpFODN97DsplOCF/9+2MNuOoXdht10SvDme9iPN53OH/8ZrzPKT54N4zksno/HlBJPgfFUGE+D8XxaE+f8+uJ9lf48rOY5v9jL+Ik+vOjTi7686NuLfrToH48RvRG9eNGrF7150b02nV6bTq9Np9em02vT6bXp8tp0eW26vDZdXpt+PDj0RnSvTZfXpstr0+W16fLadHttur023V6bbq9NPx4XeiO616bba9Ptten22nR7bXq8Nj1emx6vTY/Xph8PCb0R3WvT47Xp8dr0eG16rDbd12W16QvdatMXutWmL3SrTV/oVpu+0K02faFbbfpCt9r0hW616Qvda9PitWnx2rR4bVq8Nv14IOiN6F6bFq9Ni9emxWvT4rVp9dq0em1avTatXpt+PAb0RnSvTavXptVr0+q1afXatHlt2rw2bV6bNq9NPx7+eSO616bNa9PmtWnz2rR5bdq9Nu1em3avTbvXph+P/LwR3WvT7rVp99q0e23avTYdXpsOr02H16bDa1NtC+mF7rWptoX0QvfaVNtCeqF7baptIb3QvTbVtpBe6F6baltIL3SvTbUtpBe616baFtIL3WtTbQvphe61qbaF9EL32lTbQnqhe22qbSG90L021baQXuhem2pbSC90r021LaQXutem2hbSC91rU20L6YXutam2hfRC99pU20J6oXttqm0hvdC9NtW2kF7oXptqW0gvdK9NtS2kF7rWpsXbQireFlLxtpCKt4VULq1Ni7eFVLwtpOJtIRVvC6l4W0jF20Iq3hZS8baQireFVLwtpOJtIRVvC6l4W0jF20Iq3hZS8baQireFVLwtpOJtIRVvC6l4W0jF20Iq3hZS8baQireFVD7fQlrlT/T9k6fAeCqMp8F4OoxnwHgmjGfBeDaM57B4Omw+fzyZU2v9pa+66k+eCuNpMJ4O4xkwngnjWTCeDeM5LJ6P91oSD2w+D9h8HrD5PGDzecDm84DN5wGbzwM2nwdsPk/YfJ6w+Txh83nC5vOEzecJm88TNp8nbD5P2HyesPm8YPN5webzgs3nBZvPCzafF2w+L9h8XrD5vGDzecHm84bN5w2bzxs2nzdsPm/YfN6w+bxh83nD5vOGzecNm88HNp8PbD4f2Hw+sPl8YPP5wObzgc3nA5vPBzafD2s+14s1n+vFms/1Ys3nerHmc71Y87lerPlcL9Z8rh9/Obju9YunlfKTZ8N4Dovn4+/mJp5Pz+dR2i+esa5/5fn5xa//9sfvX/z6p/kTvprhmxm+k+Ffp0B/wF/XT/hhhp9m+GWG35a/sH3/hD9i+I+/gvtWeI1h7+A1hr2D1xj2Dh5t2ASPNmyCRxs2waMNm+DNhq1mwzazYZvZsM1s2GY27MdfJX4rvNmwzWzYZjZsMxu2mQ3bzYbtZsN2s2G72bAffxn8rfBmw3azYbvZsN1s2G427DAbdpgNO8yGHWbDfvx1/rfCmw07zIYdZsMOs2GH2bDTbNhpNuw0G3aaDfvxIMNb4c2GnWbDTrNhp9mw02zYZTbsMht2mQ27zIb9eFLjrfBmwy6zYZfZsMts2GU27DYbdpsNu82G3WbDfjyK8s5Xjbb5bZ1tfltnm9/W2WjDJnizYY/ZsMf8PuxhG3bPX/Dt+vkm+2EbNsCjDRumzTEb9pgNe8yGPeZn2CM2bLvEhm2X+Bm2XeJn2HaJn2HbhTbs82LWLvYp8eNu0y72KXGAFxu2XeJn2HahDRvgC9qwCd5sWE/T6Q7ebFh20ynBa+5hb9YDdtMpGJbddErwZsOym04Bnt10SvBowyZ4s2HNTadmbjo1c9OpmZtOzdN0utlt4E2n5/UA3nR6hmc3nYKk2E2nBI82bIJHGzbBmw1rbjo1c9OpmZtOzdx0auamU/M0nW4WM3jT6Xm3gTedArzZsOymU4IXf9KpsZtOCd5sWHPTqZmbTs3cdGqeptPNegBvOj0bFt50CvBmw7KbTgnebFh20ynBmw1rbjo1c9OpmZtOzdx0auamU/M0nW4WM3jT6Xm3gTedArzZsOymU4I3f9KJ3XRK8GbDmptOzdx0auamUzM3nZq56dTMTafmaTrdbJXwptPzYgZvOgV48yed2E2nBG++h2U3nRK82bDsplOCNxuW3XRK8JpT4pv1AN50ejYsvOkU4M2GZTedErzZsOamU2M3ncKcZzedErzZsOamUzc3nbq56dQ9Taefi1mHN50ed5t+oQ2b4MWG7eymU4IX38N2c9Ops5tOYc6zm04J3mxYc9Opm5tO3dx06uamUzc3nbq56dTNTadubjp1c9Opm5tO3dx06uamUzc3nbq56dTNTafuaTrdwYs/6dTNTafObjoleLNhzU2nbm46dXbTKcGbDWtuOnVz06mbm07d3HTqnqbTHbz5lBjedHreKtlNp7CYsZtOCd58D2tuOnV20ynBm0+JzU2nbm46dU/T6Q7efEoMbzoFeLZhA7z5HpbddAq7DbvplODNhmU3nQI8u+mU4M2nxOamUzc3nbqn6XQHbz4lhjedArz4d+t0dtMprAfsplOANzedOrvplODN97DsplOCNxvW3HTq5qZTNzeduqfpdAdvPiWGN52eFzN20ynsNuymU4I3G9bcdOrsplOCN9/DmptO3dx06p6m0w08vOkU4M33sOymU4I3nxKzm04J3vwM62k63ezz8KbT80oMbzoFePE97GA3nRK8+JR4sJtOCV5s2HGJDTvYTacELz4lHuymU4IXvw874E2nx/VgwJtOAd5sWHbTKcGLT4kHu+mU4M2GhTedArzZsOymU4IXnxIPdtMpwYt/A/uAN52edxt40ynAmw3LbjolePE97GA3nRK82bDwptMzPLzpFODF97CD3XRK8OZTYnbTKSxm8KbT824DbzoFeLNh2U2nBG++h2U3nRK82bCeptMdvNmw8KZTgDefErObTgnefErMbjqFrRLedHpezOBNpwBvvodlN50SvPkelt10SvBmw8KbTgHebFh20ynBm0+J2U2nBG9+hvU0nW62SnjT6XkxgzedArz5HpbddErw5lNidtMpwZsNy246JXizYdlNpwRvPiU2N52Guek0PE2nm60S3nR6XszgTacAb76HZTedErz5lJjddErwZsOym04J3mxYdtMpwZtPiT1Np5vdBt50el4P4E2nAG82LLvplODN97DsplOCNxvW03S6gzcbFt50CvDiU+LJbjolePEp8WQ3nZ63yglvOj0uZvNCGzbBi+9hJ7vplODF97CT3XRK8GbDwptOAd5sWHbTKcGLT4knu+mU4MXPsNPcdJrmptP0NJ1u9nl40+l5JYY3nQK8+JR4sptOCV58SjzNTafJbjqFOc9uOiV4s2HNTadpbjpNT9PpZreBN52e1wN40ynAmw3LbjolePMpMbvplODNhmU3nRK82bDsplOCN58Sm5tO09N0ulnM4E2n590G3nQK8GbDsptOCd58D8tuOgV4eNPpec6zm04J3mxYdtMpwbMNG+DNp8SeptPNYgZvOj3vNvCmU4A3G5bddErw5ntYdtMpwZsNC286BXizYdlNpwRvPiVmN50SvOaU+GYxgzednncbeNMpwJsNy246JXi0YRO8+R7W03S6mfPwplOANxuW3XQK8OymU4I3nxKzm04J3nwPC286PS9m8KZTgDffw7KbTgnefA/LbjoFeHjT6XnOs5tOCd5sWHbTKcGzDRvgzafEnqbTzWIGbzo97zbwplOAFxt2sZtOCV58D7vYTacELzbsusSGXeymU4IXnxIvdtMpwYuLEwvedHpcDxa86RTgzYZlN50SvPgedrGbTgnebFhz02mZm07L03S6gxffwy540ynAa06JbxYzdtMp7DbsplOCNxuW3XRK8OJ72MVuOiV4s2HNTaflaTrdwYvvYRe86RTgzafE7KZTgjc/w7KbTgle8wx7s8/Dm07PKzG86fQMz246hcWM3XRK8OZTYnbTKcGbDQtvOgV4s2HZTacEb36GZTedAryn6XSzmMGbTs+7DbzpFODNhmU3nRK8+ZSY3XRK8GbDwptOAd5sWHbTKcGbT4nZTacEbz4l9jSdbrZKeNPpeTGDN50CvPkelt10SvDmt3XYTacEbzYsu+mU4M2GZTedErz5lNjcdFrmptMyN52Wp+l0sxLDm07PWyW86RTgzfew7KZTgkcbNsGbT4nZTacw59lNpwRvNiy76RTgzU2nZW46LXPTaZmbTsvTdLpZieFNp+etEt50CvDmU2J20ynBi0+Jt7nptNlNp+c5v9lNpwQvNuy+NIa9gxefEm9z02mbm07b03S6gxefEm9z02mzm04JXnxKvM1Np21uOm120ynBmw1rbjptc9Npm5tO29x02p6m0x285hn2ZjEzN502u+mU4M2GNTedtrnptNlNpwRvNqy56bTNTadtbjptc9Npe5pON7sNvOn0vB7Am04B3mxYdtMpwZvvYc1Np81uOoU5z246JXizYc1Np21uOm1z02l7mk43ixm86fS828CbTs/w7KZTMCy76ZTgzfew5qbTZjedwpxnN50SvNmw5qbTNjedtrnptM1Np21uOm1P0+lmJYY3nZ63SnjTKcCb72HZTacEbz4lNjedNrvpFOY8u+mU4M2GNTedtrnptD1Np5vdBt50el4P4E2nAG82LLvplODN97DsplOCNxuW3XRK8GbDsptOCd58SmxuOm1P0+lmMYM3nZ53G3jT6Rme3XQKhmU3nRK8+R6W3XRK8GbDwptOAd5sWHbTKcGb72HZTadn+MNuOj0vZgfedHrcbQ686RTgxYY9F9qwCV58D3vYTacELzbsMTedjqfpdAMPbzoFePEp8WE3nRK85pT4ZjFjN53CbsNuOiV4s2HZTacEL76HPeymU4A3N52Ouel0PE2nO3jxPeyBN50CvPiU+LCbTglefA972E2nsJjBm07P8OymU1gP2E2nBC++hz3splOCNxsW3nQK8GbDsptOCd58SsxuOgV4dtMpwWueYW+2SnjT6XkxgzedAjzasGE9YDedErz5lJjddErwZsPCm07P8OymU4I3nxKzm04J3nxK7Gk63Sxm8KbT824DbzoFeLNh2U2nBG++h2U3nRK82bCeptMdvNmw8KZTgDefErObTgnefErMbjqFrRLedHpezOBNpwBvvodlN50SvPkelt10SvBmw8KbTgHebFh20ynBm0+J2U2nBG9+hjU3nY656XTMTafjaTrdPIzAm07P+zy86RTgzafE7KZTgDc3nY656XTYTacw59lNpwRvNqy56XTMTafjaTrd7DbwptPzegBvOj3Bn4vddHqU1Avea9gXvPeU+AXvPSV+wXsN+4L3GvYF7zXsC957SvyC954Sv+C9p8Tn8jSdfixmL3hvNfEF731b5wVvNiy76ZTgvW/rvOC9b+u84M2GZTedErzZsOKm0wveew/7gveeEr/gvdXEFzzasGG3gTedArzZsOymU4L33sO+4L33sOdiN53CnGc3nRK82bDsplOCZxs2wJtPiT1Np5vFDN50et5t4E2nAG82LLvplODN97DsplOCNxuW3XRK8GbDsptOCd58SixuOr3gzafEnqbTzVYJbzo9L2bwplOAN9/DsptOCd58D8tuOiV4s2HZTacEbzYsu+mU4M2nxOKm0wvefA8Lbzo97zbwplOANxuW3XRK8OZ7WHbTKcDDm07Pc57ddErwZsOym04Jnm3YAO8tTrzgvcWJF7z5HpbddEqSMhuW3XRK8OZ7WHHT6QVvNqy46fSCN9/DwptOAd58SsxuOoXFjN10CrsNu+mU4M2GZTedErz5HpbddErwZsOKm04veLNh4U2nAC++hy3splOC9/5+2Be8+JNOhd10SvBowyb4Txv2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OgV48SnxZDedErz4Hnaym05ht2E3nRK82bDsplOCF9/DTnbTKcCbm07T3HSanqbTHbz4lHjCm04BXvy7dSa76RTWA3bTKcGbDctuOgV4dtMpwYvvYae56TTNTadpbjpNc9NpeppOd/DmU2J40+l5MWM3ncJuw246JXizYc1Np8luOiV4tGETvNmw5qbT9DSd7uDN97DwptMzPLvplODNp8TsplOCNz/DeppON/s8vOn0vBLDm04B3nwPy246JXjzKTG76ZTgzYaFN50CvNmw7KZTgjc/w7KbTmG3gTedntcDeNMpwJsNy246JXjzKTG76ZTgzYaFN50CvNmw7KZTgjefErObTgle/BvYJ7zp9LzbwJtOAd5sWHbTKcGjDZvgze/DeppON3Me3nQK8GbDsptOAZ7ddErw5lNidtMpLGbwptPzbgNvOgV4s2HZTacEb76HZTedErzYsMvTdLqDFxt2wZtOAV58SrwutmEDvPiUeLGbTs9b5YI3nR4XswVvOgV48T3sYjedErz4Hnaxm04J3mxYeNMpwJsNy246JXjxKfFiN50SvPkZ1tN0utkq4U2n58UM3nQK8OJ72MVuOiV48SnxYjedErzZsOymU4I3G5bddErw5lNic9NpmZtOy9N0utkq4U2n58UM3nQK8OJ72MVuOiV48ykxu+mU4M2GZTedErzZsOymU4I3nxJ7mk43uw286fS8HsCbTgHebFh20ynBm+9h2U2nBG82rKfpdAdvNiy86RTgzafE7KZTgjefErObTmGrhDednhczeNMpwJvvYdlNpwRvvodlN50SvNmw8KZTgDcblt10SvDmU2J20ynBm59hzU2nZW46LU/T6WafhzednldieNMpwJtPidlNpwRvPiU2N50Wu+kU5jy76ZTgzYY1N52Wuem0PE2nm90G3nR6Xg/gTacAbzYsu+mU4M2nxOymU4I3G5bddErwZsOym04JXnxKvM1Np+1pOv1czDa86fS422x40ynAiw272U2nBC++h93splOCFxt2s5tOAZ7ddErw4nvYzW46JXjxKfH2NJ1uFjN40+l5t4E3nQK82bDsplOCF9/DbnbTKcGbDQtvOgV4s2HZTacELz4l3uymU4LXnBLfLGbwptPzbgNvOj3Ds5tOwbDsplOCF9/DbnbTKcGbDQtvOgV4s2HZTacEbz4lZjedAjy76ZTg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/vzq/qunz//ef/93vLj/6unzv7j/6ml/fnH/1fPnf+/vn8eL+6+eP/+Lv3+fPv97//7VeHX/1bP+8Or+q6fP/97fP49X9189e/4391+NN/dfjVf3Xz3rz6/uv3r6/K/9/n3an1/cf/X8+d/77/+OF/dfPX/+N//++cX9V0+f/8X9V8+f/71//2q8uv/qWX94df/V0+d/7ffv8+d/8++f39x/Nd7cfzVe3X/1rD+/uv/q2fO/uP/qaX9+cf/V8+d/77//O17cf/X8+V/8/fusv724/+r587/571+9uP/q+fO/+ffPr+6/evb8r+6/evr8b/7985v7r8ab+6/Gq/uvnvXnV/dfPX3+9/77v+PF/VfPn/+9//7veHH/1dPnf3H/1dP+9uL+q+fP/+a/f/Xi/qvnz//i799n/eHV/VdPn//Nv39+df/V0+d/8/375v6r8er+q2f9+dX9V0+f/83//u+L+6+eP/9rv3+f9ucX9189f/43//75xf1Xz5//zX//6sX9V0+f/9X9V8/6w6v7r54+/5t///zq/qunz//a79/nz//m+/fV/VfP+vOr+6+ePv+b//3fF/dfPXv++eL+q2f9eb64/+r587/398/zxf1Xz5//xd+/T5//vX//ar66/+pJf5iv7r96+vzv/f3zfHX/1bPnf3P/1Xxz/9V8df/Vk/48X91/9fT5X/v9+7Q/v7j/6vnzv/ff/50v7r96/vzv/f3zfHH/1dPnf3H/1fPnf+/fv5qv7r961h9e3X/19Plf+/37/Pnf+/vn+eb+q/nm/qv56v6rZ/351f1Xz57/xf1XT/vzi/uvnj//e//93/ni/qvnz//i799n/e3F/VfPn/+9f/9qvrj/6vnzv/n3z6/uv3r2/K/uv3r6/G/+/fOb+6/mm/uv5qv7r57151f3Xz19/vf++7/zxf1Xz5//vf/+73xx/9XT539x/9XT/vbi/qvnz//mv3/14v6r58//4u/fZ/3h1f1XT5//zb9/fnX/1dPnf/P9++b+q/nq/qtn/fnV/VdPn/+9//7vfHH/1fPnf+3379P+/OL+q+fP/+bfP7+4/+r587/571+9uP/q6fO/uv/qWX94df/V0+d/8++fX91/9fT5X/v9+/z533z/vrr/6ll/fnX/1dPnf+33724/f3qPx5+e/7Xfv0+f/8X9V3vHPz9dHzX+9Pyv/f59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0Xsmh6P3TA5H75kcjt4zORz/+p7p5QfHUcoTjr39wHj9B7n/62f/36cff/0W+dynL2/99PWtn7699dPHWz99f+unH2/99POtn3699dO/9bu2vPW7trz1u7a89bu2vPW79q9f3pv79G/9ri1v/a4tb/2uLW/9ri1v/a6tb/2urW/9rq1v/a6tb/2u/fu3VKY+/Vu/a+tbv2vrW79r61u/a+tbv2vbW79r20u/a2cb//zw/O0pfnv6l37XPn36l37XPn36l37XPn36l37XPn36l37XPn36l37XPn36l37XPn36l37XPnv6eOl37dOnf+t3bbz1uzbe+l3792/3SX36t37Xxlu/a+Ot37Xx1u/aeOt3bX/pd+16/PjhVf+0a/tLv2tLiZ9/Y7jM/qfnf+m37Ree/6Xft194/pd+437h+V/6nfuF53/pt+4Xnv+l37tfeP6XfvN+4flf+t37/PnHS799v/D8b/7+HW/+/h1v/v79+7705Od/8/fvePP373jz9+948/fvePP373zz9+988/fvfPP373zz9+/f9/smP/+bv3/nm79/55u/f+ebv3/nm79/15u/f9ebv3/Xm79/15u/f/++jzL5+d/8/bve/P273vz9u978/bve/P273/z9u9/8/bvf/P273/z9+/f9acnP/+bv3/3m79/95u/f/ebv39f2Uj19/vnaZqovPP97v3/na9upvvD87/3+nY/3fv/O13ZUfeH53/v9O1/bU/WF53/v9+98bVfV8+d/bVvVF57/zd+/r22s+sLzv/n797WtVV94/jd//762ueoLz//m79/Xtld94fnf/P372garLzz/m79/X9ti9YXnf/P372ubrL7w/G/+/n1tm9UXnv/N37+vbbT6wvO/+fv3ta1WX3j+N3//vrbZ6gvP/+bv39e2W33h+d/8/fvahqsvPP+bv39f23L1hed/8/fva5uuvvD8b/7+fW3b1Ree/83fv69tvPrC87/5+/e1rVdfeP43f/++tvnqC8//5u/f17ZffeH53/z9++b+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r+eb+q/nm/qv55v6r9eb+q/Xm/qv15v6r9eb+q/V47/fvenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenP/1Xpz/9V6c//VenH/Ve3rx/PXFX96/td+/7bRfjx/W/tPz//n92+t8eP5a/Tz81//DfbH81//OXOfn3/G48cPzyhx/uE1y89PnlF//+F/nn689dPPt3769cJPvx/1x//j2Y9Y5x8utezHz/+Z17b/cNgNOqxwan3oYQvpsJV02EY6bJAO+8ql5d8edv522Hj84bCv3HH+9b/Z8uuw9U+HfeVKlH5YUoMapAY1SQ1qkhrUJDWoSWpQk9SgJqlBTVKDmqQGNUkNapIa1CI1qEVqUIvUoBapQS1Sg1qkBrVIDWqRGtQiNahFalCb1KA2qUFtUoPapAa1SQ1qkxrUJjWoTWpQm9SgNqhB7QeoQe0HqEHtB6hB7QeoQV2fQTosqEHtB6hB7QeoQe0HqEHtB6lBFVKDKqQGVUgNqpAaVCE1qEJqUIXUoAqpQRVSgyqkBlVJDaqSGlQlNahKalCV1KAqqUFVUoOqpAZVSQ2qkhpUIzWoRmpQjdSgGqlBNVKDaqQG1UgNqpEaVCM1qEZqUEFqUEFqUEFqUEFqUEFqUEFqUEFqUEFqUEFqUEFqUJ3UoDqpQXVSg+qkBtVJDeqlNeDZDeqlreHZpeKlJePphyU1KJKTfJOc5JvkJN8kJ/kmOck3yUm+SU7yTXKSb5KTfJOc5JvkJN8kJ/kmOck3yUm+SU7yTXKSb5KTfJOc5JvkJN8kJ/kmOck3yUm+SU7yTXKSb5KTfJOc5JvkJN8kJ/kmOck3yUm+SU7yTXKSb5KTfJOc5JvkJN8kJ/kmOck3yUm+SU7yTXKSb5CTvDxATvLrsJwGdR2W06Cuw3Ia1HXYIB2W06Cuw3Ia1HVYToO6DstpUNdhSQ0K5CS/DktqUCAn+XVYUoMCOcmvw5IaFMhJfh2W1KBATvLrsKQGBXKSX4clNSiQk/w6LKlBgZzk12FJDQrkJL8OS2pQICf5dVhSgwI5ya/DkhoUyEl+HZbUoEBO8uuwpAYFcpJfhyU1KJCT/DosqUGBnOTXYUkNCuQkvw5LalAgJ/l1WFKDAjnJr8OSGhTISX4dltSgQE7y67CkBgVykl+HJTUokJP8OiypQYGc5NdhSQ0K5CS/DktqUCAn+XVYUoMCOcmvw5IaFMhJfh2W1KBATvLrsKQGBXKSX4clNSiQk/w6LKlBgZzk12FJDQrkJL8OS2pQICf5dVhSgwI5ya/DkhoUyEl+HZbUoEBO8uuwpAYFcpJfhyU1KJCT/DosqUGBnOTXYUkNCuQkvw5LalAgJ/l1WFKDAjnJr8OSGhTISX4dltSgQE7y67CgBlVITvJCcpIXkpO8kJzk5RGkw4IaVCE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkheQkLyQneSE5yQvJSV5ITvJCcpIXkpO8kJzkleQkryQneSU5ySvJSV4fQTosqEFVkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSV5JTvJKcpJXkpO8kpzkleQkryQneSU5ySvJSd5ITvJGcpI3kpO8kZzk7RGkw4IaVCM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkjeQkbyQneSM5yRvJSd5ITvJGcpI3kpO8kZzkQXKSB8lJHiQneZCc5PEI0mFBDSpITvIgOcmD5CQPkpM8SE7yIDnJg+QkD5KTPEhO8iA5yYPkJA+SkzxITvIgOcmD5CQPkpM8SE7yIDnJg+QkD5KTPEhO8iA5yYPkJA+SkzxITvIgOcmD5CQPkpM8SE7yIDnJg+QkD5KTPEhO8iA5yYPkJA+SkzxITvIgOcmD5CQPkpM8SE7yIDnJg+QkD5KTPEhO8iA5yYPkJA+SkzxITvIgOcmD5CQPkpM8SE7yIDnJg+QkD5KTPEhO8iA5yYPkJA+SkzxITvIgOcmD5CQPkpM8SE7yIDnJg+QkD5KTPEhO8iA5yYPkJA+SkzxITvIgOcmD5CQPkpM8SE7yIDnJg+QkD5KTPEhO8iA5yYPkJA+SkzxITvIgOcmD5CQPkpM8SE7yIDnJg+QkD5KTPEhO8iA5yTvJSd5JTvJOcpJ3kpO8P4J0WFCD6iQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpO8k5zkneQk7yQneSc5yTvJSd5JTvJOcpJ3kpN8kJzkg+QkHyQn+SA5yccjSIcFNahBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5yQfJST5ITvJBcpIPkpN8kJzkg+QkHyQn+SA5ySfJST5JTvJJcpJPkpN8PoJ0WFCDmiQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kpzkk+QknyQn+SQ5ySfJST5JTvJJcpJPkpN8kZzk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JCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykheSk7yQnOSF5CQvJCd5ITnJC8lJXkhO8kJykleSk7ySnOSV5CSvJCd5fQTpsKAGVUlO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5JTnJK8lJXklO8kpykleSk7ySnOSV5CSvJCd5IznJG8lJ3khO8kZykrdHkA4LalCN5CRvJCd5IznJG8lJ3khO8kZykjeSk7yRnOSN5CRvJCd5IznJG8lJ3khO8kZykjeSk7yRnOSN5CRvJCd5IznJG8lJ3khO8kZykjeSk7yRnOSN5CRvJCd5IznJG8lJ3khO8kZykjeSk7yRnOSN5CRvJCd5IznJG8lJ3khO8kZykjeSk7yRnOSN5CRvJCd5IznJG8lJ3khO8kZykjeSk7yRnOSN5CRvJCd5IznJG8lJ3khO8kZykjeSk7yRnOSN5CRvJCd5IznJG8lJ3khO8kZykjeSk7yRnOSN5CRvJCd5IznJG8lJ3khO8kZykjeSk7yRnOSN5CRvJCd5IznJG8lJ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kk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOSL5CRfJCf5IjnJF8lJvh5BOiyoQS2Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvklO8k1ykm+Sk3yTnOTXZ5AOC2pQm+Qk3yQn+SY5yTfJSb5JTvJNcpJvkpN8k5zkm+Qk3yQn+SY5yTfJSb5JTvJNcpJvkpN8k5zkm+Qk3yQn+SY5yTfJSb5JTvJNcpJvkpN8k5zkm+Qk3yQn+SY5yTfJSb5JTvJNcpJvkpN8k5zkm+Qk3yQn+SY5yTfJSb5JTvJNcpJvkpN8k5zkm+Qk3yQn+SY5yTfJSb5JTvJNcpJvkpN8k5zkm+Qk3yQn+SY5yTfJSb5JTvJNcpJvkpN8k5zkm+Qk3yQn+SY5yTfJSb5JTvJNcpJvkpN8k5zkm+Qk3yQn+SY5yTfJSb5JTvJNcpJv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3klO8k5ykvdHkA4LalCd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykg+Sk3yQnOSD5CQfJCf5eATpsKAGNUhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5JDnJJ8lJPklO8klyks9HkA4LalCT5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+S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8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJ3klO8k5ykneSk7yTnOSd5CTvJCd5JznJO8lJPkhO8kFykg+Sk3yQnOTjEaTDghrUIDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOSD5CQfJCf5IDnJB8lJPkhO8kFykg+Sk3yQnOST5CSfJCf5JDnJJ8lJPh9BOiyoQU2Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJPklO8klykk+Sk3ySnOST5CSfJCf5JDnJJ8lJvkhO8kVyki+Sk3yRnOTrEaTDghrUIjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yRnOSL5CRfJCf5IjnJF8lJvkhO8kVyki+Sk3yR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2+2339vvrGULOGu5+l3yO2vZbrvTOu3223Pid9ay+Z21bH5nLdvw2+/td9ayDb/93n5nLdvwO60z/Pac+J21bH5nLZvfWcv9Ybffe/c7a7k/7PZ7735nLfdHd/up3B92e052v7OWu99Zy93vrOX+sNvvvfudtdw3u/3eu99Zy32zO62zf/tZy/WM8ztrufudtdz9zlrum91+793vrOXe7PZ7735nLfdmd1pnb3Z7Tna/s5a731nL3e+s5d7s9nvvfmct92a333v3O2u573andfbdbs/J7nfWcvc7a7n7nbXcd7v93rvfWct9t9vvvfudtdy73WmdvdvtOdn9zlrufmctd7+zlnu32++9+5213Lvdfu/d76zl3u1O6+yH3Z6T3e+s5e531nL3O2u5f/tZy/Xvkt9Zy/2w2++9+5213A+70zr74bfnxO+s5e531nL3O2u5n3b7vXe/s5b7abffe/c7a7mfdqd19tNvz4nfWcvd76zl7nfWcr/s9nvvfmct94CzlqvfJb+zlvtld1pnv/z2nPidtdz9zlrufmct99tvv7ffWcv99tvv7XfWcr/tTuvst9+eE7+zlrvfWcvd76zlPvz2e/udtdyH335vv7OWe/BZy1c/lcNvz4nfWcvd76zl7nfWch92+72731nL/rDb7939zlr2h91pnf7objOu+5217H5nLbvfWcv+sNvv3f3OWvbNbr939ztr2Te70zp9s9tz0v3OWna/s5bd76xl3+z2e3e/s5Z9s9vv3f3OWvZmd1qnN7s9J93vrGX3O2vZ/c5a9ma337v7nbXszW6/d/c7a9l3u9M6fbfbc9L9zlp2v7OW3e+sZd/t9nt3v7OWfbfb7939zlr23e60Tu92e06631nL7nfWsvudtezfftZy/bvkd9ayd7v93t3vrGXvdqd1erfbc9L9zlp2v7OW3e+sZT/s9nt3v7OW/bDb7939zlr2w+60Tj/s9px0v7OW3e+sZfc7a9lPu/3e3e+sZQ84a7n6XfI7a9lPu9M6/fTbc+J31rL7nbXsfmct+2W337v7nbXsl91+7+531rJfdqd1+uW358TvrGX3O2vZ/c5a9ttvv7ffWct+++339jtr2YPPWr76qbz99pz4nbXsfmctu99Zy3777ff2O2vZh99+b7+zln34ndb59rOW6xnnd9ay+5217H5nLfvw2+/td9byeNjt9z78zloeD7vTOsfDbs/J8bD79T78zloefmctj4fdfu/D76zl8bDb7334nbU8NrvTOsdmt+fk8DtrefidtTz8zloem91+78PvrOWx2e33PvzOWh7N7rTO0ez2nBx+Zy0Pv7OWh99Zy6PZ7fc+/M5aHs1uv/fhd9byaHandY7dbs/J4XfW8vA7a3n4nbU8vv2s5fp3ye+s5bHb7fc+/M5aHrvdaZ1jt9tzcvidtTz8zloefmctj2633/vwO2t5dLv93offWcuj253WObrdnpPD76zl4XfW8vA7a3kcdvu9D7+zlkfAWcvV75LfWcvjsDutcxx2e04Ov7OWh99Zy8PvrOVx2u33PvzOWh6n3X7vw++s5XHandY5Tr89J35nLQ+/s5aH31nL47Lb7334nbU8Lrv93offWcsj+Kzlq5/Ky2/Pid9Zy8PvrOXhd9byuPz2e/udtTxuv/3efmctj9vutM7x7Wct1zPO76zl4XfW8vA7a3ncfvu9/c5aHsNvv7ffWctj+J3WGX57TvzOWh5+Zy0Pv7OWx/Db7+131vIYdvu9T7+zlufD7rTO+bDbc3L6nbU8H3a/3qffWcvzYbff+/Q7a3k+7PZ7n35nLc/N7rTOudntOTn9zlqefmctT7+zludmt9/79DtreW52+71Pv7OW52Z3WudsdntOTr+zlqffWcvT76zl+e1nLde/S35nLc9mt9/79DtreTa70zpns9tzcvqdtTz9zlqefmctz91uv/fpd9by3O32e59+Zy3P3e60zrnb7Tk5/c5ann5nLU+/s5Znt9vvffqdtTwDzlqufpf8zlqe3e60ztnt9pycfmctT7+zlqffWcvzsNvvffqdtTwPu/3ep99Zy/OwO61zHnZ7Tk6/s5an31nL0++s5Xna7fc+/c5anqfdfu/T76zlGXzW8tVP5em358TvrOXpd9by9DtreZ52+71Pv7OW52W33/v0O2t5Xnandc5vP2u5nnF+Zy1Pv7OWp99Zy/Oy2+99+p21PG+//d5+Zy3P2+60znn77TnxO2t5+p21PP3OWp63335vv7OW5+2339vvrOU5/E7rDL89J35nLU+/s5an31nLc/jt9/Y7a3kOv/3efmctr4fdaZ3rYbfn5PI7a3n5nbW8Hna/3tfDbr/35XfW8nrY7fe+/M5aXg+70zrXZrfn5PI7a3n5nbW8/M5aXt9+1nL9u+R31vLa7PZ7X35nLa/N7rTOtdntObn8zlpefmctL7+zllez2+99+Z21vJrdfu/L76zl1exO61zNbs/J5XfW8vI7a3n5nbW8drv93pffWcsr4Kzl6nfJ76zltdud1rl2uz0nl99Zy8vvrOXld9by6nb7vS+/s5ZXt9vvffmdtby63Wmdq9vtObn8zlpefmctL7+zltdht9/78jtreR12+70vv7OWV/BZy1c/lYfdnpPL76zl5XfW8vI7a3kddvu9L7+zltdpt9/78jtreZ12p3Wubz9ruZ5xfmctL7+zlpffWcvrtNvvffmdtbwuu/3el99Zy+uyO61zXX57TvzOWl5+Zy0vv7OW12W33/vyO2t5XX77vf3OWl633Wmd6/bbc+J31vLyO2t5+Z21vG6//d5+Zy2v22+/t99Zy2v4ndYZfntO/M5aXn5nLS+/s5bX8Nvv7XfW8hp++739zlpew+60zv2w23Ny+521vP3OWt5+Zy3vR3f7Xbr9zlreD7v93rffWcv7YXda537Y7Tm5/c5a3n5nLW+/s5b3Zrff+/Y7a3lvdvu9b7+zlvdmd1rn3uz2nNx+Zy1vv7OWt99Zy7vZ7fe+/c5a3gFnLVe/S35nLe9md1rnbnZ7Tm6/s5a331nL2++s5b3b7fe+/c5a3rvdfu/b76zlvdud1rl3uz0nt99Zy9vvrOXtd9by7nb7vW+/s5Z3t9vvffudtbyDz1q++qnsdntObr+zlrffWcvb76zl3e32e99+Zy3vw26/9+131vI+7E7r3N9+1nI94/zOWt5+Zy1vv7OW92G33/v2O2t5n3b7vW+/s5b3aXda5z799pz4nbW8/c5a3n5nLe/Tbr/37XfW8j7t9nvffmct78vutM59+e058Ttrefudtbz9zlrel91+79vvrOV92e33vv3OWt633Wmd+/bbc+J31vL2O2t5+521vG+//d5+Zy3v22+/t99Zy/v2O60z/Pac+J21vP3OWt5+Zy3vbz9ruf5d8jtreQ+//d5+Zy3v4XdaZ9jtORl+Zy2H31nL4XfWcjzs9nuPh92v93jY7fcefmctx8PutM542O05GX5nLYffWcvhd9ZybHb7vYffWcsRcNZy9bvkd9ZybHandcZmt+dk+J21HH5nLYffWcvR7PZ7D7+zlqPZ7fcefmctR7M7rTOa3Z6T4XfWcvid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xtnfe+Ps771x9vfeOPt7b5z9vTdOf++N09974/T33jj9vTdOf++N09974/T33jj9vTdOf++N09974xzvvXGO9944x3tvnOO9N87x3hvneO+Nc7z3xjnee+Mc771xjvfeOOd7b5zzvTfO+d4b53zvjXO+98Y533vjnO+9cc733jjne2+c8703zvXeG+d6741zvffGud5741zvvXGu994413tvnOu9N8713hvneu+Nc7/3xrnfe+Pc771x7vfeOPd7b5z7vTfO/d4b537vjXO/98a533vjjPfeOOO9N854740z3nvjjPfeOOO9N854740z3nvjjPfeOOOtN05/vPXG6Y+33jj90d57yP29h+zvPeTx3kOe7z3k9d5D3u895FtvnL699cbp21tvnL619x5yf+8h+3sPebz3kOd7D3m995D3ew/51hunt7feOL299cbprb33kPt7D9nfe8jjvYc833vI672HvN97yPfeOPt7b5z9vTfO/t4bZ3/vjbO/98bZ33vj7O+9cfb33jj7e2+c/b03Tn/vjdPfe+P09944/b03Tn/vjdPfe+P09944/b03Tn/vjdPfe+Mc771xjvfeOMd7b5zjvTfO8d4b53jvjXO898Y53nvjHO+9cY733jjne2+c8703zuve63lsP3drnkf/j92aL7aSnu3jaMK5jxf/xv4N/0YX/Bu/DqKcY3/xbxzf8G+c3/BvXN/wb9yv/43j+Pg37v6/jvn4v/83Xve4/8t/Y6HV64a4+N9o3/Bv7N/wb0zm+Xj8/DfO7f5fx/z4hn/jFPwbK62ub/g37m/4N8b//b/x+ivFeX4c3jrP8/E/jvnrTxrif6MJ/o2VVvs3/Bv9G/6N4xv+jdfz/Pn/Pv6N8b+ufV5/4BH/G7fg31hpNf7v/43x+IZ/Y/uGf+P1PL8eH+/aq7f/ccxff+4S/xtd8G+stDq+4d84v+HfuL7h33g9z8fjJxtcj75awx395wNt/7Hg23/+G+P//N84Xn8pFP8b2zf8G+1//zeePze/xvz6/d/49x+36/ppkHa3X+2Jbb9f/PU1fj7GvZ2//e328+n3P/rp+x/99Mcf/fSn89Pf7ed/+e4vn/76o5/+/qOffvzJT789nJ9+e767P15Xvz3Hb8+//eHPb/2+/cLzW79xv/D81u/cLzy/9Vv3C89v/d79wvNbv3m/8PzW794vPL/123f9/O0Pf/+2P/z92/7w92/7w9+/7Q9//7Y//P3b/vD3b/vD37/N+/17nP1Xu/B+9fze79/l8+/e79/183u/f9fP7/3+vc6Pdvnd2n88/7//euzj51+Pvh2Lv96eHdPHhziP81V3Zvd+u0er0xOp8/zy8lOdY3s5U7xXGupqvdcl6mq9VzHqar3XPP9ltcf9Ue3dXlXrvUISV9u911PBb6zuvVqLVifTWnD5K9gzre3W1fZS1ZZaq/VUa7XlGy7VWm1Zbaa12rn9TOkfZ7teVZtprbas9si0VltXm2ntta4201pqXS19sk/W1UemtZdenVJrtaNUX+0o1Vc7UvXVltWW6qudmdZq62pLrdXOUmu1M9NabV1tL1VtprXUutpMa6l1tZnWUutqM62l2v4Tgkb77Srn36rNtJZaVntlWkutq+Wb4yf0f7H/7DN1Sn2jvDKt1dbVlup7XaX6Xlepb5RXqf1kV6lvlHepb5R3qb7XXarvdZfqe92l+l53qb7XnWktJWemO9PaS69OqW+Ud6pvlKtqR6pvlMtqM63V1tWm2pu/YqyRqu+1rLZXWr2MUmu1Ueob5Sj1jXKU2ps/KvW9zkelvtf54BvlnJlO70zmcHUqfaM8H71UtZW+UZ7eGdTyait9ozy9M67l1ZZaq5lnaKurrfSN8jTP51ZXW+kb5Wme/a2utlLf6zTPFQ9mJvPU8mh1Kn2jPM0T1MXVmuetq6ut9I3yNM9yFzOWefK7utpeafViniqvrrbSN8rTPLFeXW2lb5SneRq+uFrz7Hx1tZnWUr+fGu2v3repcvnX1WZaS62r7aWqzbSWWlebaS21rjbTWmpdbdZMitfVZs2keFltqtz8dbWl1lKpcu3X1ZZaS6XKtV9XW2otlSrXfl1tqbVUqlz7dbWl1lKpcu1X+V5nqlz7dbXshf/7r+nOBXLwP1WnV/oaXirX/iyVa3+WyrU/c+Xar3Y6lMq1P1Pl2i+/IZbKtT9L5dqfpXLtz1K59mepXPuzVK79mSrXXs5MqXLw9eqU2jufKjd/XW2pvfOpcvDX1ZbaO58r135Zbam1Wqpc+3W1pfbOp8q1X1dbau98qVz7s1Su/Zkq117OTKly8PXq9Err8FS5+etqS32jTJWDv6621DfKXLn2q2pT5dovVy+pcu3X1Zb6Rpkq135dbS9Vbam+V6lc+zNVrr2cmVLl4OvVqfSN8kqVm7+uttI3yitVDv662krfKJ+1lKq20lrtSpVrv6620jfKK1Wu/braSt8or1K59lepXPsrVa796kTwlSrXfl1tL1VtpUyKK1Wu/eq095Uqp35dbapMivuDb9v98g2UKpNiVW2q3Pl1takyKZbVst9r3n++UuXU69XplXqaqXLt19VW2u91pcq1X1dbab/XlSrXflltqVz7K1Wu/braSvu9rlS59utqe6lqS31DTJVrv66W/V6fMFOqHHy9OqX2e6XKzV9XW2q/V6rc/HW1pfZ7pcrNX1dbaq2WKjd/XW2p/V6pcvPX1Zba75UqN39dbam+F7n5nzETufmfqtMrrcNL5eZfpXLzr1K5+Vep3PyrVG7+VSo3/yqVm3+Vys2/SuXmX6Vy869SuflXqdz8i9z8z5iJ3PxP1Sn1jbJUbv5VKjf/KpWbf5XKzb9K5eZfpXLzr1K5+Vep3PyrVG7+VSo3/yqVm3+Vys2/UuXmL0/yp8rBX1fbS1VbKpMiVa79utpSmRSpcu3X1ZbKpEiVa7+utlQmRapc+3W17N/6+69ptz1VDr5enVL7vVLl5q+rLbXfK1UO/rraSvu97ly59stqK/W97lS59utqK+33uh+9VLWVviHepXLt71K59neqXHs1M92pcvDl6qTKzV+tw+9Uufnraivt97pT5eavq+2VGCtVbv662lJrtVS5+etqK+33ulPl5i+rTZWbv662VN8rVW7+ulq+UX7CTKly8PXqVPpGeZfKzb9L5ebfuXLzl9WW+kaZKjd/XW2ptVqp3Py7VG7+XSo3/y6Vm3+Xys2/U+Xmr6vlG+UnzJQqB1+uTqnc/LtUbv5dKjf/zpWbv6y2V2KsVLn562pLrdVK5ebfpXLz71K5+Xep3Py7VG7+nSo3f11tpUyKO1Wu/braSpkUd6pc+3W1WTMpXldbKZPiTpVrv6w2Va79KrfgTpVrv662UibFnSrXfl1tp9v+17TbnioHX69Oqf1eqXLz19WW2u9VKtf+zpVrv+rO58q1X1Zbqu+VKtd+XW0vVW2p/V6lcu3vUrn2d6lc+ztVrr2cmVLl4OvVKbXfK1Vu/rraUvu9UuXmr6sttd8rVW7+utpSa7VUufnrakvt90qVm7+uttR+r1S5+etqS/W9yMH/jJlS5eDr1Sn1jbJUbv5dKjf/zpWbv6h2lMrNH6ly89fVVlqrjVK5+ePRS1Vb6RvlKJWbP0rl5o9UufnravlGOWemkSoHX69OpW+Uo1Ru/iiVmz9y5eYvq630jXKkys1fV1tqrVYqN3+Uys0fpXLzR6nc/FEqN3+kys1fV9sLneQfqXLt19VWyqQYqXLt19VmzaR4XW2lTIqRKtd+XW2lTIqRKtd+XW2lTIqRKtd+XS37t/7+a9ptT5WDr1en0n6vkSo3f11tqf1epXLtR65c+1V3Pleu/bLaUn2vVLn262pL7fcqlWs/SuXaj1K59qNUrv1IlWsvZ6ZUOfh6dUrt90qVm7+utpeqttLd2yNVbv6SsVLl5q+rLbVWS5Wbv6w2VW7+utpS+71S5eavqy3V90qVm7+ulm+UnzBTqhx8vTqlvlGWys0fpXLzR67c/GW1pb5RpsrNX1dbaq1WKjd/lMrNH6Vy80ep3PxRKjd/pMrNX1ZLDv5nzJQqB1+vTqlvlKVy80ep3PyRKzd/WW2pb5SpcvPX1ZZaq5XKzR+lcvNHqdz8USo3f5TKzR+pcvPX1ZbKpEiVa7+utlQmRapc+3W1WTMpXlR7P1Ll2i8yKZ7VpsqkWFZbKJPiWW2hTIpntb1UtanWUstq2b/191+TbvtTnUxrL706hfZ7PasttN/rfqTKwV9XWyjX/lltof1ez2pTfUNcVtvr9L2e1Rba7/WsttB+r2e1hfZ7Past9A3xWW2hb4j3o1Ku/bNa9m99wkypcvD16hTa7/WstpeqttB+r2e1he7eflZbaL/Xs9pUfa9ltaXWaqly89fVFtrv9ay20H6vZ7WF9ns9q+2lqi3V9yIH/zNmSpWDr1en1DfKSrn596NSbv6z2lLfKCvl5j+rLfWNslJu/rPaUmu1Srn5z2pLfaOslJv/rLZU3ytVbv66Wr5RfsJMqXLw9eqU+kZZKTf/WW2pb5S5cvOX1Zb6RpkqN39dbam1WqXc/Ge1pb5RVsrNf1Zb6htlpdz8Z7Wl+l6pcvCXJ/lT5dqvqy2USfGstlQmRapc+3W1pTIpUuXar6stlUmRKtd+XW2pTIpUufbratm/9fdf0257qhx8vTql9nulys1fV1tqv1elXPtntaX2e+XKtV9WW6rvlSrXfl1tqf1elXLtn9WW+oZYKdf+WW2pb4ipcu3lzJQqB1+vTq+0Dk+Vm7+uttR+r1S5+etqS+33SpWbv6p2S5Wbv1q9bKly89fVVtrvtaXKzV9X20tVW6nvtaXKzV9XyzfKOTNtqXLw9epU+ka5lcrN30rl5m+5cvOX1Vb6Rrmlys1fV1tqrVYqN38rlZu/lcrN30rl5m+lcvO3VLn562r5RvkJM6XKwder0yutw0vl5m+lcvO3XLn5y2orfaPcUuXmL6stlZu/lcrN30rl5m+lcvO3Urn5W6nc/C1Vbv662kqZFFuqXPt1tZUyKbZUufbrarNmUryutlImxZYq135dbS+UW7ClyrVfV1spk2JLlWu/rpb9W3//Ne22p8rBl6uTKjd/2cFNlZu/rrbUfq9SufZbrlz7VXc+V679stpSfa9Uufbrakvt9yqVa7+VyrXfSuXab6Vy7bdUufZyZkqVg69Xp9R+r1S5+etqS+33SpWbv6621H6vVLn562pLrdVS5eavqy213ytVbv662lL7vVLl5q+rLdX3Igf/M2ZKlYMvV6dUbv5WKjd/K5Wbv+XKzV9W2ysxVqrc/HW1pdZqpXLzt1K5+Vup3PytVG7+Vio3f0uVm7+ulm+UnzBTqhx8vTqlvlGWys3fSuXmb7ly85fVVvpG2VLl5q+rrbRWa6Vy81up3Pz26KWqrfSNspXKzW+pcvPX1VbKpGipcu2X1abKtV9XWymToqXKtV9XWymToqXKtV9XWymToqXKtV9XWymToqXKtV9Xy/6tv/+addtbqhx8vTqV9nu1VLn562or7fdqpXLtW65c+1V3Pleu/bLaUn2vVLn262or7fdqpXLtW6lc+1Yq176VyrVvqXLt5cyUKgdfr06l/V4tVW7+utpK+71aqtz8ZbWpcvOXjJUqN39dbam1Wqrc/HW1vVS1pfZ7pcrNX1dbqu+VKjd/XS3fKD9hplQ5+Hp1Sn2jLJWb30rl5rdcufnLakt9o0yVm7+uttRarVRufiuVm99K5ea3Urn5rVRufkuVm7+utsNMc2ZKlYOvV6fUN8pSufmtVG5+y5Wbv6q2VG5+S5Wbv6621FqtVG5+K5Wb30rl5rdSufmtVG5+S5Wbv662VCZFqlz7dbWlMilS5dqvq82aSfG62l4pkyJVrv262lKZFKly7dfVlsqkSJVrv6w2Va69vNueKgdfr06p/V6pcvPX1fZS1VbKtW+5cu1X3flcufbLakv1vVLl2q+q3VPl2q+rrbTfay+Va7+XyrXfH71UtezfmjPTnioHX69Opf1ee6rc/HW1lfZ77aly89fVVtrvtafKzV9XW2qtlio3f11tpf1ee6rc/HW1lfZ77aly89fVlup7kYP/GTOlysHXq1PpG+VeKjd/L5Wbv+fKzV9WW+kb5Z4qN39dbam1Wqnc/L1Ubv5eKjd/L5Wbv5fKzd9T5eavq+Ub5SfMlCoHX69OqW+UpXLz91K5+Xuu3PxltaW+UabKzV9XW2qtVio3fy+Vm7+Xys3fS+Xm76Vy8/dUufnLalPl4K9O8u+pcu3X1VbKpNhT5dqvq+2lqq2USbGnyrVfV1spk2JPlWu/rrZSJsWeKtd+XS37t/7+a9ptT5WDr1en1H6vVLn562pL7fcqlWu/58q1X3Xnc+XaL6st1fdKlWu/rrbUfq9SufZ7qVz7vVSu/V4q135PlWsvZ6ZUOfh6dUrt90qVm7+sNlVu/rraSndv76ly85eMlSo3f11tr7R6SZWbv6621H6vVLn562pL7fdKlZu/rDZVbv66Wr5RfsJMqXLw9eqU+kZZKjd/L5Wbv+fKzV9WW+obZarc/HW1ldZqvVRufi+Vm99L5eb3Urn5/dFLVVup79XJwf+EmXqqHHy9OpW+UfZSufm9VG5+z5Wbv6y20jfKnio3f11tr7R6KZWb30vl5vdSufm9VG5+L5Wb31Pl5q+rrZRJ0VPl2q+rrZRJ0VPl2q+rzZpJ8braSpkUPVWu/braSpkUPVWu/bLaVLn262pTraWW1bJ/6++/pt32VDn4enV6pQ5uqtz8dbWV9nv1Urn2PVeu/ao7nyvXflVtqlz7Zd8rVa79utpS+71K5dr3Urn2vVSufS+Va99T5drLmSlVDr5enVL7vVLl5q+rLbXfK1Vu/rraUvu9UuXmr6sttVZLlZu/rrbUfq9Uufnrakvt90qVm7+utlTfixz8z5gpVQ6+Xp1eaR1eKje/l8rN77ly85fVlvpGmSo3f1ltqdz8Xio3v5fKze+lcvN7qdz8Xio3v6fKzV9XyzfKT5gpVQ6+Xp1S3yhL5eb3Urn5PVdu/rLaUt8oU+Xmr6sttVYrlZvfS+Xm91K5+b1Ubn4vlZvfU+Xmr6stlUmRKtd+XW0vVW2pTIpUufbraktlUqTKtV9XWymT4kiVa7+utlImxZEq135dLfu3/v5r1m0/Hh11PlGn0n6vI1Vu/rraSvu9jlK5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ay9nplQ5+Hp1Su33SpWbv6621H6vVLn5q2q3VLn5K8baUuXmr6uttFbbUuXmr6vtpaqttN9rS5Wbv662Ut9rS5Wbv66Wb5RzZtpS5eDr1an0jXIrlZu/lcrN33Ll5i+rrfSNckuVm7+uttRarVRu/lYqN38rlZu/lcrN30rl5m+pcvPX1XaYac5MqXLw9epU+ka5lcrN30rl5m+5cvNX1ZbKzd9S5eavqy21ViuVm7+Vys3fSuXmb6Vy87dSuflbqtz8dbWVMim2VLn262orZVJsqXLt19VmzaR4XW0vlEmxpcq1X1dbKZNiS5Vrv662UibFlirXflltqlx7ebc9VQ6+Xp1S+71S5eavq+2lqq2Ua7/lyrVfdedz5dovqy3V90qVa7+sNlWu/braUvu9SuXab6Vy7bdSufZbqlx7OTOlysHXq1Nqv1eq3Px1taX2e6XKzV9XW2q/V6rc/HW1pdZqqXLz19WW2u+VKjd/XW2p/V6pcvPX1Zbqe5GD/xkzpcrB16tT6htlqdz8rVRu/pYrN39ZbalvlKly89fVllqrlcrN30rl5m+lcvO3Urn5W6nc/C1Vbv66Wr5RfsJMqXLw9eqU+kZZKjd/K5Wb33Ll5i+rrfSNsqXKzV9XW2mt1h69VLWVvlG2Urn5rVRufiuVm99S5eYvq02Vg786yd9S5dqvq62USdFS5dqvq+2lqq2USdFS5dqvq62USdFS5dqvq62USdFS5dqvq2X/1t9/zbrtLVUOvl6dSvu9Wqrc/HW1lfZ7tVK59i1Xrv2qO58r135Zbam+V6pc+3W1lfZ7tVK59q1Urn0rlWvfSuXat1S59nJmSpWDr1en0n6vlio3f1ltqtz8dbWV7t5uqXLzl4yVKjd/XW2vtHpJlZu/rrbUfq9Uufnrakvt90qVm7+sNlVu/rpavlF+wkypcvD16pT6RlkqN7+Vys1vuXLzl9WW+kaZKjd/XW2ptVqp3PxWKje/lcrNb6Vy81up3PyWKjd/XS3fKD9hplQ5+Hp1Sn2jLJWb30rl5rdcufnLakt9o0yVm7+utldavZTKzW+lcvNbqdz8Vio3v5XKzW+pcvPX1ZbKpEiVa7+utlQmRapc+3W1WTMpXldbKpMiVa79utpSmRSpcu2X1abKtV9Xm2ottayW/Vt//zXttqfKwder0yt1cFPl5q+rLbXfq1SufcuVa7/qzufKtV9Uu6fKtV/1vfZUufbraivt99pL5drvj16q2krfEPdSufZ7qlx7NTPtqXLw9epU2u+1p8rNX1dbab/Xnio3f11tpf1ee6rc/HW1pdZqqXLz19VW2u+1p8rNX1dbab/Xnio3f11tqb4XOfifMVOqHHy9Or3SOrxUbv5eKjd/z5Wbv6y20jfKPVVu/rLaUrn5e6nc/L1Ubv5eKjd/L5Wbv5fKzd9T5eavq+Ub5SfMlCoHX69OqW+UpXLz91K5+Xuu3PxltaW+UabKzV9XW2qtVio3fy+Vm7+Xys3fS+Xm76Vy8/dUufnraitlUuypcu3X1fZS1VbKpNhT5dqvq62USbGnyrVfV1spk2JPlWu/rrZSJsWeKtd+XS37t/7+a9ptT5WDr1en1H6vVLn562pL7fcqlWu/58q1X3Xnc+XaL6st1fdKlWu/rrbUfq9SufZ7qVz7vVSu/V4q135PlWsvZ6ZUOfhydVLl5i/X4aly89fVltrvlSo3f11tr8RYqXLz19WWWqulys1fV1tqv1eq3Pxltaly89fVlup7pcrNX1fLN8pPmClVDr5enVLfKEvl5u+lcvP3XLn5y2orfaPsqXLz19VWWqv1Urn5vVRufn/0UtVW+kbZS+Xm91S5+etq+UY5Z6aeKgdfrk6p3PxeKje/l8rN77ly85fV9kqMlSo3f11tqbVaqdz8Xio3v5fKze+lcvN7qdz8nio3f11tpUyKnirXfl1tpUyKnirXfl1t1kyK19VWyqToqXLtl9WmyrVf5Rb0VLn262orZVL0VLn262o73fa/pt32VDn4enUq7ffqqXLz19VW2u/VS+Xa91y59qvufK5c+2W1pfpeqXLt19X2UtWW2u9VKte+l8q176Vy7XuqXHs5M6XKwderU2q/V6rc/HW1pfZ7pcrNX1dbar9Xqtz8dbWl1mqpcvPX1Zba75UqN39dban9Xqly89fVlup7kYP/GTOlysHXq1PqG2Wp3PxeKje/58rNX1VbKje/p8rNX1dbaq1WKje/l8rN76Vy83up3PxeKje/p8rNX1fLN8pPmClVDr5enVLfKEvl5vdSufk9V27+stpS3yhT5eavqy21ViuVm99L5eb3Urn5vVRufi+Vm99T5eavq+2VTvKnyrVfV1sqkyJVrv262qyZFK+rrZRJcaTKtV9XWymT4kiVa7+utlIm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tNueKgdfr06p/V6pcvOX1abKzV9Xm2q/17LaUvu9cuXaL6vtlfpeqXLt19WW2u+VKtd+XW2pb4ilcu23Urn2W6pcezUzbaly8PXqVNrvtT16qWor7ffaUuXmr6uttN9rS5Wbv6621FotVW7+utpK+722VLn562or7ffaUuXmr6ut1PfayMH/jJlS5eDr1an0jXIrlZu/lcrN33Ll5i+rrfSNckuVm7+utldavZTKzd9K5eZvpXLzt1K5+Vup3PwtVW7+ulq+UX7CTKly8PXqlPpGWSo3fyuVm7/lys1fVlvqG2Wq3Px1taXWaqVy87dSuflbqdz8rVRu/lYqN39LlZu/rrZSJsWWKtd+XW2lTIotVa79stpUufbraitlUmypcu3X1VbKpNhS5dqvq62USbGlyrVfV8v+rb//mnbbU+Xg69Uptd8rVW7+utpS+71K5dpvuXLtV935XLn2y2pL9b1S5dqvqy2136tUrv1WKtd+K5Vrv5XKtd9S5drLmSlVDr5enV5pHZ4qN39dban9Xqly89fVltrvlSo3f1ltqtz85eolVW7+utpS+71S5eavq+2lqi3V90qVm7+ulm+UnzBTqhx8vTqlvlGWys3fSuXmb7ly85fVlvpGmSo3f11tqbVaqdz8rVRu/lYqN38rlZvfSuXmt1S5+etq+UY5Z6aWKgdfr04vtA5vpXLzW6nc/JYrN39ZbaVvlC1Vbv6y2lK5+a1Ubn4rlZvfSuXmt1K5+a1Ubn5LlZu/rrZSJkVLlWu/rrZSJkVLlWu/rjZrJsXraitlUrRUufbranuh3IKWKtd+XW2lTIqWKtd+XS37t/7+a9ptT5WDL1cnVW7+soObKjd/XW2l/V6tVK59y5Vrv+rO58q1X1Zbqu+VKtd+XW2l/V6tVK59K5Vr30rl2rdSufYtVa69nJlS5eDr1Sm13ytVbv662lL7vVLl5q+rLbXfK1Vu/rraUmu1VLn562pL7fdKlZu/rrbUfq9Uufnrakv1vcjB/4yZUuXgy9UplZvfSuXmt1K5+S1Xbv6y2l6JsVLl5q+rLbVWK5Wb30rl5rdSufmtVG5+K5Wb31Ll5q+r5RvlJ8yUKgdfr06pb5SlcvNbqdz8lis3f1ltqW+UqXLz19WWWquVys1vpXLzW6nc/FYqN7+Vys1vqXLz19WWyqRIlWu/rDZVrv262lKZFKly7dfVlsqkSJVrv662VCZFqlz7dbWlMilS5dqvq2X/1t9/zbrte6ocfL06lfZ77aly89fVVtrvtT96qWor7ffac+XaL6ut1PfaU+Xar6uttN9rL5Vrv5fKtd9L5drvpXLt91S59nJmSpWDr1en0n6vPVVu/rraSvu99lS5+ctqU+XmLxkrVW7+utpSa7VUufnranupaivt99pT5eavqy3V90qVm7+ulm+UnzBTqhx8vTqlvlGWys3fS+Xm77ly85fVlvpGmSo3f11tqbVaqdz8vVRu/l4qN38vlZu/l8rN31Pl5q+r7TDTnJlS5eDr1Sn1jbJUbv5eKjd/z5Wbv6q2VG7+nio3f11tqbVaqdz8vVRu/l4qN38vlZu/l8rN31Pl5q+rrZRJsafKtV9XWymTYk+Va7+uNmsmxetqe6FMij1Vrv262kqZFHuqXPt1tZUyKfZUufbLalPl2su77aly8PXqlNrvlSo3f11tL1VtpVz7PVeu/ao7nyvXflltqb5Xqlz7ZbWpcu3X1Zba71Uq134vlWu/l8q131Pl2suZKVUOvl6dUvu9UuXmr6sttd8rVW7+utpS+71S5eavqy21VkuVm7+uttR+r1S5+etqS+33SpWbv662Ut+rk4P/CTP1VDn4enUqfaPspXLzn/+/VLWVvlH2Urn5PVVu/rraSmu1Xio3v5fKze+lcvN7qdz8Xio3v6fKzV9XyzfKT5gpVQ6+Xp1K3yh7qdz8Xio3v+fKzV9WW+kbZU+Vm7+uttRarVRufi+Vm99L5eb3Urn5vVRufk+Vm7+sNlUO/uokf0+Va7+utlImRU+Va7+utpeqtlImRU+Va7+utlImRU+Va7+utlImRU+Va7+ulv1bf/817banysHXq1Nqv1eq3Px1taX2e5XKte+5cu1X3flcufbLakv1vVLl2q+rLbXfq1SufS+Va99L5dr3Urn2PVWuvZyZUuXg69Uptd8rVW7+stpUufnraivdvd1T5eYvGStVbv662l5p9ZIqN39dban9Xqly89fVltrvlSo3f1ltqtz8dbV8o/yEmVLl4OvVKfWNslRufi+Vm99z5eYvqy31jTJVbv662lJrtVK5+b1Ubn4vlZvfS+Xm91K5+T1Vbv66Wr5RfsJMqXLw9eqU+kZZKje/l8rN77ly85fVlvpGmSo3f11tr7R6KZWb30vl5vdSufm9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fv/G497v33jc+/0bj3u/f+Nx7/dvPO79/o3Hvd+/8bj3+zce937/xuPe79943Pz9W27+/i03f/+Wm79/y83fv/9zdzH7+W/+/i03f/+Wm79/y83fv+Xm79968/dvvfn7t978/Vtv/v79n5tg2c9/8/fvzf2ruLl/FTf3r+Lm/lXc3L+Km/tXcXP/Km7uX8XN/au4uX8VN/ev4ub+Vdzcv4qb+1dxc/8qbu5fxc39q7i5fxU396/i5v5V3Ny/ipv7V3Fz/ypu7l/Fzf2ruLl/FTf3r+Lm/lXc3L+Km/tXcXP/Km7uX8XN/au4uX8VN/ev4ub+Vdzcv4qb+1dxc/8qbu5fxc39q7i5fxU396/i5v5V3Ny/ipv7V3Fz/ypu7l/Fzf2ruLl/FTf3r+Lm/lXc3L+Km/tXcXP/Km7uX8XN/au4uX8VN/ev4ub+Vdzcv4qb+1dxc/8qbu5fxc39q7i5fxU396/i5v5V3Ny/ipv7V3Fz/ypu7l/Fzf2ruLl/1W/uX/Wb+1f95v5Vv7l/1R//P/b+bceVXocaQ19oX+hAnZ5mIwmC4Ad+JECS2/XuqTm7XXYvl0tuTZZIWuO7WMsTsJqDQyyRQyXRtvNvMt7/Khnvf5WM979KxvtfJeP9r5Lx/lfJeP+rZLz/VTLe/yoZ73+VjPe/Ssb7XyXj/a+S8f5XyXj/q2S8/1Uy3v8qGe9/lYz3v0rG+18l4/2vkvH+V8l4/6tkvP9VMt7/Khnvf5WM979KxvtfJeP9r5Lx/lfJeP+rZLz/VTLe/yoZ73+VjPe/Ssb7XyXj/a+S8f5XyXj/q2S8/1Uy3v8qGe9/lYz3v0rG+18l4/2vkvH+V8l4/6tkvP9VMt7/Khnvf5WM979KxvtfJeP9r5Lx/lfJeP+rNL//VXXfX47Oh3/H743jD8bxR+P4yTj+ZBx/No6/GMdfjeNvtvEX4/m3GM+/xXj+Lcbz7/z+V8z4jeffYjz/FuP5txjPv8V4/q3G8281nn+r8fxbjeff+f2vmPEbz7/VeP6txvNvNZ5/q/H824zn32Y8/zbj+bcZz7/z+18x4zeef5vx/NuM599mPP822/k3O9v5Nzvb+Tc72/k3O9v5Nzvb+Tc72/k3O9v5Nzvb+Tc72/k3O+P51xvPv954/vXG8683nn/n979ixm88/3rj+dcbz7/eeP71xvNvMJ5/g/H8G4zn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","file_map":{"5":{"source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: TypeDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields_as_written().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(\n        s,\n        quote { Eq },\n        signature,\n        for_each_field,\n        quote { & },\n        body,\n    )\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u128 {\n    fn eq(self, other: u128) -> bool {\n        self == other\n    }\n}\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B)\nwhere\n    A: Eq,\n    B: Eq,\n{\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n{\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n{\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n    E: Eq,\n{\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: TypeDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u128 {\n    fn cmp(self, other: u128) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B)\nwhere\n    A: Ord,\n    B: Ord,\n{\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n{\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n{\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n    E: Ord,\n{\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v1\n    } else {\n        v2\n    }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v2\n    } else {\n        v1\n    }\n}\n\nmod cmp_tests {\n    use crate::cmp::{max, min};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n","path":"std/cmp.nr"},"6":{"source":"use crate::{cmp::Eq, convert::From, runtime::is_unconstrained, static_assert};\n\n/// A `BoundedVec<T, MaxLen>` is a growable storage similar to a `Vec<T>` except that it\n/// is bounded with a maximum possible length. Unlike `Vec`, `BoundedVec` is not implemented\n/// via slices and thus is not subject to the same restrictions slices are (notably, nested\n/// slices - and thus nested vectors as well - are disallowed).\n///\n/// Since a BoundedVec is backed by a normal array under the hood, growing the BoundedVec by\n/// pushing an additional element is also more efficient - the length only needs to be increased\n/// by one.\n///\n/// For these reasons `BoundedVec<T, N>` should generally be preferred over `Vec<T>` when there\n/// is a reasonable maximum bound that can be placed on the vector.\n///\n/// Example:\n///\n/// ```noir\n/// let mut vector: BoundedVec<Field, 10> = BoundedVec::new();\n/// for i in 0..5 {\n///     vector.push(i);\n/// }\n/// assert(vector.len() == 5);\n/// assert(vector.max_len() == 10);\n/// ```\npub struct BoundedVec<T, let MaxLen: u32> {\n    storage: [T; MaxLen],\n    len: u32,\n}\n\nimpl<T, let MaxLen: u32> BoundedVec<T, MaxLen> {\n    /// Creates a new, empty vector of length zero.\n    ///\n    /// Since this container is backed by an array internally, it still needs an initial value\n    /// to give each element. To resolve this, each element is zeroed internally. This value\n    /// is guaranteed to be inaccessible unless `get_unchecked` is used.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let empty_vector: BoundedVec<Field, 10> = BoundedVec::new();\n    /// assert(empty_vector.len() == 0);\n    /// ```\n    ///\n    /// Note that whenever calling `new` the maximum length of the vector should always be specified\n    /// via a type signature:\n    ///\n    /// ```noir\n    /// fn good() -> BoundedVec<Field, 10> {\n    ///     // Ok! MaxLen is specified with a type annotation\n    ///     let v1: BoundedVec<Field, 3> = BoundedVec::new();\n    ///     let v2 = BoundedVec::new();\n    ///\n    ///     // Ok! MaxLen is known from the type of `good`'s return value\n    ///     v2\n    /// }\n    ///\n    /// fn bad() {\n    ///     // Error: Type annotation needed\n    ///     // The compiler can't infer `MaxLen` from the following code:\n    ///     let mut v3 = BoundedVec::new();\n    ///     v3.push(5);\n    /// }\n    /// ```\n    ///\n    /// This defaulting of `MaxLen` (and numeric generics in general) to zero may change in future noir versions\n    /// but for now make sure to use type annotations when using bounded vectors. Otherwise, you will receive a\n    /// constraint failure at runtime when the vec is pushed to.\n    pub fn new() -> Self {\n        let zeroed = crate::mem::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero.\n    ///\n    /// If the given index is equal to or greater than the length of the vector, this\n    /// will issue a constraint failure.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     let last = v.get(v.len() - 1);\n    ///     assert(first != last);\n    /// }\n    /// ```\n    pub fn get(self, index: u32) -> T {\n        assert(index < self.len, \"Attempted to read past end of BoundedVec\");\n        self.get_unchecked(index)\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero, without\n    /// performing a bounds check.\n    ///\n    /// Since this function does not perform a bounds check on length before accessing the element,\n    /// it is unsafe! Use at your own risk!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn sum_of_first_three<let N: u32>(v: BoundedVec<u32, N>) -> u32 {\n    ///     // Always ensure the length is larger than the largest\n    ///     // index passed to get_unchecked\n    ///     assert(v.len() > 2);\n    ///     let first = v.get_unchecked(0);\n    ///     let second = v.get_unchecked(1);\n    ///     let third = v.get_unchecked(2);\n    ///     first + second + third\n    /// }\n    /// ```\n    pub fn get_unchecked(self, index: u32) -> T {\n        self.storage[index]\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero.\n    ///\n    /// If the given index is equal to or greater than the length of the vector, this will issue a constraint failure.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     assert(first != 42);\n    ///     v.set(0, 42);\n    ///     let new_first = v.get(0);\n    ///     assert(new_first == 42);\n    /// }\n    /// ```\n    pub fn set(&mut self, index: u32, value: T) {\n        assert(index < self.len, \"Attempted to write past end of BoundedVec\");\n        self.set_unchecked(index, value)\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero, without performing a bounds check.\n    ///\n    /// Since this function does not perform a bounds check on length before accessing the element, it is unsafe! Use at your own risk!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn set_unchecked_example() {\n    ///     let mut vec: BoundedVec<u32, 5> = BoundedVec::new();\n    ///     vec.extend_from_array([1, 2]);\n    ///\n    ///     // Here we're safely writing within the valid range of `vec`\n    ///     // `vec` now has the value [42, 2]\n    ///     vec.set_unchecked(0, 42);\n    ///\n    ///     // We can then safely read this value back out of `vec`.\n    ///     // Notice that we use the checked version of `get` which would prevent reading unsafe values.\n    ///     assert_eq(vec.get(0), 42);\n    ///\n    ///     // We've now written past the end of `vec`.\n    ///     // As this index is still within the maximum potential length of `v`,\n    ///     // it won't cause a constraint failure.\n    ///     vec.set_unchecked(2, 42);\n    ///     println(vec);\n    ///\n    ///     // This will write past the end of the maximum potential length of `vec`,\n    ///     // it will then trigger a constraint failure.\n    ///     vec.set_unchecked(5, 42);\n    ///     println(vec);\n    /// }\n    /// ```\n    pub fn set_unchecked(&mut self, index: u32, value: T) {\n        self.storage[index] = value;\n    }\n\n    /// Pushes an element to the end of the vector. This increases the length\n    /// of the vector by one.\n    ///\n    /// Panics if the new length of the vector will be greater than the max length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    ///\n    /// v.push(1);\n    /// v.push(2);\n    ///\n    /// // Panics with failed assertion \"push out of bounds\"\n    /// v.push(3);\n    /// ```\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    /// Returns the current length of this vector\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 4> = BoundedVec::new();\n    /// assert(v.len() == 0);\n    ///\n    /// v.push(100);\n    /// assert(v.len() == 1);\n    ///\n    /// v.push(200);\n    /// v.push(300);\n    /// v.push(400);\n    /// assert(v.len() == 4);\n    ///\n    /// let _ = v.pop();\n    /// let _ = v.pop();\n    /// assert(v.len() == 2);\n    /// ```\n    pub fn len(self) -> u32 {\n        self.len\n    }\n\n    /// Returns the maximum length of this vector. This is always\n    /// equal to the `MaxLen` parameter this vector was initialized with.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    ///\n    /// assert(v.max_len() == 5);\n    /// v.push(10);\n    /// assert(v.max_len() == 5);\n    /// ```\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u32 {\n        MaxLen\n    }\n\n    /// Returns the internal array within this vector.\n    ///\n    /// Since arrays in Noir are immutable, mutating the returned storage array will not mutate\n    /// the storage held internally by this vector.\n    ///\n    /// Note that uninitialized elements may be zeroed out!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    ///\n    /// assert(v.storage() == [0, 0, 0, 0, 0]);\n    ///\n    /// v.push(57);\n    /// assert(v.storage() == [57, 0, 0, 0, 0]);\n    /// ```\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    /// Pushes each element from the given array to this vector.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_array([2, 4]);\n    ///\n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_array<let Len: u32>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len <= MaxLen, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the given slice to this vector.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_slice(&[2, 4]);\n    ///\n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len <= MaxLen, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the other vector to this vector. The length of\n    /// the other vector is left unchanged.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// ```noir\n    /// let mut v1: BoundedVec<Field, 5> = BoundedVec::new();\n    /// let mut v2: BoundedVec<Field, 7> = BoundedVec::new();\n    ///\n    /// v2.extend_from_array([1, 2, 3]);\n    /// v1.extend_from_bounded_vec(v2);\n    ///\n    /// assert(v1.storage() == [1, 2, 3, 0, 0]);\n    /// assert(v2.storage() == [1, 2, 3, 0, 0, 0, 0]);\n    /// ```\n    pub fn extend_from_bounded_vec<let Len: u32>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len <= MaxLen, \"extend_from_bounded_vec out of bounds\");\n\n        if is_unconstrained() {\n            for i in 0..append_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        } else {\n            let mut exceeded_len = false;\n            for i in 0..Len {\n                exceeded_len |= i == append_len;\n                if !exceeded_len {\n                    self.storage[self.len + i] = vec.get_unchecked(i);\n                }\n            }\n        }\n        self.len = new_len;\n    }\n\n    /// Creates a new vector, populating it with values derived from an array input.\n    /// The maximum length of the vector is determined based on the type signature.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array([1, 2, 3])\n    /// ```\n    pub fn from_array<let Len: u32>(array: [T; Len]) -> Self {\n        static_assert(Len <= MaxLen, \"from array out of bounds\");\n        let mut vec: BoundedVec<T, MaxLen> = BoundedVec::new();\n        vec.extend_from_array(array);\n        vec\n    }\n\n    /// Pops the element at the end of the vector. This will decrease the length\n    /// of the vector by one.\n    ///\n    /// Panics if the vector is empty.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// v.push(1);\n    /// v.push(2);\n    ///\n    /// let two = v.pop();\n    /// let one = v.pop();\n    ///\n    /// assert(two == 2);\n    /// assert(one == 1);\n    ///\n    /// // error: cannot pop from an empty vector\n    /// let _ = v.pop();\n    /// ```\n    pub fn pop(&mut self) -> T {\n        assert(self.len > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::mem::zeroed();\n        elem\n    }\n\n    /// Returns true if the given predicate returns true for any element\n    /// in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<u32, 3> = BoundedVec::new();\n    /// v.extend_from_array([2, 4, 6]);\n    ///\n    /// let all_even = !v.any(|elem: u32| elem % 2 != 0);\n    /// assert(all_even);\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        if is_unconstrained() {\n            for i in 0..self.len {\n                ret |= predicate(self.storage[i]);\n            }\n        } else {\n            let mut ret = false;\n            let mut exceeded_len = false;\n            for i in 0..MaxLen {\n                exceeded_len |= i == self.len;\n                if !exceeded_len {\n                    ret |= predicate(self.storage[i]);\n                }\n            }\n        }\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.map(|value| value * 2);\n    ///\n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n\n        if is_unconstrained() {\n            for i in 0..self.len() {\n                ret.storage[i] = f(self.get_unchecked(i));\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i < self.len() {\n                    ret.storage[i] = f(self.get_unchecked(i));\n                }\n            }\n        }\n\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element\n    /// in this vector, along with its index.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.mapi(|i, value| i + value * 2);\n    ///\n    /// let expected = BoundedVec::from_array([2, 5, 8, 11]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn mapi<U, Env>(self, f: fn[Env](u32, T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n\n        if is_unconstrained() {\n            for i in 0..self.len() {\n                ret.storage[i] = f(i, self.get_unchecked(i));\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i < self.len() {\n                    ret.storage[i] = f(i, self.get_unchecked(i));\n                }\n            }\n        }\n\n        ret\n    }\n\n    /// Calls a closure on each element in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let mut result = BoundedVec::<u32, 4>::new();\n    /// vec.for_each(|value| result.push(value * 2));\n    ///\n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn for_each<Env>(self, f: fn[Env](T) -> ()) {\n        if is_unconstrained() {\n            for i in 0..self.len() {\n                f(self.get_unchecked(i));\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i < self.len() {\n                    f(self.get_unchecked(i));\n                }\n            }\n        }\n    }\n\n    /// Calls a closure on each element in this vector, along with its index.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let mut result = BoundedVec::<u32, 4>::new();\n    /// vec.for_eachi(|i, value| result.push(i + value * 2));\n    ///\n    /// let expected = BoundedVec::from_array([2, 5, 8, 11]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn for_eachi<Env>(self, f: fn[Env](u32, T) -> ()) {\n        if is_unconstrained() {\n            for i in 0..self.len() {\n                f(i, self.get_unchecked(i));\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i < self.len() {\n                    f(i, self.get_unchecked(i));\n                }\n            }\n        }\n    }\n\n    /// Creates a new BoundedVec from the given array and length.\n    /// The given length must be less than or equal to the length of the array.\n    ///\n    /// This function will zero out any elements at or past index `len` of `array`.\n    /// This incurs an extra runtime cost of O(MaxLen). If you are sure your array is\n    /// zeroed after that index, you can use `from_parts_unchecked` to remove the extra loop.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 0], 3);\n    /// assert_eq(vec.len(), 3);\n    /// ```\n    pub fn from_parts(mut array: [T; MaxLen], len: u32) -> Self {\n        assert(len <= MaxLen);\n        let zeroed = crate::mem::zeroed();\n\n        if is_unconstrained() {\n            for i in len..MaxLen {\n                array[i] = zeroed;\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i >= len {\n                    array[i] = zeroed;\n                }\n            }\n        }\n\n        BoundedVec { storage: array, len }\n    }\n\n    /// Creates a new BoundedVec from the given array and length.\n    /// The given length must be less than or equal to the length of the array.\n    ///\n    /// This function is unsafe because it expects all elements past the `len` index\n    /// of `array` to be zeroed, but does not check for this internally. Use `from_parts`\n    /// for a safe version of this function which does zero out any indices past the\n    /// given length. Invalidating this assumption can notably cause `BoundedVec::eq`\n    /// to give incorrect results since it will check even elements past `len`.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 0], 3);\n    /// assert_eq(vec.len(), 3);\n    ///\n    /// // invalid use!\n    /// let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 1], 3);\n    /// let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 2], 3);\n    ///\n    /// // both vecs have length 3 so we'd expect them to be equal, but this\n    /// // fails because elements past the length are still checked in eq\n    /// assert_eq(vec1, vec2); // fails\n    /// ```\n    pub fn from_parts_unchecked(array: [T; MaxLen], len: u32) -> Self {\n        assert(len <= MaxLen);\n        BoundedVec { storage: array, len }\n    }\n}\n\nimpl<T, let MaxLen: u32> Eq for BoundedVec<T, MaxLen>\nwhere\n    T: Eq,\n{\n    fn eq(self, other: BoundedVec<T, MaxLen>) -> bool {\n        // TODO: https://github.com/noir-lang/noir/issues/4837\n        //\n        // We make the assumption that the user has used the proper interface for working with `BoundedVec`s\n        // rather than directly manipulating the internal fields as this can result in an inconsistent internal state.\n        if self.len == other.len {\n            self.storage == other.storage\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T, let MaxLen: u32, let Len: u32> From<[T; Len]> for BoundedVec<T, MaxLen> {\n    fn from(array: [T; Len]) -> BoundedVec<T, MaxLen> {\n        BoundedVec::from_array(array)\n    }\n}\n\nmod bounded_vec_tests {\n\n    mod get {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test(should_fail_with = \"Attempted to read past end of BoundedVec\")]\n        fn panics_when_reading_elements_past_end_of_vec() {\n            let vec: BoundedVec<Field, 5> = BoundedVec::new();\n\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod set {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn set_updates_values_properly() {\n            let mut vec = BoundedVec::from_array([0, 0, 0, 0, 0]);\n\n            vec.set(0, 42);\n            assert_eq(vec.storage, [42, 0, 0, 0, 0]);\n\n            vec.set(1, 43);\n            assert_eq(vec.storage, [42, 43, 0, 0, 0]);\n\n            vec.set(2, 44);\n            assert_eq(vec.storage, [42, 43, 44, 0, 0]);\n\n            vec.set(1, 10);\n            assert_eq(vec.storage, [42, 10, 44, 0, 0]);\n\n            vec.set(0, 0);\n            assert_eq(vec.storage, [0, 10, 44, 0, 0]);\n        }\n\n        #[test(should_fail_with = \"Attempted to write past end of BoundedVec\")]\n        fn panics_when_writing_elements_past_end_of_vec() {\n            let mut vec: BoundedVec<Field, 5> = BoundedVec::new();\n            vec.set(0, 42);\n\n            // Need to use println to avoid DIE removing the write operation.\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod map {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-map-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| value * 2);\n            // docs:end:bounded-vec-map-example\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| (value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.map(|value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod mapi {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-mapi-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.mapi(|i, value| i + value * 2);\n            // docs:end:bounded-vec-mapi-example\n            let expected = BoundedVec::from_array([2, 5, 8, 11]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.mapi(|i, value| (i + value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 5, 8, 11]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.mapi(|_, value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod for_each {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        // map in terms of for_each\n        fn for_each_map<T, U, Env, let MaxLen: u32>(\n            input: BoundedVec<T, MaxLen>,\n            f: fn[Env](T) -> U,\n        ) -> BoundedVec<U, MaxLen> {\n            let mut output = BoundedVec::<U, MaxLen>::new();\n            let output_ref = &mut output;\n            input.for_each(|x| output_ref.push(f(x)));\n            output\n        }\n\n        #[test]\n        fn smoke_test() {\n            let mut acc = 0;\n            let acc_ref = &mut acc;\n            // docs:start:bounded-vec-for-each-example\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([1, 2, 3]);\n            vec.for_each(|value| { *acc_ref += value; });\n            // docs:end:bounded-vec-for-each-example\n            assert_eq(acc, 6);\n        }\n\n        #[test]\n        fn applies_function_correctly() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = for_each_map(vec, |value| value * 2);\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = for_each_map(vec, |value| (value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = for_each_map(vec, |value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod for_eachi {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        // mapi in terms of for_eachi\n        fn for_eachi_mapi<T, U, Env, let MaxLen: u32>(\n            input: BoundedVec<T, MaxLen>,\n            f: fn[Env](u32, T) -> U,\n        ) -> BoundedVec<U, MaxLen> {\n            let mut output = BoundedVec::<U, MaxLen>::new();\n            let output_ref = &mut output;\n            input.for_eachi(|i, x| output_ref.push(f(i, x)));\n            output\n        }\n\n        #[test]\n        fn smoke_test() {\n            let mut acc = 0;\n            let acc_ref = &mut acc;\n            // docs:start:bounded-vec-for-eachi-example\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([1, 2, 3]);\n            vec.for_eachi(|i, value| { *acc_ref += i * value; });\n            // docs:end:bounded-vec-for-eachi-example\n\n            // 0 * 1 + 1 * 2 + 2 * 3\n            assert_eq(acc, 8);\n        }\n\n        #[test]\n        fn applies_function_correctly() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = for_eachi_mapi(vec, |i, value| i + value * 2);\n            let expected = BoundedVec::from_array([2, 5, 8, 11]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = for_eachi_mapi(vec, |i, value| (i + value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 5, 8, 11]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = for_eachi_mapi(vec, |_, value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod from_array {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty() {\n            let empty_array: [Field; 0] = [];\n            let bounded_vec = BoundedVec::from_array([]);\n\n            assert_eq(bounded_vec.max_len(), 0);\n            assert_eq(bounded_vec.len(), 0);\n            assert_eq(bounded_vec.storage(), empty_array);\n        }\n\n        #[test]\n        fn equal_len() {\n            let array = [1, 2, 3];\n            let bounded_vec = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 3);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage(), array);\n        }\n\n        #[test]\n        fn max_len_greater_then_array_len() {\n            let array = [1, 2, 3];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.get(0), 1);\n            assert_eq(bounded_vec.get(1), 2);\n            assert_eq(bounded_vec.get(2), 3);\n        }\n\n        #[test(should_fail_with = \"from array out of bounds\")]\n        fn max_len_lower_then_array_len() {\n            let _: BoundedVec<Field, 2> = BoundedVec::from_array([0; 3]);\n        }\n    }\n\n    mod trait_from {\n        use crate::collections::bounded_vec::BoundedVec;\n        use crate::convert::From;\n\n        #[test]\n        fn simple() {\n            let array = [1, 2];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 2);\n            assert_eq(bounded_vec.get(0), 1);\n            assert_eq(bounded_vec.get(1), 2);\n        }\n    }\n\n    mod trait_eq {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty_equality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n\n            assert_eq(bounded_vec1, bounded_vec2);\n        }\n\n        #[test]\n        fn inequality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n            bounded_vec1.push(1);\n            bounded_vec2.push(2);\n\n            assert(bounded_vec1 != bounded_vec2);\n        }\n    }\n\n    mod from_parts {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn from_parts() {\n            // docs:start:from-parts\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 0], 3);\n            assert_eq(vec.len(), 3);\n\n            // Any elements past the given length are zeroed out, so these\n            // two BoundedVecs will be completely equal\n            let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 1], 3);\n            let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 2], 3);\n            assert_eq(vec1, vec2);\n            // docs:end:from-parts\n        }\n\n        #[test]\n        fn from_parts_unchecked() {\n            // docs:start:from-parts-unchecked\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 0], 3);\n            assert_eq(vec.len(), 3);\n\n            // invalid use!\n            let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 1], 3);\n            let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 2], 3);\n\n            // both vecs have length 3 so we'd expect them to be equal, but this\n            // fails because elements past the length are still checked in eq\n            assert(vec1 != vec2);\n            // docs:end:from-parts-unchecked\n        }\n    }\n}\n","path":"std/collections/bounded_vec.nr"},"10":{"source":"pub struct Vec<T> {\n    pub(crate) slice: [T],\n}\n// A mutable vector type implemented as a wrapper around immutable slices.\n// A separate type is technically not needed but helps differentiate which operations are mutable.\nimpl<T> Vec<T> {\n    pub fn new() -> Self {\n        Self { slice: &[] }\n    }\n\n    // Create a Vec containing each element from the given slice.\n    // Mutations to the resulting Vec will not affect the original slice.\n    pub fn from_slice(slice: [T]) -> Self {\n        Self { slice }\n    }\n\n    /// Get an element from the vector at the given index.\n    /// Panics if the given index\n    /// points beyond the end of the vector.\n    pub fn get(self, index: u32) -> T {\n        self.slice[index]\n    }\n\n    /// Write an element to the vector at the given index.\n    /// Panics if the given index points beyond the end of the vector (`self.len()`).\n    pub fn set(&mut self, index: u32, value: T) {\n        self.slice[index] = value;\n    }\n\n    /// Push a new element to the end of the vector, returning a\n    /// new vector with a length one greater than the\n    /// original unmodified vector.\n    pub fn push(&mut self, elem: T) {\n        self.slice = self.slice.push_back(elem);\n    }\n\n    /// Pop an element from the end of the given vector, returning\n    /// a new vector with a length of one less than the given vector,\n    /// as well as the popped element.\n    /// Panics if the given vector's length is zero.\n    pub fn pop(&mut self) -> T {\n        let (popped_slice, last_elem) = self.slice.pop_back();\n        self.slice = popped_slice;\n        last_elem\n    }\n\n    /// Insert an element at a specified index, shifting all elements\n    /// after it to the right\n    pub fn insert(&mut self, index: u32, elem: T) {\n        self.slice = self.slice.insert(index, elem);\n    }\n\n    /// Remove an element at a specified index, shifting all elements\n    /// after it to the left, returning the removed element\n    pub fn remove(&mut self, index: u32) -> T {\n        let (new_slice, elem) = self.slice.remove(index);\n        self.slice = new_slice;\n        elem\n    }\n\n    /// Returns the number of elements in the vector\n    pub fn len(self) -> u32 {\n        self.slice.len()\n    }\n}\n\nmod tests {\n    use crate::collections::vec::Vec;\n\n    #[test]\n    fn set_updates_values_properly() {\n        let mut vec = Vec { slice: &[0, 0, 0, 0, 0] };\n\n        vec.set(0, 42);\n        assert_eq(vec.slice, &[42, 0, 0, 0, 0]);\n\n        vec.set(1, 43);\n        assert_eq(vec.slice, &[42, 43, 0, 0, 0]);\n\n        vec.set(2, 44);\n        assert_eq(vec.slice, &[42, 43, 44, 0, 0]);\n\n        vec.set(1, 10);\n        assert_eq(vec.slice, &[42, 10, 44, 0, 0]);\n\n        vec.set(0, 0);\n        assert_eq(vec.slice, &[0, 10, 44, 0, 0]);\n    }\n\n    #[test(should_fail)]\n    fn panics_when_writing_elements_past_end_of_vec() {\n        let mut vec = Vec::new();\n        vec.set(0, 42);\n\n        // Need to use println to avoid DIE removing the write operation.\n        crate::println(vec.get(0));\n    }\n}\n","path":"std/collections/vec.nr"},"17":{"source":"use crate::field::field_less_than;\nuse crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(x: Field) -> (Field, Field) {\n    // Here's we're taking advantage of truncating 128 bit limbs from the input field\n    // and then subtracting them from the input such the field division is equivalent to integer division.\n    let low = (x as u128) as Field;\n    let high = (x - low) / TWO_POW_128;\n\n    (low, high)\n}\n\npub(crate) unconstrained fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nunconstrained fn lte_hint(x: Field, y: Field) -> bool {\n    if x == y {\n        true\n    } else {\n        field_less_than(x, y)\n    }\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    // Safety: borrow is enforced to be boolean due to its type.\n    // if borrow is 0, it asserts that (alo > blo && ahi >= bhi)\n    // if borrow is 1, it asserts that (alo <= blo && ahi > bhi)\n    unsafe {\n        let borrow = lte_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size::<128>();\n        rhi.assert_max_bit_size::<128>();\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        // Safety: decomposition is properly checked below\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size::<128>();\n            xhi.assert_max_bit_size::<128>();\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(\n            // Safety: already unconstrained\n            unsafe { field_less_than(b, a) },\n        );\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unsafe in unconstrained\n        unsafe {\n            field_less_than(b, a)\n        }\n    } else if a == b {\n        false\n    } else {\n        // Safety: Take a hint of the comparison and verify it\n        unsafe {\n            if field_less_than(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{assert_gt, decompose, gt, lte_hint, PHI, PLO, TWO_POW_128};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_lte_hint() {\n        assert(lte_hint(0, 1));\n        assert(lte_hint(0, 0x100));\n        assert(lte_hint(0x100, TWO_POW_128 - 1));\n        assert(!lte_hint(0 - 1, 0));\n\n        assert(lte_hint(0, 0));\n        assert(lte_hint(0x100, 0x100));\n        assert(lte_hint(0 - 1, 0 - 1));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n","path":"std/field/bn254.nr"},"18":{"source":"pub mod bn254;\nuse crate::{runtime::is_unconstrained, static_assert};\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size<let BIT_SIZE: u32>(self) {\n        // docs:end:assert_max_bit_size\n        static_assert(\n            BIT_SIZE < modulus_num_bits() as u32,\n            \"BIT_SIZE must be less than modulus_num_bits\",\n        );\n        self.__assert_max_bit_size(BIT_SIZE);\n    }\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_le_bits)]\n    fn _to_le_bits<let N: u32>(self: Self) -> [u1; N] {}\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n    /// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n    /// wrap around due to overflow when verifying the decomposition.\n    #[builtin(to_be_bits)]\n    fn _to_be_bits<let N: u32>(self: Self) -> [u1; N] {}\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_le_bits\n        let bits = self._to_le_bits();\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[N - 1 - i] != p[N - 1 - i]) {\n                        assert(p[N - 1 - i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_be_bits\n        let bits = self._to_be_bits();\n\n        if !is_unconstrained() {\n            // Ensure that the decomposition does not overflow the modulus\n            let p = modulus_be_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[i] != p[i]) {\n                        assert(p[i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    // docs:start:to_le_radix\n    pub fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            static_assert(1 < radix, \"radix must be greater than 1\");\n            static_assert(radix <= 256, \"radix must be less than or equal to 256\");\n            static_assert(radix & (radix - 1) == 0, \"radix must be a power of 2\");\n        }\n        self.__to_le_radix(radix)\n    }\n    // docs:end:to_le_radix\n\n    // docs:start:to_be_radix\n    pub fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            crate::assert_constant(radix);\n        }\n        self.__to_be_radix(radix)\n    }\n    // docs:end:to_be_radix\n\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // `_radix` must be less than 256\n    #[builtin(to_be_radix)]\n    fn __to_be_radix<let N: u32>(self, radix: u32) -> [u8; N] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32 - i] as Field) * (r * self) + (1 - b[32 - i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N - 1 - i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n/// An unconstrained only built in to efficiently compare fields.\n#[builtin(field_less_than)]\nunconstrained fn __field_less_than(x: Field, y: Field) -> bool {}\n\npub(crate) unconstrained fn field_less_than(x: Field, y: Field) -> bool {\n    __field_less_than(x, y)\n}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unconstrained context\n        unsafe {\n            field_less_than(x, y)\n        }\n    } else {\n        let x_bytes: [u8; 32] = x.to_le_bytes();\n        let y_bytes: [u8; 32] = y.to_le_bytes();\n        let mut x_is_lt = false;\n        let mut done = false;\n        for i in 0..32 {\n            if (!done) {\n                let x_byte = x_bytes[32 - 1 - i] as u8;\n                let y_byte = y_bytes[32 - 1 - i] as u8;\n                let bytes_match = x_byte == y_byte;\n                if !bytes_match {\n                    x_is_lt = x_byte < y_byte;\n                    done = true;\n                }\n            }\n        }\n        x_is_lt\n    }\n}\n\nmod tests {\n    use crate::{panic::panic, runtime};\n    use super::field_less_than;\n\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_bytes();\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_bytes();\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        // 259, in base 256, big endian, is [1, 3].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 1, 3]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        // 259, in base 256, little endian, is [3, 1].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bytes, [3, 1, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_radix_example\n\n    #[test(should_fail_with = \"radix must be greater than 1\")]\n    fn test_to_le_radix_1() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(1);\n        } else {\n            panic(f\"radix must be greater than 1\");\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be greater than 2\n    //#[test]\n    //fn test_to_le_radix_brillig_1() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(1);\n    //        crate::println(out);\n    //        let expected = [0; 8];\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test(should_fail_with = \"radix must be a power of 2\")]\n    fn test_to_le_radix_3() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(3);\n        } else {\n            panic(f\"radix must be a power of 2\");\n        }\n    }\n\n    #[test]\n    fn test_to_le_radix_brillig_3() {\n        // this test should only fail in constrained mode\n        if runtime::is_unconstrained() {\n            let field = 1;\n            let out: [u8; 8] = field.to_le_radix(3);\n            let mut expected = [0; 8];\n            expected[0] = 1;\n            assert(out == expected, \"unexpected result\");\n        }\n    }\n\n    #[test(should_fail_with = \"radix must be less than or equal to 256\")]\n    fn test_to_le_radix_512() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(512);\n        } else {\n            panic(f\"radix must be less than or equal to 256\")\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be less than 512\n    //#[test]\n    //fn test_to_le_radix_brillig_512() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(512);\n    //        let mut expected = [0; 8];\n    //        expected[0] = 1;\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test]\n    unconstrained fn test_field_less_than() {\n        assert(field_less_than(0, 1));\n        assert(field_less_than(0, 0x100));\n        assert(field_less_than(0x100, 0 - 1));\n        assert(!field_less_than(0 - 1, 0));\n    }\n}\n","path":"std/field/mod.nr"},"19":{"source":"// Exposed only for usage in `std::meta`\npub(crate) mod poseidon2;\n\nuse crate::default::Default;\nuse crate::embedded_curve_ops::{\n    EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul, multi_scalar_mul_array_return,\n};\nuse crate::meta::derive_via;\n\n#[foreign(sha256_compression)]\n// docs:start:sha256_compression\npub fn sha256_compression(input: [u32; 16], state: [u32; 8]) -> [u32; 8] {}\n// docs:end:sha256_compression\n\n#[foreign(keccakf1600)]\n// docs:start:keccakf1600\npub fn keccakf1600(input: [u64; 25]) -> [u64; 25] {}\n// docs:end:keccakf1600\n\npub mod keccak {\n    #[deprecated(\"This function has been moved to std::hash::keccakf1600\")]\n    pub fn keccakf1600(input: [u64; 25]) -> [u64; 25] {\n        super::keccakf1600(input)\n    }\n}\n\n#[foreign(blake2s)]\n// docs:start:blake2s\npub fn blake2s<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake2s\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3\npub fn blake3<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake3\n{}\n\n// docs:start:pedersen_commitment\npub fn pedersen_commitment<let N: u32>(input: [Field; N]) -> EmbeddedCurvePoint {\n    // docs:end:pedersen_commitment\n    pedersen_commitment_with_separator(input, 0)\n}\n\n#[inline_always]\npub fn pedersen_commitment_with_separator<let N: u32>(\n    input: [Field; N],\n    separator: u32,\n) -> EmbeddedCurvePoint {\n    let mut points = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N];\n    for i in 0..N {\n        // we use the unsafe version because the multi_scalar_mul will constrain the scalars.\n        points[i] = from_field_unsafe(input[i]);\n    }\n    let generators = derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    multi_scalar_mul(generators, points)\n}\n\n// docs:start:pedersen_hash\npub fn pedersen_hash<let N: u32>(input: [Field; N]) -> Field\n// docs:end:pedersen_hash\n{\n    pedersen_hash_with_separator(input, 0)\n}\n\n#[no_predicates]\npub fn pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    let mut scalars: [EmbeddedCurveScalar; N + 1] = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N + 1];\n    let mut generators: [EmbeddedCurvePoint; N + 1] =\n        [EmbeddedCurvePoint::point_at_infinity(); N + 1];\n    let domain_generators: [EmbeddedCurvePoint; N] =\n        derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n\n    for i in 0..N {\n        scalars[i] = from_field_unsafe(input[i]);\n        generators[i] = domain_generators[i];\n    }\n    scalars[N] = EmbeddedCurveScalar { lo: N as Field, hi: 0 as Field };\n\n    let length_generator: [EmbeddedCurvePoint; 1] =\n        derive_generators(\"pedersen_hash_length\".as_bytes(), 0);\n    generators[N] = length_generator[0];\n    multi_scalar_mul_array_return(generators, scalars)[0].x\n}\n\n#[field(bn254)]\n#[inline_always]\npub fn derive_generators<let N: u32, let M: u32>(\n    domain_separator_bytes: [u8; M],\n    starting_index: u32,\n) -> [EmbeddedCurvePoint; N] {\n    crate::assert_constant(domain_separator_bytes);\n    // TODO(https://github.com/noir-lang/noir/issues/5672): Add back assert_constant on starting_index\n    __derive_generators(domain_separator_bytes, starting_index)\n}\n\n#[builtin(derive_pedersen_generators)]\n#[field(bn254)]\nfn __derive_generators<let N: u32, let M: u32>(\n    domain_separator_bytes: [u8; M],\n    starting_index: u32,\n) -> [EmbeddedCurvePoint; N] {}\n\n#[field(bn254)]\n// Same as from_field but:\n// does not assert the limbs are 128 bits\n// does not assert the decomposition does not overflow the EmbeddedCurveScalar\nfn from_field_unsafe(scalar: Field) -> EmbeddedCurveScalar {\n    // Safety: xlo and xhi decomposition is checked below\n    let (xlo, xhi) = unsafe { crate::field::bn254::decompose_hint(scalar) };\n    // Check that the decomposition is correct\n    assert_eq(scalar, xlo + crate::field::bn254::TWO_POW_128 * xhi);\n    EmbeddedCurveScalar { lo: xlo, hi: xhi }\n}\n\npub fn hash_to_field(inputs: [Field]) -> Field {\n    let mut sum = 0;\n\n    for input in inputs {\n        let input_bytes: [u8; 32] = input.to_le_bytes();\n        sum += crate::field::bytes32_to_field(blake2s(input_bytes));\n    }\n\n    sum\n}\n\n#[foreign(poseidon2_permutation)]\npub fn poseidon2_permutation<let N: u32>(_input: [Field; N], _state_length: u32) -> [Field; N] {}\n\n// Generic hashing support.\n// Partially ported and impacted by rust.\n\n// Hash trait shall be implemented per type.\n#[derive_via(derive_hash)]\npub trait Hash {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher;\n}\n\n// docs:start:derive_hash\ncomptime fn derive_hash(s: TypeDefinition) -> Quoted {\n    let name = quote { Hash };\n    let signature = quote { fn hash<H>(_self: Self, _state: &mut H) where H: std::hash::Hasher };\n    let for_each_field = |name| quote { _self.$name.hash(_state); };\n    crate::meta::make_trait_impl(\n        s,\n        name,\n        signature,\n        for_each_field,\n        quote {},\n        |fields| fields,\n    )\n}\n// docs:end:derive_hash\n\n// Hasher trait shall be implemented by algorithms to provide hash-agnostic means.\n// TODO: consider making the types generic here ([u8], [Field], etc.)\npub trait Hasher {\n    fn finish(self) -> Field;\n\n    fn write(&mut self, input: Field);\n}\n\n// BuildHasher is a factory trait, responsible for production of specific Hasher.\npub trait BuildHasher<H>\nwhere\n    H: Hasher,\n{\n    fn build_hasher(self) -> H;\n}\n\npub struct BuildHasherDefault<H>;\n\nimpl<H> BuildHasher<H> for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default,\n{\n    fn build_hasher(_self: Self) -> H {\n        H::default()\n    }\n}\n\nimpl<H> Default for BuildHasherDefault<H>\nwhere\n    H: Hasher + Default,\n{\n    fn default() -> Self {\n        BuildHasherDefault {}\n    }\n}\n\nimpl Hash for Field {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self);\n    }\n}\n\nimpl Hash for u1 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u8 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u16 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u32 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u64 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u128 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i8 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i16 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i32 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i64 {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for bool {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for () {\n    fn hash<H>(_self: Self, _state: &mut H)\n    where\n        H: Hasher,\n    {}\n}\n\nimpl<T, let N: u32> Hash for [T; N]\nwhere\n    T: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<T> Hash for [T]\nwhere\n    T: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.len().hash(state);\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<A, B> Hash for (A, B)\nwhere\n    A: Hash,\n    B: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n    }\n}\n\nimpl<A, B, C> Hash for (A, B, C)\nwhere\n    A: Hash,\n    B: Hash,\n    C: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n    }\n}\n\nimpl<A, B, C, D> Hash for (A, B, C, D)\nwhere\n    A: Hash,\n    B: Hash,\n    C: Hash,\n    D: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n    }\n}\n\nimpl<A, B, C, D, E> Hash for (A, B, C, D, E)\nwhere\n    A: Hash,\n    B: Hash,\n    C: Hash,\n    D: Hash,\n    E: Hash,\n{\n    fn hash<H>(self, state: &mut H)\n    where\n        H: Hasher,\n    {\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n        self.4.hash(state);\n    }\n}\n\n// Some test vectors for Pedersen hash and Pedersen Commitment.\n// They have been generated using the same functions so the tests are for now useless\n// but they will be useful when we switch to Noir implementation.\n#[test]\nfn assert_pedersen() {\n    assert_eq(\n        pedersen_hash_with_separator([1], 1),\n        0x1b3f4b1a83092a13d8d1a59f7acb62aba15e7002f4440f2275edb99ebbc2305f,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1], 1),\n        EmbeddedCurvePoint {\n            x: 0x054aa86a73cb8a34525e5bbed6e43ba1198e860f5f3950268f71df4591bde402,\n            y: 0x209dcfbf2cfb57f9f6046f44d71ac6faf87254afc7407c04eb621a6287cac126,\n            is_infinite: false,\n        },\n    );\n\n    assert_eq(\n        pedersen_hash_with_separator([1, 2], 2),\n        0x26691c129448e9ace0c66d11f0a16d9014a9e8498ee78f4d69f0083168188255,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2], 2),\n        EmbeddedCurvePoint {\n            x: 0x2e2b3b191e49541fe468ec6877721d445dcaffe41728df0a0eafeb15e87b0753,\n            y: 0x2ff4482400ad3a6228be17a2af33e2bcdf41be04795f9782bd96efe7e24f8778,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3], 3),\n        0x0bc694b7a1f8d10d2d8987d07433f26bd616a2d351bc79a3c540d85b6206dbe4,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3], 3),\n        EmbeddedCurvePoint {\n            x: 0x1fee4e8cf8d2f527caa2684236b07c4b1bad7342c01b0f75e9a877a71827dc85,\n            y: 0x2f9fedb9a090697ab69bf04c8bc15f7385b3e4b68c849c1536e5ae15ff138fd1,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4], 4),\n        0xdae10fb32a8408521803905981a2b300d6a35e40e798743e9322b223a5eddc,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4], 4),\n        EmbeddedCurvePoint {\n            x: 0x07ae3e202811e1fca39c2d81eabe6f79183978e6f12be0d3b8eda095b79bdbc9,\n            y: 0x0afc6f892593db6fbba60f2da558517e279e0ae04f95758587760ba193145014,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5], 5),\n        0xfc375b062c4f4f0150f7100dfb8d9b72a6d28582dd9512390b0497cdad9c22,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5], 5),\n        EmbeddedCurvePoint {\n            x: 0x1754b12bd475a6984a1094b5109eeca9838f4f81ac89c5f0a41dbce53189bb29,\n            y: 0x2da030e3cfcdc7ddad80eaf2599df6692cae0717d4e9f7bfbee8d073d5d278f7,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6], 6),\n        0x1696ed13dc2730062a98ac9d8f9de0661bb98829c7582f699d0273b18c86a572,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6], 6),\n        EmbeddedCurvePoint {\n            x: 0x190f6c0e97ad83e1e28da22a98aae156da083c5a4100e929b77e750d3106a697,\n            y: 0x1f4b60f34ef91221a0b49756fa0705da93311a61af73d37a0c458877706616fb,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7], 7),\n        0x128c0ff144fc66b6cb60eeac8a38e23da52992fc427b92397a7dffd71c45ede3,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7], 7),\n        EmbeddedCurvePoint {\n            x: 0x015441e9d29491b06563fac16fc76abf7a9534c715421d0de85d20dbe2965939,\n            y: 0x1d2575b0276f4e9087e6e07c2cb75aa1baafad127af4be5918ef8a2ef2fea8fc,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8),\n        0x2f960e117482044dfc99d12fece2ef6862fba9242be4846c7c9a3e854325a55c,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8], 8),\n        EmbeddedCurvePoint {\n            x: 0x1657737676968887fceb6dd516382ea13b3a2c557f509811cd86d5d1199bc443,\n            y: 0x1f39f0cb569040105fa1e2f156521e8b8e08261e635a2b210bdc94e8d6d65f77,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9),\n        0x0c96db0790602dcb166cc4699e2d306c479a76926b81c2cb2aaa92d249ec7be7,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9], 9),\n        EmbeddedCurvePoint {\n            x: 0x0a3ceae42d14914a432aa60ec7fded4af7dad7dd4acdbf2908452675ec67e06d,\n            y: 0xfc19761eaaf621ad4aec9a8b2e84a4eceffdba78f60f8b9391b0bd9345a2f2,\n            is_infinite: false,\n        },\n    );\n    assert_eq(\n        pedersen_hash_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10),\n        0x2cd37505871bc460a62ea1e63c7fe51149df5d0801302cf1cbc48beb8dff7e94,\n    );\n    assert_eq(\n        pedersen_commitment_with_separator([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10),\n        EmbeddedCurvePoint {\n            x: 0x2fb3f8b3d41ddde007c8c3c62550f9a9380ee546fcc639ffbb3fd30c8d8de30c,\n            y: 0x300783be23c446b11a4c0fabf6c91af148937cea15fcf5fb054abf7f752ee245,\n            is_infinite: false,\n        },\n    );\n}\n","path":"std/hash/mod.nr"},"22":{"source":"pub mod hash;\npub mod aes128;\npub mod array;\npub mod slice;\npub mod ecdsa_secp256k1;\npub mod ecdsa_secp256r1;\npub mod embedded_curve_ops;\npub mod field;\npub mod collections;\npub mod compat;\npub mod convert;\npub mod option;\npub mod string;\npub mod test;\npub mod cmp;\npub mod ops;\npub mod default;\npub mod prelude;\npub mod runtime;\npub mod meta;\npub mod append;\npub mod mem;\npub mod panic;\npub mod hint;\n\nuse convert::AsPrimitive;\n\n// Oracle calls are required to be wrapped in an unconstrained function\n// Thus, the only argument to the `println` oracle is expected to always be an ident\n#[oracle(print)]\nunconstrained fn print_oracle<T>(with_newline: bool, input: T) {}\n\nunconstrained fn print_unconstrained<T>(with_newline: bool, input: T) {\n    print_oracle(with_newline, input);\n}\n\npub fn println<T>(input: T) {\n    // Safety: a print statement cannot be constrained\n    unsafe {\n        print_unconstrained(true, input);\n    }\n}\n\npub fn print<T>(input: T) {\n    // Safety: a print statement cannot be constrained\n    unsafe {\n        print_unconstrained(false, input);\n    }\n}\n\npub fn verify_proof<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n) {\n    verify_proof_internal(verification_key, proof, public_inputs, key_hash, 0);\n}\n\npub fn verify_proof_with_type<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n    proof_type: u32,\n) {\n    if !crate::runtime::is_unconstrained() {\n        crate::assert_constant(proof_type);\n    }\n    verify_proof_internal(verification_key, proof, public_inputs, key_hash, proof_type);\n}\n\n#[foreign(recursive_aggregation)]\nfn verify_proof_internal<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n    proof_type: u32,\n) {}\n\n// Asserts that the given value is known at compile-time.\n// Useful for debugging for-loop bounds.\n#[builtin(assert_constant)]\npub fn assert_constant<T>(x: T) {}\n\n// Asserts that the given value is both true and known at compile-time\n#[builtin(static_assert)]\npub fn static_assert<let N: u32>(predicate: bool, message: str<N>) {}\n\npub fn wrapping_add<T>(x: T, y: T) -> T\nwhere\n    T: AsPrimitive<Field>,\n    Field: AsPrimitive<T>,\n{\n    AsPrimitive::as_(x.as_() + y.as_())\n}\n\npub fn wrapping_sub<T>(x: T, y: T) -> T\nwhere\n    T: AsPrimitive<Field>,\n    Field: AsPrimitive<T>,\n{\n    //340282366920938463463374607431768211456 is 2^128, it is used to avoid underflow\n    AsPrimitive::as_(x.as_() + 340282366920938463463374607431768211456 - y.as_())\n}\n\npub fn wrapping_mul<T>(x: T, y: T) -> T\nwhere\n    T: AsPrimitive<Field>,\n    Field: AsPrimitive<T>,\n{\n    AsPrimitive::as_(x.as_() * y.as_())\n}\n\n#[builtin(as_witness)]\npub fn as_witness(x: Field) {}\n\nmod tests {\n    use super::wrapping_mul;\n\n    #[test(should_fail_with = \"custom message\")]\n    fn test_static_assert_custom_message() {\n        super::static_assert(1 == 2, \"custom message\");\n    }\n\n    #[test(should_fail)]\n    fn test_wrapping_mul() {\n        // This currently fails.\n        // See: https://github.com/noir-lang/noir/issues/7528\n        let zero: u128 = 0;\n        let one: u128 = 1;\n        let two_pow_64: u128 = 0x10000000000000000;\n        let u128_max: u128 = 0xffffffffffffffffffffffffffffffff;\n\n        // 1*0==0\n        assert_eq(zero, wrapping_mul(zero, one));\n\n        // 0*1==0\n        assert_eq(zero, wrapping_mul(one, zero));\n\n        // 1*1==1\n        assert_eq(one, wrapping_mul(one, one));\n\n        // 0 * ( 1 << 64 ) ==  0\n        assert_eq(zero, wrapping_mul(zero, two_pow_64));\n\n        // ( 1 << 64 ) * 0 == 0\n        assert_eq(zero, wrapping_mul(two_pow_64, zero));\n\n        // 1 * ( 1 << 64 ) == 1 << 64\n        assert_eq(two_pow_64, wrapping_mul(two_pow_64, one));\n\n        // ( 1 << 64 ) * 1 == 1 << 64\n        assert_eq(two_pow_64, wrapping_mul(one, two_pow_64));\n\n        // ( 1 << 64 ) * ( 1 << 64 ) == 1 << 64\n        assert_eq(zero, wrapping_mul(two_pow_64, two_pow_64));\n        // -1 * -1 == 1\n        assert_eq(one, wrapping_mul(u128_max, u128_max));\n    }\n}\n","path":"std/lib.nr"},"50":{"source":"mod tests;\nmod utils;\n\nuse jwt::JWT;\n\nuse zkemail::{\n    headers::{body_hash::get_body_hash, email_address::get_email_address},\n    MAX_EMAIL_ADDRESS_LENGTH, partial_hash::partial_sha256_var_end,\n    dkim::RSAPubkey, Sequence,\n    KEY_LIMBS_2048\n};\n\nuse utils::position_and_salary_extractor::{\n    extract_position_from_email_body, // @dev - extract_position_from_email_body() function\n    extract_salary_from_email_body    // @dev - extract_salary_from_body() function\n}; \nuse utils::email_dkim_verifier::{\n    MAX_EMAIL_HEADER_LENGTH, MAX_EMAIL_BODY_LENGTH, MAX_BODY_TRIMMED_LENGTH,\n    //verify_email_2048_bit_dkim,                         // @dev - verify_email_2048_bit_dkim() function\n    verify_email_2048_bit_dkim_without_body_hash_check    // @dev - verify_email_2048_bit_dkim_without_body_hash_check() function\n};\n\n// @dev - [NOTE]: The following imported-variables are temporary variables. They are stored into the \"test_header\" and \"test_body\" for passing the verify_email_2048_bit_dkim() function. Thus, this should be removed once appropreate implementation will be done in the future.\nuse tests::test_inputs::{\n    EmailLarge::{\n        HEADER, BODY,\n    },\n    EmploymentOfferEmailLarge::{\n        EMPLOYMENT_OFFER_EMAIL_HEADER, EMPLOYMENT_OFFER_EMAIL_BODY,\n        POSITION_BODY, SALARY_BODY,\n    },\n};\n\nglobal MAX_PARTIAL_DATA_LENGTH: u32 = 640; // signed data length after partial SHA\nglobal MAX_DOMAIN_LENGTH: u32 = 64;\nglobal MAX_EMAIL_LENGTH: u32 = 128;\nglobal MAX_POSITION_LENGTH: u32 = 128;\nglobal MAX_SALARY_LENGTH: u32 = 32;\n\n// Rating must be between 1 and 5\nfn verify_rating(rating: u8) {\n    assert(rating >= 1, \"rating must be at least 1\");\n    assert(rating <= 5, \"rating must be at most 5\");\n}\n\n/**\n * @brief Verify JWT signature (RSA/SHA256 only) and validate domain field\n * Also verify position and salary claims\n *\n * @param partial_data: OIDC JWT (id_token) base64 data (`$header.$payload`) as byte array of ascii characters\n *                      We do partial SHA on the data up to hd field outside of the circuit, to reduce constraints\n *                      This field only contains the bytes after partial SHA; padded to MAX_PARTIAL_DATA_LENGTH\n * @param partial_hash: The 256-bit partial hash of the `data`\n * @param full_data_length: The full length of the `data` (before partial SHA)\n * @param base64_decode_offset: Offset needed in `partial_data` to make the payloadB64 a multiple of 4\n *                    Signed data is $header.$payload. $payload might not be a multiple of 4 in `partial_data`, so we need to offset\n *                    Not attack-able by giving an incorrect offset, as string match of domain will fail\n * @param jwt_pubkey_modulus_limbs: RSA public key modulus limbs (2048-bit split into 18 limbs)\n * @param jwt_pubkey_redc_params_limbs: RSA reduction parameters limbs\n * @param jwt_signature_limbs: RSA signature limbs\n * @param domain: Domain name (`hd` key) as a byte array of ascii characters padded to MAX_DOMAIN_LENGTH\n * @param position: Position at the company as a byte array of ascii characters padded to MAX_POSITION_LENGTH\n * @param salary: Salary at the company as a byte array of ascii characters padded to MAX_SALARY_LENGTH\n * @param work_life_balance: Work-life balance rating (1-5)\n * @param culture_values: Culture and values rating (1-5)\n * @param career_growth: Career growth rating (1-5)\n * @param compensation_benefits: Compensation and benefits rating (1-5)\n * @param leadership_quality: Leadership quality rating (1-5)\n * @param operational_efficiency: Operational efficiency rating (1-5)\n **/\nfn main(\n    partial_data: BoundedVec<u8, MAX_PARTIAL_DATA_LENGTH>,\n    partial_hash: [u32; 8],\n    full_data_length: u32,\n    base64_decode_offset: u32,\n    jwt_pubkey_modulus_limbs: [u128; 18],\n    jwt_pubkey_redc_params_limbs: [u128; 18],\n    jwt_signature_limbs: [u128; 18],\n    domain: BoundedVec<u8, MAX_DOMAIN_LENGTH>,\n    position: BoundedVec<u8, MAX_POSITION_LENGTH>,   // Position, which is part of Email Body-extracted from the Entire Email Body.\n    salary: BoundedVec<u8, MAX_SALARY_LENGTH>,       // Salary, which is part of Email Body-extracted from the Entire Email Body.\n    work_life_balance: u8,\n    culture_values: u8,\n    career_growth: u8,\n    compensation_benefits: u8,\n    leadership_quality: u8,\n    operational_efficiency: u8,\n    // @dev - The following input parameters would be for email verification /w ZKEmail.nr\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,  // Entire Email Header\n    //body: BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>,    // Entire Email Body\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n    //body_hash_index: u32,\n    dkim_header_sequence: Sequence,\n    body_trimmed: BoundedVec<u8, MAX_BODY_TRIMMED_LENGTH>, // Trimmed Email Body, which the Header and HTML parts are cut off.\n) -> pub Field {\n    // Init JWT struct and verify signature\n    let jwt = JWT::init_with_partial_hash(\n        partial_data,\n        partial_hash,\n        full_data_length,\n        base64_decode_offset,\n        jwt_pubkey_modulus_limbs,\n        jwt_pubkey_redc_params_limbs,\n        jwt_signature_limbs,\n    );\n    jwt.verify();\n\n    // Assert email_verified claim\n    jwt.assert_claim_bool(\"email_verified\".as_bytes(), true);\n\n    // Get email claim\n    let email: BoundedVec<u8, MAX_EMAIL_LENGTH> = jwt.get_claim_string(\"email\".as_bytes());\n\n    // Get domain start_index from email claim - unconstrained, but we verify the domain bytes below\n    // Safety: This function is unconstrained but its output is verified by the domain check below\n    let domain_start_index = unsafe { get_domain_start_index_in_email(email) };\n\n    // Verify domain passed is present in the email claim after the @\n    assert(email.storage()[domain_start_index - 1] == 64, \"char before domain is not '@'\");\n    for i in 0..MAX_DOMAIN_LENGTH {\n        assert(email.storage()[domain_start_index + i] == domain.storage()[i], \"invalid domain\");\n    }\n\n    // Verify position and salary claims\n    // These are separate inputs, NOT from the JWT\n    let position_claim: BoundedVec<u8, MAX_POSITION_LENGTH> = position;\n    for i in 0..MAX_POSITION_LENGTH {\n        assert(position_claim.storage()[i] == position.storage()[i], \"invalid position\");\n    }\n\n    let salary_claim: BoundedVec<u8, MAX_SALARY_LENGTH> = salary;\n    for i in 0..MAX_SALARY_LENGTH {\n        assert(salary_claim.storage()[i] == salary.storage()[i], \"invalid salary\");\n    }\n\n    // Verify ratings are valid (1-5)\n    verify_rating(work_life_balance);\n    verify_rating(culture_values);\n    verify_rating(career_growth);\n    verify_rating(compensation_benefits);\n    verify_rating(leadership_quality);\n    verify_rating(operational_efficiency);\n\n    // @dev - Verify an arbitrary email, which is signed by a 2048-bit RSA DKIM signature - without (skipping) body hash check\n    let return_value: [Field; 2] = verify_email_2048_bit_dkim_without_body_hash_check(\n        header,\n        pubkey,\n        signature,\n        dkim_header_sequence\n    );\n    let pubkey_hash: Field = return_value[0];\n    let email_nullifier: Field = return_value[1];\n\n    // @dev - [Log]:\n    println(f\"body_trimmed: {body_trimmed}\\n\");\n    println(f\"position: {position}\\n\");\n    println(f\"salary: {salary}\\n\");\n\n    /// @dev - Validate to check whether a given \"position\" is included in the entire email body or not.\n    /// @dev - Compare a given \"position\" (BoundedVec<u8, MAX_POSITION_LENGTH>) and a given \"body\" (BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>)\n    let is_position_found_in_email_body: bool = unsafe { is_position_found_in_email_body(position, body_trimmed) };\n    assert(is_position_found_in_email_body == true, \"Position can not be found in email body\");\n\n    /// @dev - Validate to check whether a given \"salary\" is included in the entire email body or not.\n    /// @dev - Compare a given \"salary\" (BoundedVec<u8, MAX_SALARY_LENGTH>) and a given \"body\" (BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>)\n    let is_salary_found_in_email_body: bool = unsafe { is_salary_found_in_email_body(salary, body_trimmed) };\n    assert(is_salary_found_in_email_body == true, \"Salary can not be found in email body\");\n\n    // @dev - Return value\n    email_nullifier\n}\n\n\n/**\n * @notice - Get (Identify) a start index of domain in email\n */\nunconstrained fn get_domain_start_index_in_email(email: BoundedVec<u8, MAX_EMAIL_LENGTH>) -> u32 {\n    let mut domain_start_index = 0;\n    for i in 0..MAX_EMAIL_LENGTH {\n        if email.storage()[i] == (\"@\".as_bytes())[0] {\n            domain_start_index = i + 1;\n            break;\n        }\n    }\n\n    domain_start_index\n}\n\n/**\n * @dev - Validate to check whether a given \"position\" is included in the entire email body or not.\n * @dev - Compare a given \"position\" (BoundedVec<u8, MAX_POSITION_LENGTH>) and a given \"body\" (BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>)\n */\nunconstrained fn is_position_found_in_email_body(\n    position: BoundedVec<u8, MAX_POSITION_LENGTH>, \n    body: BoundedVec<u8, MAX_BODY_TRIMMED_LENGTH>\n) -> bool {\n    /// @dev - Logging\n    let position_storage = position.storage(); \n    let body_storage = body.storage(); \n    println(f\"position.storage(): {position_storage}\\n\");\n    println(f\"body.storage(): {body_storage}\\n\");\n\n    /// @dev - Look for \"position\" in \"email_body\"\n    let mut is_position_found_in_email_body: bool = false;\n    for i in 0..body.len() {\n        if (position.storage()[0] == body.storage()[i]) {\n            if (position.len() == 1) { // @dev - The position and the sentence in the Email Body would completely be matched - In the case that the number of vectors of \"position\" is \"1\". \n                is_position_found_in_email_body = true;\n                break;\n            }\n\n            let mut position_array: Vec<u8> = Vec::new();\n            //let mut position_array: BoundedVec<Field, position.len()> = BoundedVec::new();\n            for j in 1..position.len() {\n                if (position.storage()[j] == body.storage()[i+j]) {\n                    position_array.push(position.storage()[j]);\n                    println(f\"position_array: {position_array}\\n\");\n\n                    /// @dev - Logging\n                    let position_len = position.len() - 1;\n                    let position_array_len = position_array.len();\n                    println(f\"position.len() - 1: {position_len}\\n\");\n                    println(f\"position_array.len(): {position_array_len}\\n\");\n\n                    /// @dev - The position and the sentence in the Email Body would completely be matched - In the case that the number of vectors of \"position\" is \"many\" (Not \"1\"). \n                    if ((j == position.len() - 1) & (position_array.len() == position.len() - 1)) { /// @dev - Since \"j\" get started from \"1\", \"1\" should be subtracted from the position.len()\n                        is_position_found_in_email_body = true;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    is_position_found_in_email_body\n}\n\n/** \n * @dev - Validate to check whether a given \"salary\" is included in the entire email body or not.\n * @dev - Compare a given \"salary\" (BoundedVec<u8, MAX_SALARY_LENGTH>) and a given \"body\" (BoundedVec<u8, MAX_EMAIL_BODY_LENGTH>)\n * @dev - In the following implementation, the maximum number of sequences-matched is 5. (\"5\" is enuough for judging whether a given salary is included in the email body or not)\n */\nunconstrained fn is_salary_found_in_email_body(\n    salary: BoundedVec<u8, MAX_SALARY_LENGTH>, \n    body: BoundedVec<u8, MAX_BODY_TRIMMED_LENGTH>\n) -> bool {\n    let mut is_salary_found_in_email_body: bool = false;\n    for i in 0..body.len() {\n        if (salary.storage()[0] == body.storage()[i]) {\n            if (salary.len() == 1) {\n                // @dev - Salary is found in the email body\n                is_salary_found_in_email_body = true;\n                break;\n            }\n\n            let mut salary_array: Vec<u8> = Vec::new();\n            //let mut salary_array: BoundedVec<Field, salary.len()> = BoundedVec::new();\n            for j in 1..salary.len() {\n                if (salary.storage()[j] == body.storage()[i+j]) {\n                    salary_array.push(salary.storage()[j]);\n                    println(f\"salary_array: {salary_array}\\n\");\n\n                    /// @dev - Logging\n                    let salary_len = salary.len() - 1;\n                    let salary_array_len = salary_array.len();\n                    println(f\"salary.len() - 1: {salary_len}\\n\");\n                    println(f\"position_array.len(): {salary_array_len}\\n\");\n\n                    // @dev - The position and the sentence in the Email Body would completely be matched - In the case that the number of vectors of \"position\" is \"many\" (Not \"1\"). \n                    if ((j == salary.len() - 1) & (salary_array.len() == salary.len() - 1)) { /// @dev - Since \"j\" get started from \"1\", \"1\" should be subtracted from the position.len()\n                        is_salary_found_in_email_body = true;\n                        break;\n                    }\n                }\n            }\n         }\n    }\n\n    is_salary_found_in_email_body\n}","path":"/Users/unomasanori/Projects/DEMO_MVP/【Noir】NoirHack - OpenBands (zkGlassdoor 👓)/actual-impl/OpenBands/circuits/circuit-for-zkemail-2048-bit-dkim/src/main.nr"},"53":{"source":"use std::{collections::bounded_vec::BoundedVec, hash::{pedersen_hash}};\n//use std::{collections::bounded_vec::BoundedVec, hash::{pedersen_hash, sha256_var}};\n\nuse zkemail::{\n    dkim::RSAPubkey, \n    headers::body_hash::get_body_hash, \n    KEY_LIMBS_2048, \n    Sequence\n};\n\nglobal MAX_EMAIL_HEADER_LENGTH: u32 = 1504;\n//global MAX_EMAIL_HEADER_LENGTH: u32 = 512;\nglobal MAX_EMAIL_BODY_LENGTH: u32 = 32000;\n//global MAX_EMAIL_BODY_LENGTH: u32 = 1024;\n\nglobal MAX_BODY_TRIMMED_LENGTH: u32 = 2048;\n\n\n/**\n * Verify an arbitrary email signed by a 2048-bit RSA DKIM signature - without (skipping) body hash check\n * @dev TOTAL CONSTRAINTS: ~222,783\n *\n * @param header - The email header, 0-padded at end to the MAX_EMAIL_HEADER_LENGTH\n * @param pubkey - The DKIM RSA Public Key modulus and reduction parameter\n * @param signature - The DKIM RSA Signature\n * @param dkim_header_sequence - The index and length of the DKIM header field\n * @return - \n *         0: Pedersen hash of DKIM public key (root of trust)\n *         1: Pedersen hash of DKIM signature (email nullifier)\n */\nfn verify_email_2048_bit_dkim_without_body_hash_check(\n    header: BoundedVec<u8, MAX_EMAIL_HEADER_LENGTH>,\n    pubkey: RSAPubkey<KEY_LIMBS_2048>,\n    signature: [Field; KEY_LIMBS_2048],\n    dkim_header_sequence: Sequence,\n) -> [Field; 2] {        // @dev - Since Noir (Nargo) version v1.0.0, the `pub` keyword can not be used for the return value of the internal function.   \n//) -> pub [Field; 2] {\n    // check the body and header lengths are within bounds\n    assert(header.len() <= MAX_EMAIL_HEADER_LENGTH);\n\n    // ~ 86,553 constraints\n    // verify the dkim signature over the header\n    pubkey.verify_dkim_signature(header, signature);\n\n    // ~ 10,255 constraints\n    // hash the pubkey and signature for the standard outputs\n    let email_nullifier = pedersen_hash(signature);\n    [pubkey.hash(), email_nullifier]\n}","path":"/Users/unomasanori/Projects/DEMO_MVP/【Noir】NoirHack - OpenBands (zkGlassdoor 👓)/actual-impl/OpenBands/circuits/circuit-for-zkemail-2048-bit-dkim/src/utils/email_dkim_verifier.nr"},"56":{"source":"mod partial_hash;\n\nuse base64::BASE64_URL_DECODER;\nuse bignum::{params::BigNumParams, RuntimeBigNum};\nuse nodash::str_to_u64;\nuse partial_hash::partial_sha256_var_end;\nuse rsa::rsa::verify_sha256_pkcs1v15;\nuse sha256::sha256_var;\nuse string_search::{StringBody, SubString};\n\n/**\n * @brief Struct representing a JWT. Use the init functions to create an instance\n *        Currently only supports RSA 2048/SHA256 signatures\n **/\npub struct JWT<let MAX_DATA_LENGTH: u32> {\n    data: BoundedVec<u8, MAX_DATA_LENGTH>,\n    pubkey_modulus_limbs: [u128; 18],\n    redc_params_limbs: [u128; 18],\n    signature_limbs: [u128; 18],\n    partial_hash: [u32; 8],\n    full_data_length: u32,\n    base64_decode_offset: u32,\n    is_partial_hash: bool, // compile time variable used internally\n}\n\nimpl<let MAX_DATA_LENGTH: u32> JWT<MAX_DATA_LENGTH> {\n    /**\n    * @brief Initialize JWT struct\n    *\n    * @param data: Signed JWT data (base64 encoded `$header.$payload`) as byte array of ascii characters\n    * @param base64_decode_offset: The offset from which we will start base64 decoding the data.\n    *                                   Any 4x multiple from the payload start index.\n    * @param pubkey_modulus_limbs: RSA public key modulus limbs (2048-bit split into 18 limbs)\n    * @param redc_params_limbs: RSA reduction parameters limbs (2048-bit split into 18 limbs)\n    * @param signature_limbs: RSA signature limbs (2048-bit split into 18 limbs)\n    **/\n    pub fn init(\n        data: BoundedVec<u8, MAX_DATA_LENGTH>,\n        base64_decode_offset: u32,\n        pubkey_modulus_limbs: [u128; 18],\n        redc_params_limbs: [u128; 18],\n        signature_limbs: [u128; 18],\n    ) -> JWT<MAX_DATA_LENGTH> {\n        assert(data.len() <= MAX_DATA_LENGTH, \"data length is too long\");\n\n        JWT {\n            data,\n            base64_decode_offset,\n            pubkey_modulus_limbs,\n            redc_params_limbs,\n            signature_limbs,\n            // below fields are not relevant unless for partial hash\n            full_data_length: MAX_DATA_LENGTH,\n            partial_hash: [0; 8],\n            is_partial_hash: false,\n        }\n    }\n\n    /**\n    * @brief Initialize JWT with partial SHA256 hash'ed input\n    *        Since SHA hash is expensive to compute in circuit, we can optimize by pre-hashing up to a certain block outside the circuit,\n    *        and verify for correctness in the circuit. This is possible since SHA works in incremental blocks.\n    *        You can pre-hash up to the SHA-256 block from where you want to extract a claim.\n    *\n    * @param partial_data: Signed JWT data (base64 encoded `$header.$payload`) after partial hashed block\n    * @param partial_hash: The 256-bit partial hash of the `partial_data` up to a certain block\n    * @param full_data_length: The full length of the `data` (before partial SHA)\n    * @param base64_decode_offset: The offset from which we will start base64 decoding the data.\n    *                                   Trimming `offset` nubmer of bytes from the data should it base64 decode-able.\n    * @param pubkey_modulus_limbs: RSA public key modulus limbs (2048-bit split into 18 limbs)\n    * @param redc_params_limbs: RSA reduction parameters limbs\n    * @param signature_limbs: RSA signature limbs\n    **/\n    pub fn init_with_partial_hash(\n        partial_data: BoundedVec<u8, MAX_DATA_LENGTH>,\n        partial_hash: [u32; 8],\n        full_data_length: u32,\n        base64_decode_offset: u32,\n        pubkey_modulus_limbs: [u128; 18],\n        redc_params_limbs: [u128; 18],\n        signature_limbs: [u128; 18],\n    ) -> JWT<MAX_DATA_LENGTH> {\n        assert(partial_data.len() <= MAX_DATA_LENGTH, \"partial_data length is too long\");\n\n        JWT {\n            data: partial_data,\n            full_data_length,\n            partial_hash,\n            base64_decode_offset,\n            pubkey_modulus_limbs,\n            redc_params_limbs,\n            signature_limbs,\n            is_partial_hash: true,\n        }\n    }\n\n    /**\n    * @brief Verify JWT signature with RSA 2048/SHA256\n    **/\n    pub fn verify(mut self) {\n        let mut data_hash: [u8; 32] = [0; 32];\n\n        if (!self.is_partial_hash) {\n            // this is a compile time conditional\n            // Hash the data using SHA256\n            data_hash = sha256_var(self.data.storage(), self.data.len() as u64);\n        } else {\n            // Compute the full SHA256 hash with the given partial hash\n            data_hash = partial_sha256_var_end(\n                self.partial_hash,\n                self.data.storage(),\n                self.data.len() as u64,\n                self.full_data_length as u64,\n            );\n        }\n\n        // Verify RSA signature\n        let params: BigNumParams<18, 2048> =\n            BigNumParams::new(false, self.pubkey_modulus_limbs, self.redc_params_limbs);\n\n        let signature = RuntimeBigNum { params, limbs: self.signature_limbs };\n\n        assert(verify_sha256_pkcs1v15(data_hash, signature, 65537));\n    }\n\n    /**\n    * @brief Get a string claim from the JWT payload\n    *\n    * @param KEY_LENGTH: The length of the claim key\n    * @param MAX_VALUE_LENGTH: The maximum length of the claim value\n    * @param claim_key: The claim key\n    * @return: The claim value\n    **/\n    pub fn get_claim_string<let KEY_LENGTH: u32, let MAX_VALUE_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n    ) -> BoundedVec<u8, MAX_VALUE_LENGTH> {\n        self.get_claim::<KEY_LENGTH, MAX_VALUE_LENGTH>(claim_key, true)\n    }\n\n    /**\n    * @brief Assert a string claim in the JWT payload.\n    *        Refer to `get_claim_string` for details on the `KEY_LENGTH` and `MAX_VALUE_LENGTH`.\n    * @param claim_key: The claim key\n    * @param claim_value: The claim value to assert\n    **/\n    pub fn assert_claim_string<let KEY_LENGTH: u32, let MAX_VALUE_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n        claim_value: BoundedVec<u8, MAX_VALUE_LENGTH>,\n    ) {\n        let value: BoundedVec<u8, MAX_VALUE_LENGTH> =\n            self.get_claim_string::<KEY_LENGTH, MAX_VALUE_LENGTH>(claim_key);\n        assert(value == claim_value, \"incorrect value for claim\");\n    }\n\n    /**\n    * @brief Get a number (u64) claim from the JWT payload\n    *        Refer to `get_claim_string` for details on the `KEY_LENGTH` and `MAX_VALUE_LENGTH`.\n    * @param claim_key: The claim key\n    * @return: The claim value\n    **/\n    pub fn get_claim_number<let KEY_LENGTH: u32>(self, claim_key: [u8; KEY_LENGTH]) -> u64 {\n        let claim = self.get_claim::<KEY_LENGTH, 20>(claim_key, false);\n        str_to_u64(claim.storage())\n    }\n\n    /**\n    * @brief Assert a number (u64) claim in the JWT payload.\n    *        Refer to `get_claim_number` for details on the `KEY_LENGTH` and `MAX_VALUE_LENGTH`.\n    * @param claim_key: The claim key\n    * @param claim_value: The claim value to assert\n    **/\n    pub fn assert_claim_number<let KEY_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n        claim_value: u64,\n    ) {\n        let value = self.get_claim_number::<KEY_LENGTH>(claim_key);\n        assert(value == claim_value, \"incorrect value for claim\");\n    }\n\n    /**\n    * @brief Get a boolean claim from the JWT payload\n    * @param claim_key: The claim key\n    * @return: The claim value\n    **/\n    pub fn get_claim_bool<let KEY_LENGTH: u32>(self, claim_key: [u8; KEY_LENGTH]) -> bool {\n        let value = self.get_claim::<KEY_LENGTH, 5>(claim_key, false);\n        let mut is_true = true;\n        for i in 0..4 {\n            is_true = is_true & (value.storage()[i] == \"true\".as_bytes()[i]);\n        }\n        let is_false = value.storage() == \"false\".as_bytes();\n\n        assert(is_true | is_false, \"incorrect value for claim\");\n        is_true\n    }\n\n    /**\n    * @brief Assert a boolean claim in the JWT payload.\n    *        Refer to `get_claim_bool` for details on the `KEY_LENGTH` and `MAX_VALUE_LENGTH`.\n    * @param claim_key: The claim key\n    * @param claim_value: The claim value to assert\n    **/\n    pub fn assert_claim_bool<let KEY_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n        claim_value: bool,\n    ) {\n        let value = self.get_claim_bool::<KEY_LENGTH>(claim_key);\n        assert(value == claim_value, \"incorrect value for claim\");\n    }\n\n    /**\n    * @brief Internal function to get claim bytes from the JWT payload\n    **/\n    fn get_claim<let KEY_LENGTH: u32, let MAX_VALUE_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n        is_value_quoted: bool,\n    ) -> BoundedVec<u8, MAX_VALUE_LENGTH> {\n        //Safety: extract the value in unconstrained mode, and verify later\n        let value: BoundedVec<u8, MAX_VALUE_LENGTH> = unsafe {\n            self.extract_claim_unconstrained::<KEY_LENGTH, MAX_VALUE_LENGTH>(\n                claim_key,\n                is_value_quoted,\n            )\n        };\n\n        // constrain the extracted value is present in the payload using string_search lib\n        // haystack is the base64 decoded payload;\n        let haystack = self.prepare_haystack();\n\n        // needle is the key with quotes around it - searching for just the key string might return false positives from elsewhere\n        // Note: key length is known at compile time as this lib doesn't support runtime keys\n        let mut key_with_quote: [u8; KEY_LENGTH + 2] = [0; KEY_LENGTH + 2];\n        key_with_quote[0] = 34; // ascii for quote\n        for i in 0..KEY_LENGTH {\n            key_with_quote[i + 1] = claim_key[i];\n        }\n        key_with_quote[KEY_LENGTH + 1] = 34; // ascii for quote\n\n        let mut needle: SubString<(((KEY_LENGTH + 2) + 31) / 31) * 31, (KEY_LENGTH + 2) / 31, (KEY_LENGTH + 2)> =\n            SubString::new(key_with_quote, key_with_quote.len());\n\n        let (result, position): (bool, u32) = haystack.substring_match(needle);\n        assert(result, \"key not found in the payload\");\n\n        // assert value after quoted key is a colon\n        let colon_index = position + KEY_LENGTH + 2; // +2 for the quotes around the key\n        assert(haystack.body[colon_index] == 58); // :\n\n        // assert the value is correct - string have quotes around them, numbers and booleans don't\n        let mut value_start_index = colon_index + 1; // Value starts after the colon\n        let mut index_after_value = value_start_index + value.len(); // Index after the value, quoted or otherwise\n\n        if (is_value_quoted) {\n            // adjust start index for the quotes around the value\n            value_start_index = value_start_index + 1; // Adjust for the quote before the value\n            index_after_value = index_after_value + 2; // Adjust for the quotes around the value\n\n            // assert the char before and after the value is a quote\n            assert(haystack.body[value_start_index - 1] == 34); // \"\n            assert(haystack.body[index_after_value - 1] == 34); // \"\n        }\n\n        // assert the value is correct\n        for i in 0..MAX_VALUE_LENGTH {\n            if (i < value.len()) {\n                assert(haystack.body[value_start_index + i] == value.storage()[i]);\n            }\n        }\n\n        // assert the char after the value is a comma or a closing brace (last claim in the payload)\n        let char_after_value = haystack.body[index_after_value];\n        assert((char_after_value == 44) | (char_after_value == 125)); // , or }\n\n        value\n    }\n\n    /**\n    * @brief Internal function to prepare the haystack for string search (base64 decoded payload with offset applied)\n    **/\n    fn prepare_haystack(\n        self,\n    ) -> StringBody<((((MAX_DATA_LENGTH / 4) * 3) + 31) / 31) * 31, (((MAX_DATA_LENGTH / 4) * 3) + 31) / 31, ((MAX_DATA_LENGTH / 4) * 3)> {\n        // We need to decode the payload from the payload_b64_offset; i.e. data.slice(0, base64_decode_offset)\n        let mut data_to_b64_decode: [u8; MAX_DATA_LENGTH] = [0; MAX_DATA_LENGTH];\n\n        // Conditional inside the for loop blows up the constraint size\n        // So we fill the full MAX_DATA_LENGTH (rotate on overflow) and prepare a BoundedVec with the correct length later\n        for i in 0..MAX_DATA_LENGTH {\n            data_to_b64_decode[i] =\n                self.data.storage()[(i + self.base64_decode_offset) % self.data.len()];\n        }\n\n        let data_to_decode_bv: BoundedVec<u8, MAX_DATA_LENGTH> = BoundedVec::from_parts(\n            data_to_b64_decode,\n            self.data.len() - self.base64_decode_offset,\n        );\n\n        // Decode the payload\n        let payload: BoundedVec<u8, ((MAX_DATA_LENGTH / 4) * 3)> =\n            BASE64_URL_DECODER::decode_var(data_to_decode_bv); // b64 decoded length is ceil(MAX_DATA_LENGTH / 3) * 4\n\n        // Create the haystack\n        let haystack: StringBody<((((MAX_DATA_LENGTH / 4) * 3) + 31) / 31) * 31, (((MAX_DATA_LENGTH / 4) * 3) + 31) / 31, ((MAX_DATA_LENGTH / 4) * 3)> =\n            StringBody::new(payload.storage(), payload.len());\n\n        haystack\n    }\n\n    /**\n    * @brief Unconstrained function to extract claim bytes from the JWT payload\n    **/\n    pub unconstrained fn extract_claim_unconstrained<let KEY_LENGTH: u32, let MAX_VALUE_LENGTH: u32>(\n        self,\n        key: [u8; KEY_LENGTH],\n        is_value_quoted: bool,\n    ) -> BoundedVec<u8, MAX_VALUE_LENGTH> {\n        let haystack = self.prepare_haystack();\n\n        let mut key_with_quote: [u8; KEY_LENGTH + 2] = [0; KEY_LENGTH + 2];\n        key_with_quote[0] = 34; // ascii for quote\n        for i in 0..KEY_LENGTH {\n            key_with_quote[i + 1] = key[i];\n        }\n        key_with_quote[KEY_LENGTH + 1] = 34; // ascii for quote\n\n        let mut needle: SubString<(((KEY_LENGTH + 2) + 31) / 31) * 31, (KEY_LENGTH + 2) / 31, (KEY_LENGTH + 2)> =\n            SubString::new(key_with_quote, key_with_quote.len());\n\n        let (result, position): (bool, u32) = haystack.substring_match(needle);\n        assert(result, \"key not found in the payload\");\n\n        // Get the value after the key\n        let mut value_start_idx = position + key.len() + 3; // +3 for the quote around the key and the colon\n        if (is_value_quoted) {\n            value_start_idx += 1; // +1 for the quote before the value\n        }\n\n        let mut value: BoundedVec<u8, MAX_VALUE_LENGTH> = BoundedVec::new();\n\n        for i in 0..MAX_VALUE_LENGTH {\n            let val = haystack.body[value_start_idx + i];\n            if ((val == 34) | (val == 44) | (val == 125)) {\n                break;\n            }\n            value.push(haystack.body[value_start_idx + i]);\n        }\n\n        value\n    }\n}\n\n#[test]\nfn test_verify() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n}\n\n#[test]\nfn test_verify_partial_hash() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let partial_data: BoundedVec<u8, 256> = BoundedVec::from_array([\n        106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107, 78, 69,\n        77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120, 102, 100,\n        109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85, 115, 73, 109,\n        53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84, 73,\n        122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74, 104, 98, 71, 108,\n        106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115, 73, 109, 108, 104,\n        100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78, 121, 119, 105, 89,\n        88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84, 73, 122, 76, 106,\n        81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86, 52, 99, 67, 73, 54,\n        77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 1;\n    let partial_hash = [\n        2065651337, 2814693704, 862745553, 2384319000, 1412758034, 3553265356, 3156727610,\n        4160738201,\n    ];\n    let full_data_length = 268;\n\n    let jwt = JWT::init_with_partial_hash(\n        partial_data,\n        partial_hash,\n        full_data_length,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n}\n\n#[test]\nfn test_get_claim_string() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let email: BoundedVec<u8, 100> = jwt.get_claim_string(\"email\".as_bytes());\n    let expected_email: BoundedVec<u8, 100> = BoundedVec::from_array(\"alice@test.com\".as_bytes());\n    assert(email == expected_email);\n}\n\n#[test]\nfn test_get_claim_string_partial_hash() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let partial_data: BoundedVec<u8, 256> = BoundedVec::from_array([\n        106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107, 78, 69,\n        77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120, 102, 100,\n        109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85, 115, 73, 109,\n        53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84, 73,\n        122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74, 104, 98, 71, 108,\n        106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115, 73, 109, 108, 104,\n        100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78, 121, 119, 105, 89,\n        88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84, 73, 122, 76, 106,\n        81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86, 52, 99, 67, 73, 54,\n        77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 1;\n    let partial_hash = [\n        2065651337, 2814693704, 862745553, 2384319000, 1412758034, 3553265356, 3156727610,\n        4160738201,\n    ];\n    let full_data_length = 268;\n\n    let jwt = JWT::init_with_partial_hash(\n        partial_data,\n        partial_hash,\n        full_data_length,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let email: BoundedVec<u8, 100> = jwt.get_claim_string(\"email\".as_bytes());\n    let expected_email: BoundedVec<u8, 100> = BoundedVec::from_array(\"alice@test.com\".as_bytes());\n    assert(email == expected_email);\n}\n\n#[test]\nfn test_assert_claim_string() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let value: BoundedVec<u8, 100> = BoundedVec::from_array(\"alice@test.com\".as_bytes());\n    jwt.assert_claim_string(\"email\".as_bytes(), value);\n}\n\n#[test]\nfn test_get_claim_number() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let iat: u64 = jwt.get_claim_number(\"iat\".as_bytes());\n    let expected_iat: u64 = 1737642217;\n    assert(iat == expected_iat);\n}\n\n#[test]\nfn test_assert_claim_number() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let expected_iat: u64 = 1737642217;\n    jwt.assert_claim_number(\"iat\".as_bytes(), expected_iat);\n}\n\n#[test]\nfn test_get_claim_bool() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let email_verified: bool = jwt.get_claim_bool(\"email_verified\".as_bytes());\n    assert(email_verified);\n}\n\n#[test]\nfn test_assert_claim_bool() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    jwt.assert_claim_bool(\"email_verified\".as_bytes(), true);\n}\n\n#[test]\nfn test_get_last_claim() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let exp: u64 = jwt.get_claim_number(\"exp\".as_bytes()); // exp is the last claim in the test payload\n    let expected_exp: u64 = 1799999999;\n    assert(exp == expected_exp);\n}\n","path":"/Users/unomasanori/nargo/github.com/zkemail/noir-jwt/v0.5.0/src/lib.nr"},"57":{"source":"// Copied form https://raw.githubusercontent.com/zkemail/zkemail.nr/refs/heads/main/lib/src/partial_hash.nr\n// Use dependency one zkemail.nr is updated to bignum 0.6.0\n\nuse std::hash::sha256_compression;\nuse std::runtime::is_unconstrained;\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L23\n// Convert 64-byte array to array of 16 u32s\npub fn msg_u8_to_u32(msg: [u8; BLOCK_SIZE]) -> [u32; 16] {\n    let mut msg32: [u32; 16] = [0; 16];\n\n    for i in 0..16 {\n        let mut msg_field: Field = 0;\n        for j in 0..4 {\n            msg_field = msg_field * 256 + msg[64 - 4 * (i + 1) + j] as Field;\n        }\n        msg32[15 - i] = msg_field as u32;\n    }\n\n    msg32\n}\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L38\nunconstrained fn build_msg_block_iter<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_start: u32,\n) -> ([u8; BLOCK_SIZE], u32) {\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if msg_start + BLOCK_SIZE > message_size {\n        if message_size < msg_start {\n            // This function is sometimes called with `msg_start` past the end of the message.\n            // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n            0\n        } else {\n            message_size - msg_start\n        }\n    } else {\n        BLOCK_SIZE\n    };\n    for k in 0..block_input {\n        msg_block[k] = msg[msg_start + k];\n    }\n    (msg_block, block_input)\n}\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L59\n// Verify the block we are compressing was appropriately constructed\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: [u8; 64],\n    msg_start: u32,\n) -> u32 {\n    let mut msg_byte_ptr: u32 = 0; // Message byte pointer\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n\n    for k in msg_start..msg_end {\n        if k < message_size {\n            assert_eq(msg_block[msg_byte_ptr], msg[k]);\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\nglobal BLOCK_SIZE: u32 = 64;\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L86-L116\n/**\n * Partially computes a SHA256 hash of a message but does not finalize\n * @notice can be used for post-partial hashing where client proves part of hash and relies on server to finish\n * \n *\n * @param N: the length of the message to hash.\n *  --- WARNING: N must be divisible by BLOCK_SIZE such that N % BLOCK_SIZE == 0 \n *      otherwise the remaining bytes will not be inputted when computing the initial hash\n * @param msg: the preimage to begin hashing\n * @return the intermediate hash state\n */\npub fn partial_sha256_var_start<let N: u32>(msg: [u8; N]) -> [u32; 8] {\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut h: [u32; 8] = [\n        1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635,\n        1541459225,\n    ]; // Intermediate hash, starting with the canonical initial value\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe { build_msg_block_iter(msg, N, msg_start) };\n        if msg_start < N {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, N, msg_block, msg_start);\n            if msg_start < N {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < N {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < N) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    h\n}\n\n/**\n * Given some state of a partially computed sha256 hash and part of the preimage, continue hashing\n * @notice used for complex/ recursive offloading of post-partial hashing\n *\n * @param N - the maximum length of the message to hash\n * @param h - the intermediate hash state\n * @param msg - the preimage to hash\n * @param message_size - the actual length of the preimage to hash\n * @return the intermediate hash state after compressing in msg to h\n */\npub fn partial_sha256_var_interstitial<let N: u32>(\n    mut h: [u32; 8],\n    msg: [u8; N],\n    message_size: u32,\n) -> [u32; 8] {\n    assert(message_size % BLOCK_SIZE == 0, \"Message size must be a multiple of the block size\");\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) = unsafe { build_msg_block_iter(msg, N, msg_start) };\n        if msg_start < N {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, N, msg_block, msg_start);\n            if msg_start < N {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < N {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < N) & (msg_byte_ptr == BLOCK_SIZE) & (msg_start < message_size) {\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    h\n}\n\n// https://github.com/noir-lang/noir/blob/76eec710ff73e5e45fdddcd41ae2cd74e879cfa5/noir_stdlib/src/hash/sha256.nr#L85\n/**\n * Given some state of a partially computed sha256 hash and remaining preimage, complete the hash\n * @notice used for traditional partial hashing\n *\n * @param N - the maximum length of the message to hash\n * @param h - the intermediate hash state\n * @param msg - the remaining preimage to hash\n * @param message_size - the size of the remaining preimage\n * @param real_message_size -= the total size of the preimage\n * @return finalized sha256 hash\n */\npub fn partial_sha256_var_end<let N: u32>(\n    mut h: [u32; 8],\n    msg: [u8; N],\n    message_size: u64,\n    real_message_size: u64,\n) -> [u8; 32] {\n    let message_size = message_size as u32; // noir stdlib uses u64\n    let real_message_size = real_message_size as u32; // noir stdlib uses u64\n    let num_blocks = N / BLOCK_SIZE;\n    let mut msg_block: [u8; BLOCK_SIZE] = [0; BLOCK_SIZE];\n    let mut msg_byte_ptr = 0; // Pointer into msg_block\n    for i in 0..num_blocks {\n        let msg_start = BLOCK_SIZE * i;\n        let (new_msg_block, new_msg_byte_ptr) =\n            unsafe { build_msg_block_iter(msg, message_size, msg_start) };\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n\n        // If the block is filled, compress it.\n        // An un-filled block is handled after this loop.\n        if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n            h = sha256_compression(msg_u8_to_u32(msg_block), h);\n        }\n    }\n\n    let modulo = N % BLOCK_SIZE;\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_blocks;\n        let (new_msg_block, new_msg_byte_ptr) =\n            unsafe { build_msg_block_iter(msg, message_size, msg_start) };\n\n        if msg_start < message_size {\n            msg_block = new_msg_block;\n        }\n\n        if !is_unconstrained() {\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n        } else if msg_start < message_size {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if msg_byte_ptr == BLOCK_SIZE {\n        msg_byte_ptr = 0;\n    }\n\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    msg_block[msg_byte_ptr] = 1 << 7;\n    let last_block = msg_block;\n    msg_byte_ptr = msg_byte_ptr + 1;\n\n    unsafe {\n        let (new_msg_block, new_msg_byte_ptr) = pad_msg_block(msg_block, msg_byte_ptr);\n        msg_block = new_msg_block;\n        if is_unconstrained() {\n            msg_byte_ptr = new_msg_byte_ptr;\n        }\n    }\n\n    if !is_unconstrained() {\n        for i in 0..64 {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n\n        // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n        // the 1 and 0s fill up the current block, which we then compress accordingly.\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for _i in 57..64 {\n            if msg_byte_ptr <= 63 & msg_byte_ptr >= 57 {\n                assert_eq(msg_block[msg_byte_ptr], zero);\n                msg_byte_ptr += 1;\n            }\n        }\n    }\n\n    if msg_byte_ptr >= 57 {\n        h = sha256_compression(msg_u8_to_u32(msg_block), h);\n\n        msg_byte_ptr = 0;\n    }\n\n    msg_block = unsafe { attach_len_to_msg_block(msg_block, msg_byte_ptr, real_message_size) };\n\n    if !is_unconstrained() {\n        for i in 0..56 {\n            if i < msg_byte_ptr {\n                assert_eq(msg_block[i], last_block[i]);\n            } else {\n                assert_eq(msg_block[i], zero);\n            }\n        }\n\n        let len = 8 * real_message_size;\n        let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n        for i in 56..64 {\n            assert_eq(msg_block[i], len_bytes[i - 56]);\n        }\n    }\n\n    hash_final_block(msg_block, h)\n}\n\nunconstrained fn pad_msg_block(\n    mut msg_block: [u8; BLOCK_SIZE],\n    mut msg_byte_ptr: u32,\n) -> ([u8; BLOCK_SIZE], u32) {\n    // If i >= 57, there aren't enough bits in the current message block to accomplish this, so\n    // the 1 and 0s fill up the current block, which we then compress accordingly.\n    if msg_byte_ptr >= 57 {\n        // Not enough bits (64) to store length. Fill up with zeros.\n        for i in msg_byte_ptr..BLOCK_SIZE {\n            msg_block[i] = 0;\n        }\n        (msg_block, BLOCK_SIZE)\n    } else {\n        (msg_block, msg_byte_ptr)\n    }\n}\n\nunconstrained fn attach_len_to_msg_block(\n    mut msg_block: [u8; BLOCK_SIZE],\n    mut msg_byte_ptr: u32,\n    message_size: u32,\n) -> [u8; BLOCK_SIZE] {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 (i.e. until msg_byte_ptr = 56).\n    for i in msg_byte_ptr..56 {\n        msg_block[i] = 0;\n    }\n\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..8 {\n        msg_block[56 + i] = len_bytes[i];\n    }\n    msg_block\n}\n\nfn hash_final_block(msg_block: [u8; BLOCK_SIZE], mut state: [u32; 8]) -> [u8; 32] {\n    let mut out_h: [u8; 32] = [0; 32]; // Digest as sequence of bytes\n    // Hash final padded block\n    state = sha256_compression(msg_u8_to_u32(msg_block), state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[7 - j] as Field).to_le_bytes();\n        for k in 0..4 {\n            out_h[31 - 4 * j - k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n","path":"/Users/unomasanori/nargo/github.com/zkemail/noir-jwt/v0.5.0/src/partial_hash.nr"},"59":{"source":"unconstrained fn __boundary_check<let Range: u32>(limit: u32) -> [Field; Range] {\n    let mut r: [Field; Range] = [0; Range];\n    for i in limit..Range {\n        r[i] = 1;\n    }\n    r\n}\n\n/**\n * @brief Return a size-Range array of values that describe whether an index `i` is in the range `0<=i<limit`\n * @details When evaluating variable-length loops of size `limit`, it is neccessary to iterate over a maximum bound defined at compile-time\n *          Any constraints or evaluations that occur where `i >= limit` must be discarded.\n *          This is most efficiently performed by using predicate `Field` values, where `predicate[i] = 0` if `i < limit`, otherwise `predicate[i] = 1`.\n *          This method efficiently generates such predicate values more efficiently than querying whether `i <= limit` at every iteration.\n *          Gate cost is 3 * Range\n **/\npub fn boundary_check<let Range: u32>(limit: u32) -> [Field; Range] {\n    let r = unsafe {\n        //@safety r contains claims about whether `r[i] >= limit`. the rest of this function checks this claim is correct\n        __boundary_check(limit)\n    };\n\n    let mut transition_index = 0;\n    // **\n    // We have an array of Field elements `r` such that:\n    // if i < limit, `r = 0`\n    // if i >= limit, `r = 1`\n    // We validate the predicate list `r` is correct by checking:\n    // 1. every r[i] element is 0 or 1\n    // 2. if r[i] = 1, r[i+1] must also be 1\n    // 3. if r[i] = 0 and r[i+1] = 1, then i == limit\n    // we check point 3 by tracking a `transition_index` variable, where\n    // transition_index += (1 - r[i]) * (r[i+1]) * i\n    // i.e. if r[i] == 0 and r[i+1] == 1, transition_index += i\n    //      else transition_index += 0\n    // NOTE: total constraint cost is 3 gates per iteration\n    // **\n    if Range > 0 {\n        for i in 0..Range - 1 {\n            assert_eq(r[i] * r[i], r[i]);\n            assert_eq(r[i] * r[i + 1], r[i]);\n            let idx = (r[i + 1] * (1 - r[i])) * (i as Field + 1);\n            transition_index = transition_index + idx;\n            std::as_witness(transition_index);\n        }\n        assert_eq(r[Range - 1] * r[Range - 1], r[Range - 1]);\n        transition_index = transition_index + (1 - r[Range - 1]) * limit as Field;\n        assert(transition_index == limit as Field);\n        r\n    } else {\n        [0; Range]\n    }\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir_base64/v0.4.0/src/boundary_check.nr"},"60":{"source":"use super::defaults::{\n    BASE64_ELEMENTS_PER_CHUNK, BASE64_PADDING_CHAR, BYTES_PER_CHUNK, INVALID_DECODE_VALUE,\n};\n\npub use crate::boundary_check::boundary_check;\nuse crate::tables::{\n    BASE64_DECODE_BE_TABLE, BASE64_DECODE_BE_URL_TABLE, BASE64_DECODE_BE_URL_VAR_TABLE,\n    BASE64_DECODE_BE_VAR_TABLE,\n};\n\n/// Decoder methods that use the standard Base64 Alphabet (base64) specified in RFC 4648\n/// (https://datatracker.ietf.org/doc/html/rfc4648#section-4)\npub mod Base64DecodeBE {\n    pub fn decode<let InputBytes: u32, let OutputBytes: u32>(\n        input: [u8; InputBytes],\n    ) -> [u8; OutputBytes] {\n        crate::decoder::decode::<InputBytes, OutputBytes, 1, 0>(input)\n    }\n\n    pub fn decode_var<let MaxInputBytes: u32, let MaxOutputBytes: u32>(\n        input: BoundedVec<u8, MaxInputBytes>,\n    ) -> BoundedVec<u8, MaxOutputBytes> {\n        crate::decoder::decode_var::<MaxInputBytes, MaxOutputBytes, 1, 0>(input)\n    }\n}\n\n/// Decoder methods that use the standard Base64 Alphabet (base64) specified in RFC 4648\n/// (https://datatracker.ietf.org/doc/html/rfc4648#section-4), but WITHOUT padding\npub mod Base64DecodeBENoPad {\n    pub fn decode<let InputBytes: u32, let OutputBytes: u32>(\n        input: [u8; InputBytes],\n    ) -> [u8; OutputBytes] {\n        crate::decoder::decode::<InputBytes, OutputBytes, 0, 0>(input)\n    }\n\n    pub fn decode_var<let MaxInputBytes: u32, let MaxOutputBytes: u32>(\n        input: BoundedVec<u8, MaxInputBytes>,\n    ) -> BoundedVec<u8, MaxOutputBytes> {\n        crate::decoder::decode_var::<MaxInputBytes, MaxOutputBytes, 0, 0>(input)\n    }\n}\n\n/// Decoder methods that use the URL and Filename Safe Alphabet specified in RFC 4648\n/// https://datatracker.ietf.org/doc/html/rfc4648#section-5\npub mod Base64DecodeBEUrlSafe {\n    pub fn decode<let InputBytes: u32, let OutputBytes: u32>(\n        input: [u8; InputBytes],\n    ) -> [u8; OutputBytes] {\n        crate::decoder::decode::<InputBytes, OutputBytes, 0, 1>(input)\n    }\n\n    pub fn decode_var<let MaxInputBytes: u32, let MaxOutputBytes: u32>(\n        input: BoundedVec<u8, MaxInputBytes>,\n    ) -> BoundedVec<u8, MaxOutputBytes> {\n        crate::decoder::decode_var::<MaxInputBytes, MaxOutputBytes, 0, 1>(input)\n    }\n}\n\n/// Decoder methods that use the URL and Filename Safe Alphabet specified in RFC 4648\n/// https://datatracker.ietf.org/doc/html/rfc4648#section-5, but WITH padding added\npub mod Base64DecodeBEUrlSafeWithPad {\n    pub fn decode<let InputBytes: u32, let OutputBytes: u32>(\n        input: [u8; InputBytes],\n    ) -> [u8; OutputBytes] {\n        crate::decoder::decode::<InputBytes, OutputBytes, 1, 1>(input)\n    }\n\n    pub fn decode_var<let MaxInputBytes: u32, let MaxOutputBytes: u32>(\n        input: BoundedVec<u8, MaxInputBytes>,\n    ) -> BoundedVec<u8, MaxOutputBytes> {\n        crate::decoder::decode_var::<MaxInputBytes, MaxOutputBytes, 1, 1>(input)\n    }\n}\n\n/**\n * @brief Return a human-readable error if the input is invalid Base64\n * @details We constrain the decoding to be correct by using a lookup table to decode Base64.\n *          Validation is performed by batch-checking that no lookups returned an error state.\n *          This produces unhelpful error messages so we put this sanitised check in an unconstrained fn\n **/\nunconstrained fn __validate_decoded(decoded: Field, input_byte: u8, offset: u32) {\n    assert(\n        decoded != INVALID_DECODE_VALUE,\n        f\"DecodeError: invalid symbol {input_byte}, offset {offset}.\",\n    );\n}\n\n/**\n * @brief Given a variable-sized number of Base64 encoded characters, return a *claim* about how many are padding chars\n * @note The returned value is only a claim and must be validated\n **/\nunconstrained fn __get_num_padding_chars_var<let InputElements: u32>(\n    input: BoundedVec<u8, InputElements>,\n) -> (bool, bool) {\n    let len = input.len();\n    let r1 = if len > 1 {\n        input.get(len - 2) == BASE64_PADDING_CHAR\n    } else {\n        false\n    };\n    let r2 = if len > 0 {\n        input.get(len - 1) == BASE64_PADDING_CHAR\n    } else {\n        false\n    };\n    (r1, r2)\n}\n\n/**\n * @brief Take an array of Base64 values and convert back into ASCII\n *        Each Base64 value is 6 bits. This method will produce a byte array where data is concatenated so that there are no sparse bits\n *        (e.g. encoding 4 ASCII values produces 24 bits of Base64 data = 3 bytes of output data)\n **/\nfn decode<let InputElements: u32, let OutputBytes: u32, let Pad: u1, let UseURLTable: u1>(\n    input: [u8; InputElements],\n) -> [u8; OutputBytes] {\n    let rem = OutputBytes % 3;\n    // Calculate the number of padding characters and the length of the input without padding\n    let num_padding_chars = if rem == 1 {\n        2\n    } else if rem == 2 {\n        1\n    } else {\n        0\n    };\n\n    // Assert that the output length & input length are correct\n    // Every 3 output chars will be encoded as 4 base64 input chars\n    let encoded_length = (OutputBytes + 2) / 3 * 4; // ceil(input * 4 / 3)\n    if Pad != 0 {\n        assert(\n            encoded_length == InputElements,\n            f\"DecodeError: invalid input length for specified output length. Expected {encoded_length} input elements, but got {InputElements}.\",\n        );\n        // enforce Base64 padding is valid\n        if num_padding_chars == 2 {\n            let offset = InputElements - 1;\n            assert(\n                input[offset] == BASE64_PADDING_CHAR,\n                f\"DecodeError: expected padding at offset {offset}.\",\n            );\n            let offset = InputElements - 2;\n            assert(\n                input[offset] == BASE64_PADDING_CHAR,\n                f\"DecodeError: expected padding at offset {offset}.\",\n            );\n        } else if num_padding_chars == 1 {\n            let offset = InputElements - 1;\n            assert(\n                input[InputElements - 1] == BASE64_PADDING_CHAR,\n                f\"DecodeError: expected padding at offset {offset}.\",\n            );\n        }\n    } else {\n        let expected = encoded_length - num_padding_chars;\n        assert(\n            encoded_length - num_padding_chars == InputElements,\n            f\"DecodeError: invalid input length for specified output length. Expected {expected} input elements, but got {InputElements}.\",\n        );\n    }\n\n    let mut result: [u8; OutputBytes] = [0; OutputBytes];\n    let num_chunks = (InputElements / BASE64_ELEMENTS_PER_CHUNK)\n        + (InputElements % BASE64_ELEMENTS_PER_CHUNK != 0) as u32;\n\n    // validity_check = accumulator value that we add every output from BASE64_DECODE_BE_TABLE into.\n    // Invalid error states will return a lookup value of -2^32 , which will cause `validity_check` to fail a 32-bit range check.\n    // This batch-validation technique is more efficient than asserting every returned token is valid.\n    let mut validity_check: Field = 0;\n    if num_chunks > 0 {\n        let final_chunk = num_chunks - 1;\n\n        for i in 0..final_chunk {\n            let mut slice: Field = 0;\n            for j in 0..BASE64_ELEMENTS_PER_CHUNK {\n                slice *= 64;\n                let offset = i * BASE64_ELEMENTS_PER_CHUNK + j;\n                let input_byte = input[offset];\n                let decoded = if UseURLTable == 1 {\n                    BASE64_DECODE_BE_URL_TABLE[input_byte]\n                } else {\n                    BASE64_DECODE_BE_TABLE[input_byte]\n                };\n                validity_check += decoded;\n                slice += decoded as Field;\n                unsafe {\n                    //@safety get a sensible error message out if the decoding is invalid.\n                    // Note that we *constrain* the encoding is correct by performing a range check on `validity_check`\n                    // If the decoding is invalid, `decoded = -2^{32}`. We add up all `decoded` values and apply a 32-bit range check.\n                    // Given all valid encodings are 8-bit, as long as the input length is less than 2^24 bytes, it is not possible to\n                    // underflow validity_check with an invalid encoding, and then overflow again by adding up valid encodings\n                    __validate_decoded(decoded, input_byte, offset);\n                }\n            }\n            let slice_bytes: [u8; 30] = slice.to_be_bytes();\n            for j in 0..BYTES_PER_CHUNK {\n                result[i * BYTES_PER_CHUNK + j] = slice_bytes[j];\n            }\n        }\n\n        // process the final chunk, which may contain padding\n        let base64_offset: u32 = final_chunk * BASE64_ELEMENTS_PER_CHUNK;\n        let byte_offset = final_chunk * BYTES_PER_CHUNK;\n        let base64_elements_in_final_chunk = if Pad != 0 {\n            InputElements - base64_offset - num_padding_chars\n        } else {\n            InputElements - base64_offset\n        };\n\n        // pack the base64 values into the field element\n        let mut slice: Field = 0;\n        for j in 0..base64_elements_in_final_chunk {\n            slice *= 64;\n            let offset = base64_offset + j;\n            let input_byte = input[offset];\n            let decoded = if UseURLTable == 1 {\n                BASE64_DECODE_BE_URL_TABLE[input_byte]\n            } else {\n                BASE64_DECODE_BE_TABLE[input_byte]\n            };\n            validity_check += decoded;\n            slice += decoded as Field;\n            unsafe {\n                //@safety get a sensible error message out if the decoding is invalid.\n                // Note that we *constrain* the encoding is correct by performing a range check on `validity_check`\n                // If the decoding is invalid, `decoded = -2^{32}`. We add up all `decoded` values and apply a 32-bit range check.\n                // Given all valid encodings are 8-bit, as long as the input length is less than 2^24 bytes, it is not possible to\n                // underflow validity_check with an invalid encoding, and then overflow again by adding up valid encodings\n                __validate_decoded(decoded, input_byte, offset);\n            }\n        }\n\n        // If any lookups returned an error state, this 32-bit range check will fail.\n        validity_check.assert_max_bit_size::<32>();\n        for _ in base64_elements_in_final_chunk..BASE64_ELEMENTS_PER_CHUNK {\n            slice *= 64;\n        }\n\n        let slice_bytes: [u8; 30] = slice.to_be_bytes();\n        let num_bytes_in_final_chunk = OutputBytes - byte_offset;\n        for i in 0..num_bytes_in_final_chunk {\n            result[byte_offset + i] = slice_bytes[i];\n        }\n    }\n\n    result\n}\n\n/**\n * @brief Take a variable-length vector of Base64 values and convert back into ASCII\n *        Each Base64 value is 6 bits. This method will produce a byte array where data is concatenated so that there are no sparse bits\n *        (e.g. encoding 4 ASCII values produces 24 bits of Base64 data = 3 bytes of output data)\n **/\npub fn decode_var<let InputElements: u32, let OutputBytes: u32, let Pad: u1, let UseURLTable: u1>(\n    input: BoundedVec<u8, InputElements>,\n) -> BoundedVec<u8, OutputBytes> {\n    // We don't know how many padding bytes the input string contains - we use an unconstrained fn to return a *claim* that we will later validate\n    let (has_first_padding_byte_claim, has_second_padding_byte_claim) = if (Pad == 1) {\n        unsafe {\n            //@safety get claims about whether the bytes input[input.len() - 2] and input[input.len() - 1] are padding chars\n            // we validate this later on by requiring these characters equal BASE64_PADDING_CHAR by looking up BASE64_DECODE_BE_VAR_TABLE\n            crate::decoder::__get_num_padding_chars_var::<InputElements>(input)\n        }\n    } else {\n        (false, false)\n    };\n\n    // num_padding_chars is a claim that depends on has_first_padding_byte_claim and has_second_padding_byte_claim being correct\n    let num_padding_chars: u32 = if Pad == 1 {\n        has_first_padding_byte_claim as u32 + has_second_padding_byte_claim as u32\n    } else {\n        0\n    };\n\n    let input_length = input.len();\n    let input = input.storage();\n\n    // boundary_flags = array of Field elements.\n    // if `i < input_length, boundary_flags[i] = 0`\n    // if `i >= input_length, boundary_flags[i+1] = 1`\n    // used as cheap(ish) predicates when iterating over bounded vector elements\n    let boundary_flags: [Field; InputElements] = boundary_check(input_length);\n    let mut result: [u8; OutputBytes] = [0; OutputBytes];\n\n    let max_num_chunks = (InputElements / BASE64_ELEMENTS_PER_CHUNK)\n        + (InputElements % BASE64_ELEMENTS_PER_CHUNK != 0) as u32;\n\n    let mut validity_check: Field = 0;\n    // if statement should be known at compile time\n    if max_num_chunks > 0 {\n        let final_chunk: u32 = max_num_chunks - 1;\n\n        for i in 0..final_chunk {\n            let mut slice: Field = 0;\n            for j in 0..BASE64_ELEMENTS_PER_CHUNK {\n                slice *= 64;\n                let offset = i * BASE64_ELEMENTS_PER_CHUNK + j;\n                let input_byte = input[offset];\n\n                let mut decode_index: Field = 0;\n                if Pad == 1 {\n                    let mut might_be_second_padding_char = 0;\n                    let mut might_be_first_padding_char = 0;\n                    // These if statements should not cost extra gates as the condition is known at compile time\n                    if (offset + 2 < InputElements) {\n                        might_be_first_padding_char = (1 - boundary_flags[offset])\n                            * (1 - boundary_flags[offset + 1])\n                            * boundary_flags[offset + 2];\n                        might_be_second_padding_char =\n                            (1 - boundary_flags[offset]) * (boundary_flags[offset + 1]);\n                    } else if (offset + 1 < InputElements) {\n                        // might_be_second_padding_char = (1 - boundary_flags[offset]) + (boundary_flags[offset + 1]);\n                        might_be_first_padding_char =\n                            (1 - boundary_flags[offset]) * (1 - boundary_flags[offset + 1]);\n                        might_be_second_padding_char =\n                            (1 - boundary_flags[offset]) * (boundary_flags[offset + 1]);\n                    } else // last character\n                    {\n                        might_be_first_padding_char = 0;\n                        might_be_second_padding_char = (1 - boundary_flags[offset]);\n                    }\n\n                    // Cases where we need to require a padding character is present:\n                    // Case 1: we are at byte position `input.len() - 2` and `has_first_padding_byte_claim = true`\n                    // Case 2: we are at byte position `input.len() - 1` and `has_second_padding_byte_claim = true`\n                    let require_padding = might_be_first_padding_char\n                        * has_first_padding_byte_claim as Field\n                        + (might_be_second_padding_char * has_second_padding_byte_claim as Field);\n\n                    // The `decode_index` is used to map the input Base64 character into an output decoded character.\n                    // We know `input_byte` is in the range 0-255 , so we use a size 768 lookup to handle the following 3 cases:\n                    // Case 1 (index range 0-255): No special cases. We decode the Base64 ASCII char into an ASCII char\n                    // Case 2 (index range 256-511): We have exceeded the length of the input. The only valid input is 0, which decodes to 0 (all other byte values return an error state)\n                    // Case 3 (index range 512-767): A claim has been made that a padding byte is present, and we are at the appropriate byte location to check this.\n                    //                               The only valid input is BASE64_PADDING_CHAR, which decodes to 0. All other inputs return an error state\n                    decode_index =\n                        input_byte as Field + boundary_flags[offset] * 256 + require_padding * 512;\n                } else {\n                    decode_index = input_byte as Field + boundary_flags[offset] * 256;\n                }\n                let decoded = if UseURLTable == 1 {\n                    BASE64_DECODE_BE_URL_VAR_TABLE[decode_index]\n                } else {\n                    BASE64_DECODE_BE_VAR_TABLE[decode_index]\n                };\n\n                validity_check += decoded;\n                slice += decoded;\n                unsafe {\n                    //@safety get a sensible error message out if the decoding is invalid.\n                    // Note that we *constrain* the encoding is correct by performing a range check on `validity_check`\n                    // If the decoding is invalid, `decoded = -2^{32}`. We add up all `decoded` values and apply a 32-bit range check.\n                    // Given all valid encodings are 8-bit, as long as the input length is less than 2^24 bytes, it is not possible to\n                    // underflow validity_check with an invalid encoding, and then overflow again by adding up valid encodings\n                    __validate_decoded(decoded, input_byte, offset);\n                }\n            }\n            // convert the decoded slice into bytes and populate result array\n            let slice_bytes: [u8; 30] = slice.to_be_bytes();\n            for j in 0..BYTES_PER_CHUNK {\n                result[i * BYTES_PER_CHUNK + j] = slice_bytes[j];\n            }\n        }\n        // process the final chunk\n        let base64_offset: u32 = final_chunk * BASE64_ELEMENTS_PER_CHUNK;\n        let byte_offset = final_chunk * BYTES_PER_CHUNK;\n        // might include padding characters\n        let base64_elements_in_final_chunk = InputElements - base64_offset;\n\n        // pack the base64 values into the field element\n        let mut slice: Field = 0;\n        for j in 0..base64_elements_in_final_chunk {\n            slice *= 64;\n            let offset = base64_offset + j;\n            let input_byte = input[offset];\n\n            let mut decode_index: Field = 0;\n            if Pad == 1 {\n                let mut might_be_second_padding_char = 0;\n                let mut might_be_first_padding_char = 0;\n                // These if statements should not cost extra gates as the condition is known at compile time\n                if (offset + 2 < InputElements) {\n                    might_be_first_padding_char = (1 - boundary_flags[offset])\n                        * (1 - boundary_flags[offset + 1])\n                        * boundary_flags[offset + 2];\n                    might_be_second_padding_char =\n                        (1 - boundary_flags[offset]) * (boundary_flags[offset + 1]);\n                } else if (offset + 1 < InputElements) {\n                    // might_be_second_padding_char = (1 - boundary_flags[offset]) + (boundary_flags[offset + 1]);\n                    might_be_first_padding_char =\n                        (1 - boundary_flags[offset]) * (1 - boundary_flags[offset + 1]);\n                    might_be_second_padding_char =\n                        (1 - boundary_flags[offset]) * (boundary_flags[offset + 1]);\n                } else // last character\n                {\n                    might_be_first_padding_char = 0;\n                    might_be_second_padding_char = (1 - boundary_flags[offset]);\n                }\n\n                let require_padding = might_be_first_padding_char\n                    * has_first_padding_byte_claim as Field\n                    + (might_be_second_padding_char * has_second_padding_byte_claim as Field);\n                decode_index =\n                    input_byte as Field + boundary_flags[offset] * 256 + require_padding * 512;\n            } else {\n                decode_index = input_byte as Field + boundary_flags[offset] * 256;\n            }\n            let decoded = if UseURLTable == 1 {\n                BASE64_DECODE_BE_URL_VAR_TABLE[decode_index]\n            } else {\n                BASE64_DECODE_BE_VAR_TABLE[decode_index]\n            };\n            unsafe {\n                //@safety get a sensible error message out if the decoding is invalid.\n                // Note that we *constrain* the encoding is correct by performing a range check on `validity_check`\n                // If the decoding is invalid, `decoded = -2^{32}`. We add up all `decoded` values and apply a 32-bit range check.\n                // Given all valid encodings are 8-bit, as long as the input length is less than 2^24 bytes, it is not possible to\n                // underflow validity_check with an invalid encoding, and then overflow again by adding up valid encodings\n                __validate_decoded(decoded, input_byte, offset);\n            }\n            validity_check += decoded;\n            slice += decoded as Field;\n        }\n\n        validity_check.assert_max_bit_size::<32>();\n\n        for _ in base64_elements_in_final_chunk..BASE64_ELEMENTS_PER_CHUNK {\n            slice *= 64;\n        }\n\n        let slice_bytes: [u8; 30] = slice.to_be_bytes();\n        let num_bytes_in_final_chunk = OutputBytes - byte_offset;\n        for i in 0..num_bytes_in_final_chunk {\n            result[byte_offset + i] = slice_bytes[i];\n        }\n    }\n\n    if Pad == 1 {\n        assert(input_length % 4 == 0, \"base64 encoded strings must be a multiple of 4 bytes\");\n    }\n\n    assert_eq(\n        has_first_padding_byte_claim,\n        has_second_padding_byte_claim * has_first_padding_byte_claim,\n        \"if first byte contains padding so must the second\",\n    );\n    let output_length = ((input_length * 3) / 4) - num_padding_chars;\n    BoundedVec::from_parts_unchecked(result, output_length)\n}\n\n#[test]\nfn test_decode_empty() {\n    let input: [u8; 0] = [];\n    let expected: [u8; 0] = [];\n    let result = Base64DecodeBE::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_padding() {\n    // f\n    let input: [u8; 4] = [90, 103, 61, 61];\n    let expected: [u8; 1] = [102];\n    let result = Base64DecodeBE::decode(input);\n\n    assert(result == expected);\n\n    // fo\n    let input: [u8; 4] = [90, 109, 56, 61];\n    let expected: [u8; 2] = [102, 111];\n    let result = Base64DecodeBE::decode(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: [u8; 4] = [90, 109, 57, 118];\n    let expected: [u8; 3] = [102, 111, 111];\n    let result = Base64DecodeBE::decode(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_standard_no_pad() {\n    // f\n    let input: [u8; 2] = [90, 103];\n    let expected: [u8; 1] = [102];\n    let result = Base64DecodeBENoPad::decode(input);\n\n    assert(result == expected);\n\n    // fo\n    let input: [u8; 3] = [90, 109, 56];\n    let expected: [u8; 2] = [102, 111];\n    let result = Base64DecodeBENoPad::decode(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: [u8; 4] = [90, 109, 57, 118];\n    let expected: [u8; 3] = [102, 111, 111];\n    let result = Base64DecodeBENoPad::decode(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_max_byte() {\n    let expected: [u8; 1] = [255];\n\n    let input: [u8; 4] = [47, 119, 61, 61]; // \"/w==\"\n    let result: [u8; 1] = Base64DecodeBE::decode(input);\n    assert(result == expected);\n\n    let input: [u8; 2] = [47, 119]; // \"/w\"\n    let result: [u8; 1] = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n\n    let input: [u8; 4] = [95, 119, 61, 61]; // \"_w==\"\n    let result: [u8; 1] = Base64DecodeBEUrlSafeWithPad::decode(input);\n    assert(result == expected);\n\n    let input: [u8; 2] = [95, 119]; // \"_w\"\n    let result: [u8; 1] = Base64DecodeBEUrlSafe::decode(input);\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 255, offset 0\")]\nfn test_decode_invalid() {\n    let input: [u8; 2] = [255, 255];\n    let _: [u8; 1] = Base64DecodeBENoPad::decode(input);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid input length for specified output length. Expected 3 input elements, but got 4.\")]\nfn test_decode_standard_no_pad_fail_with_padding() {\n    // test decoding / and +\n    let input: [u8; 4] = [47, 43, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_standard() {\n    // test decoding / and +\n    let input: [u8; 4] = [47, 43, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBE::decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 95, offset 0\")]\nfn test_decode_underscore_with_standard() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let _: [u8; 2] = Base64DecodeBE::decode(input);\n}\n\n#[test]\nfn test_decode_url_safe_with_pad() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBEUrlSafeWithPad::decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 47, offset 0\")]\nfn test_decode_slash_with_url_safe() {\n    // test decoding / and +\n    let input: [u8; 3] = [47, 43, 65];\n    let _: [u8; 2] = Base64DecodeBEUrlSafe::decode(input);\n}\n\n#[test]\nfn test_decode_url_safe() {\n    // test decoding _ and -\n    let input: [u8; 3] = [95, 45, 65];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBEUrlSafe::decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid input length for specified output length. Expected 3 input elements, but got 4.\")]\nfn test_decode_url_safe_no_pad_fail_with_padding() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBEUrlSafe::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_ascii() {\n    // base64: SGVsbG8gV29ybGQh\n    let input: [u8; 16] = [83, 71, 86, 115, 98, 71, 56, 103, 86, 50, 57, 121, 98, 71, 81, 104];\n    // \"Hello World!\"\n    let expected: [u8; 12] = [72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33];\n\n    // all configurations should decode the same way\n    let result: [u8; 12] = Base64DecodeBE::decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = Base64DecodeBEUrlSafeWithPad::decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = Base64DecodeBEUrlSafe::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_utf8() {\n    // base64: 44GT44KT44Gr44Gh44Gv44CB5LiW55WM77yB\n    let input: [u8; 36] = [\n        52, 52, 71, 84, 52, 52, 75, 84, 52, 52, 71, 114, 52, 52, 71, 104, 52, 52, 71, 118, 52, 52,\n        67, 66, 53, 76, 105, 87, 53, 53, 87, 77, 55, 55, 121, 66,\n    ];\n    // non-ascii utf-8: \"Hello, World!\" in Japanese\n    let expected: [u8; 27] = [\n        227, 129, 147, 227, 130, 147, 227, 129, 171, 227, 129, 161, 227, 129, 175, 227, 128, 129,\n        228, 184, 150, 231, 149, 140, 239, 188, 129,\n    ];\n\n    // all configurations should decode the same way\n    let result: [u8; 27] = Base64DecodeBE::decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = Base64DecodeBEUrlSafeWithPad::decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = Base64DecodeBEUrlSafe::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_multi_chunks() {\n    // \"The quick brown fox jumps over the lazy dog.\"\n    let expected: [u8; 44] = [\n        84, 104, 101, 32, 113, 117, 105, 99, 107, 32, 98, 114, 111, 119, 110, 32, 102, 111, 120, 32,\n        106, 117, 109, 112, 115, 32, 111, 118, 101, 114, 32, 116, 104, 101, 32, 108, 97, 122, 121,\n        32, 100, 111, 103, 46,\n    ];\n\n    let input: [u8; 60] = [\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 52, 61,\n    ];\n    let result: [u8; 44] = Base64DecodeBE::decode(input);\n    assert(result == expected);\n\n    let input: [u8; 59] = [\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 52,\n    ];\n    let result = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_with_padding() {\n    // Raw bh: GxMlgwLiypnVrE2C0Sf4yzhcWTkAhSZ5+WERhKhXtlU=\n    // Translated directly to ASCII\n    let input: [u8; 44] = [\n        71, 120, 77, 108, 103, 119, 76, 105, 121, 112, 110, 86, 114, 69, 50, 67, 48, 83, 102, 52,\n        121, 122, 104, 99, 87, 84, 107, 65, 104, 83, 90, 53, 43, 87, 69, 82, 104, 75, 104, 88, 116,\n        108, 85, 61,\n    ];\n\n    let result: [u8; 32] = Base64DecodeBE::decode(input);\n    let expected: [u8; 32] = [\n        27, 19, 37, 131, 2, 226, 202, 153, 213, 172, 77, 130, 209, 39, 248, 203, 56, 92, 89, 57, 0,\n        133, 38, 121, 249, 97, 17, 132, 168, 87, 182, 85,\n    ];\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var_empty() {\n    let input: BoundedVec<u8, 0> = BoundedVec::new();\n    let expected: BoundedVec<u8, 0> = BoundedVec::new();\n    let result = Base64DecodeBE::decode_var(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var_padding() {\n    // f\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 103, 61, 61]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102]);\n    let result = Base64DecodeBE::decode_var(input);\n    println(f\"result {result}\");\n    println(f\"expected {expected}\");\n\n    assert(result == expected);\n\n    // fo\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 109, 56, 61]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102, 111]);\n    let result = Base64DecodeBE::decode_var(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: BoundedVec<u8, 8> = BoundedVec::from_array([90, 109, 57, 118]);\n    let expected: BoundedVec<u8, 6> = BoundedVec::from_array([102, 111, 111]);\n    let result = Base64DecodeBE::decode_var(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var_standard_no_pad() {\n    // f\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 103]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102]);\n    let result = Base64DecodeBENoPad::decode_var(input);\n\n    // fo\n    println(f\"result {result}, expected {expected}\");\n\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 109, 56]);\n\n    assert(result == expected);\n\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102, 111]);\n    let result = Base64DecodeBENoPad::decode_var(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 109, 57, 118]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102, 111, 111]);\n    let result = Base64DecodeBENoPad::decode_var(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 61, offset 3\")]\nfn test_decode_var_no_pad_fail_with_padding() {\n    // test decoding / and +\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([47, 43, 65, 61]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([255, 224]);\n    let result = Base64DecodeBENoPad::decode_var(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var() {\n    // base64: \"SGVsbG8sIFdvcmxkIQ==\"\n    let input: BoundedVec<u8, 24> = BoundedVec::from_array([\n        83, 71, 86, 115, 98, 71, 56, 115, 73, 70, 100, 118, 99, 109, 120, 107, 73, 81, 61, 61,\n    ]);\n    // base64: \"SGVsbG8sIFdvcmxkIQ\"\n    let input_no_pad: BoundedVec<u8, 24> = BoundedVec::from_array([\n        83, 71, 86, 115, 98, 71, 56, 115, 73, 70, 100, 118, 99, 109, 120, 107, 73, 81,\n    ]);\n    // \"Hello, World!\"\n    let expected: BoundedVec<u8, 16> =\n        BoundedVec::from_array([72, 101, 108, 108, 111, 44, 32, 87, 111, 114, 108, 100, 33]);\n\n    // all configurations should decode the same way\n    let result = Base64DecodeBE::decode_var(input);\n    assert(result == expected);\n    let result = Base64DecodeBENoPad::decode_var(input_no_pad);\n    println(f\"result {result}, expected {expected}\");\n    assert(result == expected);\n    let result = Base64DecodeBEUrlSafeWithPad::decode_var(input);\n    assert(result == expected);\n    let result = Base64DecodeBEUrlSafe::decode_var(input_no_pad);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var_multi_chunks() {\n    // base64: \"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZy4=\"\n    let input: BoundedVec<u8, 64> = BoundedVec::from_array([\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 52, 61,\n    ]);\n    // base64: \"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZy4=\"\n    let input_no_pad: BoundedVec<u8, 64> = BoundedVec::from_array([\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 52,\n    ]);\n    // \"The quick brown fox jumps over the lazy dog.\"\n    let expected: BoundedVec<u8, 48> = BoundedVec::from_array([\n        84, 104, 101, 32, 113, 117, 105, 99, 107, 32, 98, 114, 111, 119, 110, 32, 102, 111, 120, 32,\n        106, 117, 109, 112, 115, 32, 111, 118, 101, 114, 32, 116, 104, 101, 32, 108, 97, 122, 121,\n        32, 100, 111, 103, 46,\n    ]);\n\n    // all configurations should give the same encoding\n    let result = Base64DecodeBE::decode_var(input);\n    assert(result == expected);\n    let result = Base64DecodeBENoPad::decode_var(input_no_pad);\n    assert(result == expected);\n    let result = Base64DecodeBEUrlSafeWithPad::decode_var(input);\n    assert(result == expected);\n    let result = Base64DecodeBEUrlSafe::decode_var(input_no_pad);\n    assert(result == expected);\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir_base64/v0.4.0/src/decoder.nr"},"98":{"source":"use crate::constants::TWO_POW_120;\nuse crate::fns::{\n    expressions::evaluate_quadratic_expression,\n    unconstrained_helpers::{\n        __add_with_flags, __from_field, __neg_with_flags, __sub_with_flags, __validate_gt_remainder,\n        __validate_in_field_compute_borrow_flags,\n    },\n    unconstrained_ops::{__add, __div, __mul, __neg, __sub, __udiv_mod},\n};\nuse crate::params::BigNumParams as P;\n\n/**\n * In this file:\n *\n * conditional_select\n * assert_is_not_equal\n * eq\n * validate_in_field\n * validate_in_range\n * validate_quotient_in_range\n * validate_gt\n * neg\n * add\n * sub\n * mul\n * div\n * udiv_mod\n * udiv\n * umod\n */\n\npub(crate) fn limbs_to_field<let N: u32, let MOD_BITS: u32>(\n    _params: P<N, MOD_BITS>,\n    limbs: [u128; N],\n) -> Field {\n    if N > 2 {\n        // validate that the limbs is less than the modulus the grumpkin modulus\n        let mut grumpkin_modulus = [0; N];\n        grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n        grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n        grumpkin_modulus[2] = 0x3064;\n        validate_gt::<N, MOD_BITS>(grumpkin_modulus, limbs);\n        // validate that the limbs are in range\n        validate_in_range::<_, N, MOD_BITS>(limbs);\n    }\n    // validate the limbs sum up to the field value\n    if N < 2 {\n        limbs[0] as Field\n    } else if N == 2 {\n        validate_in_range::<_, N, MOD_BITS>(limbs);\n        (limbs[0] + limbs[1] * TWO_POW_120) as Field\n    } else {\n        // validate_in_range::<N, 254>(limbs);\n        (\n            limbs[0] as Field\n                + limbs[1] as Field * TWO_POW_120 as Field\n                + limbs[2] as Field * TWO_POW_120 as Field * TWO_POW_120 as Field\n        )\n    }\n}\n\npub(crate) fn from_field<let N: u32, let MOD_BITS: u32>(field: Field) -> [u128; N] {\n    // Safety: we check that the resulting limbs represent the intended field element\n    // we check the bit length, the limbs being max 120 bits, and the value in total is less than the field modulus\n    let result: [u128; N] = unsafe { __from_field::<N>(field) };\n    if !std::runtime::is_unconstrained() {\n        // validate the limbs are in range and the value in total is less than 2^254\n\n        // validate that the last limb is less than the modulus\n        if N > 2 {\n            // validate that the result is less than the modulus\n            let mut grumpkin_modulus = [0; N];\n            grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n            grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n            grumpkin_modulus[2] = 0x3064;\n            validate_gt::<N, MOD_BITS>(grumpkin_modulus, result);\n            // validate that the limbs are in range\n            validate_in_range::<_, N, MOD_BITS>(result);\n        }\n        // validate the limbs sum up to the field value\n        let TWO_POW_120_FIELD = TWO_POW_120 as Field;\n        let field_val = if N < 2 {\n            result[0] as Field\n        } else if N == 2 {\n            validate_in_range::<_, N, MOD_BITS>(result);\n            result[0] as Field + result[1] as Field * TWO_POW_120_FIELD\n        } else {\n            validate_in_range::<_, N, MOD_BITS>(result);\n            result[0] as Field\n                + result[1] as Field * TWO_POW_120_FIELD\n                + result[2] as Field * TWO_POW_120_FIELD * TWO_POW_120_FIELD\n        };\n        assert_eq(field_val, field);\n    }\n\n    result\n}\n\n/**\n* @brief given an input seed, generate a pseudorandom BigNum value\n* @details we hash the input seed into `modulus_bits * 2` bits of entropy,\n* which is then reduced into a BigNum value\n* We use a hash function that can be modelled as a random oracle\n* This function *should* produce an output that is a uniformly randomly distributed value modulo BigNum::modulus()\n**/\n\npub(crate) fn derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [u128; N] {\n    let mut rolling_seed: [u8; SeedBytes + 1] = [0; SeedBytes + 1];\n    for i in 0..SeedBytes {\n        rolling_seed[i] = seed[i];\n        assert_eq(rolling_seed[i], seed[i]);\n    }\n\n    let mut hash_buffer: [u8; N * 2 * 15] = [0; N * 2 * 15];\n\n    let mut rolling_hash_fields: [Field; (SeedBytes / 31) + 1] = [0; (SeedBytes / 31) + 1];\n    let mut seed_ptr = 0;\n    for i in 0..(SeedBytes / 31) + 1 {\n        let mut packed: Field = 0;\n        for _ in 0..31 {\n            if (seed_ptr < SeedBytes) {\n                packed *= 256;\n                packed += seed[seed_ptr] as Field;\n                seed_ptr += 1;\n            }\n        }\n        rolling_hash_fields[i] = packed;\n    }\n\n    let compressed =\n        std::hash::poseidon2::Poseidon2::hash(rolling_hash_fields, (SeedBytes / 31) + 1);\n    let mut rolling_hash: [Field; 2] = [compressed, 0];\n\n    let num_hashes = (240 * N) / 254 + (((30 * N) % 32) != 0) as u32;\n    for i in 0..num_hashes - 1 {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        for j in 0..30 {\n            hash_buffer[i * 30 + j] = hash[j];\n        }\n        rolling_hash[1] += 1;\n    }\n\n    {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        let remaining_bytes = 30 * N - (num_hashes - 1) * 30;\n        for j in 0..remaining_bytes {\n            hash_buffer[(num_hashes - 1) * 30 + j] = hash[j];\n        }\n    }\n\n    let num_bits = MOD_BITS * 2;\n    let num_bytes = num_bits / 8 + ((num_bits % 8) != 0) as u32;\n\n    let bits_in_last_byte = num_bits as u8 % 8;\n    let last_byte_mask = (1 as u8 << bits_in_last_byte) - 1;\n    hash_buffer[num_bytes - 1] = hash_buffer[num_bytes - 1] & last_byte_mask;\n\n    let num_bigfield_chunks = (2 * N) / (N - 1) + (((2 * N) % (N - 1)) != 0) as u32;\n    let mut byte_ptr = 0;\n\n    // we want to convert our byte array into bigfield chunks\n    // each chunk has at most N-1 limbs\n    // to determine the exact number of chunks, we need the `!=` or `>` operator which is not avaiable when defining array sizes\n    // so we overestimate at 4\n    // e.g. if N = 20, then we have 40 limbs we want to reduce, but each bigfield chunk is 19 limbs, so we need 3\n    // if N = 2, we have 4 limbs we want to reduce but each bigfield chunk is only 1 limb, so we need 4\n    // max possible number of chunks is therefore 4\n    let mut bigfield_chunks: [[u128; N]; 4] = [[0; N]; 4];\n    for k in 0..num_bigfield_chunks {\n        let mut bigfield_limbs: [u128; N] = [0; N];\n        let mut num_filled_bytes = (k * 30);\n        let mut num_remaining_bytes = num_bytes - num_filled_bytes;\n        let mut num_remaining_limbs =\n            (num_remaining_bytes / 15) + (num_remaining_bytes % 15 > 0) as u32;\n        let mut more_than_N_minus_one_limbs = (num_remaining_limbs > (N - 1)) as u32;\n        let mut num_limbs_in_bigfield = more_than_N_minus_one_limbs * (N - 1)\n            + num_remaining_limbs * (1 - more_than_N_minus_one_limbs);\n\n        for j in 0..num_limbs_in_bigfield {\n            let mut limb: u128 = 0;\n            for _ in 0..15 {\n                let need_more_bytes = (byte_ptr < num_bytes);\n                let mut byte = hash_buffer[byte_ptr];\n                limb *= (256 * need_more_bytes as u128 + (1 - need_more_bytes as u128));\n                limb += byte as u128 * need_more_bytes as u128;\n                byte_ptr += need_more_bytes as u32;\n            }\n            bigfield_limbs[num_limbs_in_bigfield - 1 - j] = limb;\n        }\n        bigfield_chunks[num_bigfield_chunks - 1 - k] = bigfield_limbs;\n    }\n\n    let mut bigfield_rhs_limbs: [u128; N] = [0; N];\n    bigfield_rhs_limbs[N - 1] = 1;\n    validate_in_range::<_, _, MOD_BITS>(bigfield_rhs_limbs);\n\n    let mut result: [u128; N] = [0; N];\n\n    for i in 0..num_bigfield_chunks {\n        let bigfield_lhs_limbs = bigfield_chunks[i];\n\n        // result = mul(params, result, bigfield_rhs_limbs);\n        result = add(params, result, bigfield_lhs_limbs);\n    }\n\n    result\n}\n\n/**\n* @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n* @description should be cheaper than using an IF statement (TODO: check!)\n**/\npub(crate) fn conditional_select<let N: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n    predicate: bool,\n) -> [u128; N] {\n    let mut result: [u128; N] = lhs;\n    for i in 0..N {\n        // (lhs[i] - rhs[i]) * predicate + rhs[i]\n        // in case lhs < rhs, this will underflow so we have to do one extra multiplication to prevent it\n        result[i] = lhs[i] * predicate as u128 + rhs[i] * (1 - predicate as u128);\n    }\n    result\n}\n\n/**\n    * @brief Validate self != other\n    * @details If A == B, then A == B mod N.\n    *          We can efficiently evaluate A == B mod N where N = circuit modulus\n    *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n    *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n    *          (todo: compute how tiny)\n    **/\npub(crate) fn assert_is_not_equal<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) {\n    let mut l: Field = 0;\n    let mut r: Field = 0;\n    let mut modulus_mod_n: Field = 0;\n    for i in 0..N {\n        l *= TWO_POW_120 as Field;\n        r *= TWO_POW_120 as Field;\n        modulus_mod_n *= TWO_POW_120 as Field;\n        l += lhs[N - i - 1] as Field;\n        r += rhs[N - i - 1] as Field;\n        modulus_mod_n += params.modulus[N - i - 1] as Field;\n    }\n\n    // lhs can be either X mod N or P + X mod N\n    // rhs can be either Y mod N or P + Y mod N\n    // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n    let diff = l - r;\n    let target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n    assert(target != 0, \"asssert_is_not_equal fail\");\n}\n\npub(crate) fn eq<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> bool {\n    let diff = sub::<_, MOD_BITS>(params, lhs, rhs);\n    // if self == other, possible values of `diff` will be `p` or `0`\n    // (the subtract operator constrains diff to be < ceil(log(p)))\n    // TODO: can do this more efficiently via witngen in unconstrained functions?\n    let is_equal_modulus: bool = diff == params.modulus;\n    let is_equal_zero: bool = diff.all(|elem| elem == 0);\n    is_equal_modulus | is_equal_zero\n}\n\npub(crate) fn is_zero<let N: u32, let MOD_BITS: u32>(val: [u128; N]) -> bool {\n    val.all(|limb| limb == 0)\n}\n\npub(crate) fn validate_in_field<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) {\n    // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n    let mut p_minus_self: [Field; N] = [0; N];\n    let modulus: [u128; N] = params.modulus;\n    for i in 0..N {\n        p_minus_self[i] = (modulus[i] as Field - val[i] as Field);\n    }\n    let borrow_flags = unsafe { __validate_in_field_compute_borrow_flags(params, val) };\n    p_minus_self[0] += (borrow_flags[0] as Field * TWO_POW_120 as Field);\n    for i in 1..N - 1 {\n        p_minus_self[i] +=\n            (borrow_flags[i] as Field * TWO_POW_120 as Field - borrow_flags[i - 1] as Field);\n    }\n    p_minus_self[N - 1] -= (borrow_flags[N - 2] as Field);\n    validate_in_range::<_, _, MOD_BITS>(p_minus_self);\n}\n\n/**\n* @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n**/\npub(crate) fn validate_in_range<T, let N: u32, let MOD_BITS: u32>(limbs: [T; N])\nwhere\n    T: Into<Field>,\n{\n    for i in 0..(N - 1) {\n        limbs[i].into().assert_max_bit_size::<120>();\n    }\n\n    limbs[N - 1].into().assert_max_bit_size::<MOD_BITS - ((N - 1) * 120)>();\n}\n\n/**\n* @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n* @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n*              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n*              Why is this?\n*              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n*                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n*                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n*              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n*\n*              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n*              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n**/\npub(crate) fn validate_quotient_in_range<let N: u32, let MOD_BITS: u32>(limbs: [u128; N]) {\n    for i in 0..(N) {\n        (limbs[i] as Field).assert_max_bit_size::<120>();\n    }\n    // Note: replace magic number 6 with definition\n    (limbs[N - 1] as Field).assert_max_bit_size::<MOD_BITS - ((N - 1) * 120) + 6>();\n}\n\n// validate that lhs - rhs does not underflow i.e. lhs > rhs\npub(crate) fn validate_gt<let N: u32, let MOD_BITS: u32>(lhs: [u128; N], rhs: [u128; N]) {\n    // so we do... p - x - r = 0 and there might be borrow flags\n    // a - b = r\n    // p + a - b - r = 0\n\n    let (result, carry_flags, borrow_flags) = unsafe { __validate_gt_remainder(lhs, rhs) };\n    validate_in_range::<_, _, MOD_BITS>(result);\n\n    let mut addend: [Field; N] = [0; N];\n    let result_limb = lhs[0] as Field - rhs[0] as Field + addend[0] - result[0] as Field - 1\n        + (borrow_flags[0] as Field - carry_flags[0] as Field) * TWO_POW_120 as Field;\n    assert(result_limb == 0);\n\n    for i in 1..N - 1 {\n        let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n        let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n        let result_limb = lhs[i] as Field - rhs[i] as Field + addend[i]\n            - result[i] as Field\n            - prev_borrow_sub_carry\n            + borrow_sub_carry * TWO_POW_120 as Field;\n        assert(result_limb == 0);\n    }\n\n    let result_limb = lhs[N - 1] as Field - rhs[N - 1] as Field + addend[N - 1]\n        - result[N - 1] as Field\n        - borrow_flags[N - 2] as Field\n        + carry_flags[N - 2] as Field;\n    assert(result_limb == 0);\n}\n\npub(crate) fn neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __neg(params, val)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, borrow_flags) = unsafe { __neg_with_flags(params, val) };\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n        let result_limb = modulus[0] + (borrow_flags[0] as u128 * TWO_POW_120) - val[0] - result[0];\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = modulus[i] + (borrow_flags[i] as u128 * TWO_POW_120)\n                - val[i]\n                - result[i]\n                - borrow_flags[i - 1] as u128;\n            assert(result_limb == 0);\n        }\n        let result_limb = modulus[N - 1] - val[N - 1] - result[N - 1] - borrow_flags[N - 2] as u128;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            // __add_u128(params, lhs, rhs)\n            __add(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, carry_flags, borrow_flags, overflow_modulus) =\n            unsafe { __add_with_flags(params, lhs, rhs) };\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut subtrahend: [u128; N] = [0; N];\n        if (overflow_modulus) {\n            subtrahend = modulus;\n        }\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb = lhs[0] as Field + rhs[0] as Field\n            - subtrahend[0] as Field\n            - result[0] as Field\n            + borrow_sub_carry * TWO_POW_120 as Field;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = lhs[i] as Field + rhs[i] as Field\n                - subtrahend[i] as Field\n                - result[i] as Field\n                - prev_borrow_sub_carry\n                + borrow_sub_carry * TWO_POW_120 as Field;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb = lhs[N - 1] as Field + rhs[N - 1] as Field\n            - subtrahend[N - 1] as Field\n            - result[N - 1] as Field\n            - borrow_sub_carry as Field;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __sub(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags, underflow) =\n            unsafe { __sub_with_flags(params, lhs, rhs) };\n\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut addend: [u128; N] = [0; N];\n        if (underflow) {\n            addend = modulus;\n        }\n\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb = borrow_sub_carry * TWO_POW_120 as Field\n            + addend[0] as Field\n            + lhs[0] as Field\n            - rhs[0] as Field\n            - result[0] as Field;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = borrow_sub_carry * TWO_POW_120 as Field\n                + addend[i] as Field\n                + lhs[i] as Field\n                - rhs[i] as Field\n                - result[i] as Field\n                - prev_borrow_sub_carry;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb = addend[N - 1] as Field + lhs[N - 1] as Field\n            - rhs[N - 1] as Field\n            - result[N - 1] as Field\n            - borrow_sub_carry as Field;\n        assert(result_limb == 0);\n        result\n    }\n}\n\n// Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n//       via evaluate_quadratic_expression\n// e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n//      will create much fewer constraints than calling `mul` and `add` directly\npub(crate) fn mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let result = unsafe { __mul::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[lhs]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [result],\n            [true],\n        );\n    }\n    result\n}\n\n// Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\npub(crate) fn div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    assert(\n        params.has_multiplicative_inverse,\n        \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\",\n    );\n    let result = unsafe { __div::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[result]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [lhs],\n            [true],\n        );\n    }\n    result\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) fn udiv_mod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let (quotient, remainder) = unsafe { __udiv_mod(numerator, divisor) };\n    if !std::runtime::is_unconstrained() {\n        // self / divisor = quotient rounded\n        // quotient * divisor + remainder - self = 0\n        evaluate_quadratic_expression(\n            params,\n            [[quotient]],\n            [[false]],\n            [[divisor]],\n            [[false]],\n            [numerator, remainder],\n            [true, false],\n        );\n        // we need (remainder < divisor)\n        // implies (divisor - remainder > 0)\n        validate_gt::<_, MOD_BITS>(divisor, remainder);\n    }\n    (quotient, remainder)\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. return param is floor(numerator / divisor)\n**/\npub(crate) fn udiv<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).0\n}\n\n/**\n* @brief udiv_mod performs integer modular reduction\n*\n* i.e. 1. numerator % divisor = return value\n**/\npub(crate) fn umod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).1\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/constrained_ops.nr"},"99":{"source":"use crate::utils::split_bits;\n\nuse crate::constants::{TWO_POW_120, TWO_POW_126, TWO_POW_246};\nuse crate::fns::{\n    constrained_ops::validate_quotient_in_range, unconstrained_helpers::__barrett_reduction,\n};\nuse crate::params::BigNumParams as P;\n\n/**\n* @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n* @description The expression is of the form:\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n* For example, when computing the product a * b - q * p = 0, it is possible that:\n*      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n*      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n* In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n* In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n*\n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\n\nunconstrained fn __compute_quadratic_expression_with_borrow_flags<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([u128; N], [u128; N], [Field; 2 * N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut mulout_p = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n\n    let mut mulout_n: [Field; 2 * N] = [0; 2 * N];\n    let mut relation_result: [u128; 2 * N] = split_bits::__normalize_limbs(mulout_p, 2 * N);\n\n    let (quotient, remainder) =\n        __barrett_reduction(relation_result, params.redc_param, MOD_BITS, params.modulus);\n    assert(remainder == [0; N]);\n    for i in 0..N {\n        for j in 0..N {\n            mulout_n[i + j] += quotient[i] as Field * params.modulus[j] as Field;\n        }\n    }\n\n    // compute borrow flags from mulout_p and mulout_n\n    let mut borrow_flags: [Field; 2 * N] = [0; 2 * N];\n    let borrow_shift: Field = TWO_POW_246; // 2^{246}\n    let borrow_carry: Field = TWO_POW_126; // 2^{246 - 120} = 2^{126}\n    let downshift: Field = 1 / (TWO_POW_120 as Field);\n\n    // determine whether we need to borrow from more significant limbs.\n    // initial limb is \"simple\" comparison operation\n    // TODO: check how expensive `lt` operator is w.r.t. witness generation\n    borrow_flags[0] = mulout_p[0].lt(mulout_n[0]) as Field;\n    // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n    // and there is nothing to borrow against for the final limb.\n    let mut hi_bits =\n        (mulout_p[0] - mulout_n[0] + (borrow_flags[0] as Field * borrow_shift)) * downshift;\n    for i in 1..(N + N - 2) {\n        // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n        // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n        //     * downshift;\n        mulout_p[i] += hi_bits;\n\n        // determine whether negative limb values are greater than positive limb values\n        let underflow: Field =\n            mulout_p[i].lt(mulout_n[i] + (borrow_flags[i - 1] * borrow_carry)) as Field;\n        borrow_flags[i] = underflow;\n\n        hi_bits = (\n            mulout_p[i] - mulout_n[i] + (borrow_flags[i] * borrow_shift)\n                - (borrow_flags[i - 1] * borrow_carry)\n        )\n            * downshift;\n    }\n\n    (quotient, remainder, borrow_flags)\n}\n\n/**\n* @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n**/\n// NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n// To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n// We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n// Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n// Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\nunconstrained fn __add_linear_expression<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]; M],\n    flags: [bool; M],\n) -> ([u128; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut sum: [u128; N] = [0; N];\n    // TODO: ugly! Will fail if input array is empty\n    let modulus2: [u128; N] = params.double_modulus;\n    for i in 0..M {\n        if (flags[i]) {\n            for j in 0..N {\n                sum[j] = sum[j] + (modulus2[j] as Field - x[i][j] as Field) as u128;\n                // assert(x[i][j].lt(modulus2[j]));\n            }\n        } else {\n            for j in 0..N {\n                sum[j] = sum[j] + x[i][j];\n            }\n        }\n    }\n    // problem if we normalize when used in computing quotient\n    sum\n}\n\n/**\n* @brief computes the limb products of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\nunconstrained fn __compute_quadratic_expression_product<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> [Field; 2 * N] {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut lhs: [[u128; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut rhs: [[u128; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n\n    for i in 0..NUM_PRODUCTS {\n        lhs[i] = __add_linear_expression(params, lhs_terms[i], lhs_flags[i]);\n        rhs[i] = __add_linear_expression(params, rhs_terms[i], rhs_flags[i]);\n    }\n\n    let add: [u128; N] = __add_linear_expression(params, linear_terms, linear_flags);\n\n    let mut mulout: [Field; 2 * N] = [0; 2 * N];\n\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                mulout[i + j] += (lhs[k][i] as Field * rhs[k][j] as Field);\n            }\n        }\n        mulout[i] += add[i] as Field;\n    }\n    mulout\n}\n\n/**\n* @brief computes the quotient/remainder of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\npub(crate) unconstrained fn __compute_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([u128; N], [u128; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mulout: [Field; (N * 2)] = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n    let mut relation_result: [u128; 2 * N] = split_bits::__normalize_limbs(mulout, 2 * N);\n\n    // size 4\n    // a[3] * b[3] = a[6] = 7\n    // TODO: ugly! Will fail if input slice is empty\n    let k = MOD_BITS;\n\n    let (quotient, remainder) =\n        __barrett_reduction(relation_result, params.redc_param, k, params.modulus);\n\n    let mut q = quotient;\n    let mut r = remainder;\n    (q, r)\n}\n\n/**\n* @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n* @description The expression is of the form (when evaluated as an integer relation):\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* Note: this method requires the remainder term of the expression to be ZERO\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The expensive parts of this algorithm are the following:\n*      1. evaluating the limb products required to compute `lhs * rhs`\n*      2. applying range constraints to validate the result is 0\n*\n* Range constraints are needed for the following reason:\n* When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n* Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n* Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n* To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n* (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n* To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n* We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n* TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n* I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n* TODO: explain why we apply a 126-bit range check, this feels like a magic number\n* (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n* TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n* \n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\npub(crate) fn evaluate_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) {\n    // use an unconstrained function to compute the value of the quotient\n    let (quotient, _, borrow_flags): ([u128; N], [u128; N], [Field; 2 * N]) = unsafe {\n        __compute_quadratic_expression_with_borrow_flags::<_, MOD_BITS, _, _, _, _>(\n            params,\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags,\n        )\n    };\n\n    // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n    // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n    validate_quotient_in_range::<_, MOD_BITS>(quotient);\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    // (should be a compile-time check...unconstrained function?)\n    // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n    let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t4: [Field; N] = [0; N];\n\n    // TODO: this is super nasty as it requires a multiplication\n    let double_modulus: [u128; N] = params.double_modulus;\n\n    for k in 0..NUM_PRODUCTS {\n        for i in 0..N {\n            for j in 0..LHS_N {\n                // note: if is_negative is not known at comptime this is very expensive\n                if (lhs_flags[k][j]) {\n                    t0[k][i] -= lhs_terms[k][j][i] as Field;\n                    t0[k][i] += double_modulus[i] as Field;\n                } else {\n                    t0[k][i] += lhs_terms[k][j][i] as Field;\n                }\n            }\n            for j in 0..RHS_N {\n                if (rhs_flags[k][j]) {\n                    t1[k][i] -= rhs_terms[k][j][i] as Field;\n                    t1[k][i] += double_modulus[i] as Field;\n                } else {\n                    t1[k][i] += rhs_terms[k][j][i] as Field;\n                }\n            }\n        }\n    }\n    for i in 0..N {\n        for j in 0..ADD_N {\n            if (linear_flags[j]) {\n                t4[i] -= linear_terms[j][i] as Field;\n                t4[i] += double_modulus[i] as Field;\n            } else {\n                t4[i] += linear_terms[j][i] as Field;\n            }\n        }\n    }\n\n    // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n    // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n    // so that we can ensure that no limbs will underflow for an honest Prover\n    let mut product_limbs: [Field; 2 * N] = [0; 2 * N];\n\n    // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n    // TODO: this is super nasty as it requires a multiplication\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                if k == 0 {\n                    let new_term =\n                        t0[k][i] * t1[k][j] - quotient[i] as Field * params.modulus[j] as Field;\n                    std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                    product_limbs[i + j] += new_term;\n                } else {\n                    product_limbs[i + j] += t0[k][i] * t1[k][j] as Field;\n                }\n            }\n            if (NUM_PRODUCTS == 0) {\n                product_limbs[i + j] -= quotient[i] as Field * params.modulus[j] as Field;\n            }\n        }\n        product_limbs[i] += t4[i];\n    }\n\n    // each limb product represents the sum of 120-bit products.\n    // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n    // where no more than 64 limb products are summed together.\n    // TODO: check in unconstrained function that this condition is satisfied\n    // TODO: define trade-offs regarding the value of borrow_shift\n    // (the larger the value, the greater the range check that is required on product_limbs)\n    // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n    // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n    let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n    let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n    // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n    //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n    // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n    borrow_flags[0].assert_max_bit_size::<1>();\n    product_limbs[0] += borrow_flags[0] * borrow_shift;\n    for i in 1..(N + N - 2) {\n        borrow_flags[i].assert_max_bit_size::<1>();\n        product_limbs[i] += (borrow_flags[i] * borrow_shift - borrow_flags[i - 1] * borrow_carry);\n    }\n    product_limbs[N + N - 2] -= borrow_flags[N + N - 3] as Field * borrow_carry;\n\n    // Final step: Validate `product_limbs` represents the integer value `0`\n    // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n    // i.e. we need to do the following for each limb `i`:\n    //      1. validate the limb's low-120 bits equals zero\n    //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n    //      3. add the carry into limb `i+1`\n    // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n    // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n    // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n    //  where k is the number of bits in the prime field)\n    // We then add the result into the next limb and repeat.\n    let hi_shift: Field = 0x1000000000000000000000000000000;\n    let hi_downshift: Field = 1 / hi_shift;\n    for i in 0..N + N - 2 {\n        product_limbs[i] *= hi_downshift;\n        std::as_witness(product_limbs[i]);\n        product_limbs[i].assert_max_bit_size::<126>(); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n        product_limbs[i + 1] += product_limbs[i];\n    }\n    // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n    assert(product_limbs[N + N - 2] == 0);\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/expressions.nr"},"101":{"source":"/**\n* @brief construct a BigNum instance out of an array of bytes in BIG ENDIAN format\n* @description: each 120-bit limb represents 15 bytes, we require that the size of the byte array\n*               is precisely large enough to cover MOD_BITS\n* @param x: input byte array\n**/\npub(crate) fn from_be_bytes<let N: u32, let MOD_BITS: u32, let NBytes: u32>(\n    x: [u8; NBytes],\n) -> [u128; N] {\n    let num_bits = NBytes * 8;\n    assert(num_bits >= MOD_BITS);\n    assert(num_bits - MOD_BITS < 8);\n    let mut result: [u128; N] = [0; N];\n\n    let excess_bytes = N * 15 - NBytes;\n    let final_limb_bytes = 15 - excess_bytes;\n    let mut limb: u128 = 0;\n    let mut k = 0;\n    for _j in 0..final_limb_bytes {\n        limb *= 256;\n        limb += x[k] as u128;\n        k += 1;\n    }\n    result[N - 1] = limb;\n\n    for i in 1..N {\n        let mut limb: u128 = 0;\n        for _j in 0..15 {\n            limb *= 256;\n            limb += x[k] as u128;\n            k += 1;\n        }\n        result[N - i - 1] = limb;\n    }\n\n    let most_significant_byte: Field = x[0] as Field;\n\n    most_significant_byte.assert_max_bit_size::<8 - (NBytes * 8 - MOD_BITS)>();\n    result\n}\n\npub(crate) fn to_le_bytes<let N: u32, let MOD_BITS: u32, let NBytes: u32>(\n    val: [u128; N],\n) -> [u8; NBytes] {\n    let nbytes = (MOD_BITS / 8) + (MOD_BITS % 8 != 0) as u32;\n    assert(nbytes <= NBytes);\n\n    let mut result: [u8; NBytes] = [0; NBytes];\n    for i in 0..N - 1 {\n        let limb_bytes: [u8; 15] = (val[i] as Field).to_le_bytes();\n        for j in 0..15 {\n            result[i * 15 + j] = limb_bytes[j];\n        }\n    }\n    let last_limb_bytes: [u8; 15] = (val[N - 1] as Field).to_le_bytes();\n    let num_last_bytes = (NBytes - (N - 1) * 15);\n    for i in 0..num_last_bytes {\n        result[(N - 1) * 15 + i] = last_limb_bytes[i];\n    }\n    result\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/serialization.nr"},"102":{"source":"use crate::constants::{TWO_POW_119, TWO_POW_120, TWO_POW_60};\nuse crate::fns::unconstrained_ops::{__add, __gte, __mul, __neg, __one, __pow};\nuse crate::params::BigNumParams as P;\nuse crate::utils::msb::get_msb64;\nuse crate::utils::split_bits::__normalize_limbs;\n\npub(crate) unconstrained fn __from_field<let N: u32>(field: Field) -> [u128; N] {\n    let mut x = field;\n    let x_first_u128 = (x as u128);\n    let first: u128 = x_first_u128 % TWO_POW_120;\n    // this becomes the same as a integer division because we're removing the remainder\n    x = (x - (first as Field)) / (TWO_POW_120 as Field);\n    let x_second_u128 = (x as u128);\n    let second = x_second_u128 % TWO_POW_120;\n    x = (x - (second as Field)) / (TWO_POW_120 as Field);\n    let x_third_u128 = (x as u128);\n    let third = x_third_u128 % TWO_POW_120;\n    let mut result: [u128; N] = [0; N];\n    if N > 2 {\n        result[0] = first;\n        result[1] = second;\n        result[2] = third;\n    }\n    if N == 2 {\n        result[0] = first;\n        result[1] = second;\n    }\n    if N == 1 {\n        result[0] = first;\n    }\n    result\n}\n\npub(crate) unconstrained fn __validate_in_field_compute_borrow_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [bool; N] {\n    let mut flags: [bool; N] = [false; N];\n    let modulus: [u128; N] = params.modulus;\n    flags[0] = modulus[0] < val[0];\n    for i in 1..N - 1 {\n        flags[i] = modulus[i] < val[i] + flags[i - 1] as u128;\n    }\n    flags\n}\n\npub(crate) unconstrained fn __validate_gt_remainder<let N: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N]) {\n    let mut a = lhs;\n    let mut b = rhs;\n    let underflow = !__gte(lhs, rhs);\n    assert(underflow == false, \"BigNum::validate_gt check fails\");\n    let mut result: [u128; N] = [0; N];\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 1;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term: u128 = a[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry;\n\n        let sub_term = b[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u128;\n        result[i] = (borrow * TWO_POW_120 + add_term - sub_term);\n\n        borrow_in = borrow;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n\n    (result, carry_flags, borrow_flags)\n}\n\npub(crate) unconstrained fn __neg_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> ([u128; N], [bool; N]) {\n    let mut result: [u128; N] = [0; N];\n    let mut borrow_in: u128 = 0;\n\n    let mut borrow_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let sub_term = val[i] + borrow_in;\n        let borrow = (sub_term > params.modulus[i]) as u128;\n        result[i] = borrow * TWO_POW_120 + params.modulus[i] - sub_term;\n\n        borrow_in = borrow;\n        borrow_flags[i] = borrow as bool;\n    }\n    (result, borrow_flags)\n}\n\npub(crate) unconstrained fn __add_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N], bool) {\n    let add_res = __helper_add(lhs, rhs);\n    let overflow = __gte(add_res, params.modulus);\n\n    let mut subtrahend: [u128; N] = [0; N];\n    let mut result: [u128; N] = [0; N];\n\n    if overflow {\n        subtrahend = params.modulus;\n    }\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term = lhs[i] + rhs[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry as u128;\n\n        let sub_term = subtrahend[i] + borrow_in;\n\n        let mut borrow: u128 = (sub_term > add_term) as u128;\n        result[i] = borrow * TWO_POW_120 + add_term - sub_term;\n        borrow_in = borrow as u128;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n    (result, carry_flags, borrow_flags, overflow)\n}\n\npub(crate) unconstrained fn __sub_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N], bool) {\n    let mut one: [u128; N] = [0; N];\n    one[0] = 1;\n    let underflow = !__gte(lhs, rhs);\n    let addend: [u128; N] = if underflow { params.modulus } else { [0; N] };\n    let mut result: [u128; N] = [0; N];\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term: u128 = lhs[i] + addend[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry;\n\n        let sub_term = rhs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u128;\n        result[i] = borrow as u128 * TWO_POW_120 + add_term - sub_term;\n        borrow_in = borrow;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n    (result, carry_flags, borrow_flags, underflow)\n}\n\n/**\n * @brief BARRETT_REDUCTION_OVERFLOW_BITS defines how large an input to barrett reduction can be\n * @details maximum value = modulus^2 <<BARRETT_REDUCTION_OVERFLOW_BITS\n *          see __barrett_reduction for more details\n **/\ncomptime global BARRETT_REDUCTION_OVERFLOW_BITS: u32 = 4;\n\npub(crate) unconstrained fn __barrett_reduction<let N: u32>(\n    x: [u128; 2 * N],\n    redc_param: [u128; N],\n    k: u32,\n    modulus: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut mulout_field: [Field; 3 * N] = [0; 3 * N];\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout_field[i + j] += x[i] as Field * redc_param[j] as Field;\n        }\n    }\n\n    let mulout: [u128; 3 * N] = __normalize_limbs(mulout_field, 3 * N - 1);\n\n    // When we apply the barrett reduction, the maximum value of the output will be\n    // <= p * (1 + x/2^{2k})\n    // where p = modulus,\n    //       x = reduction input\n    // if x > p * p, we need k to be larger than modulus_bits()\n    // we hardcode k = 4, which means that the maximum value of x is approx. 16 * p * p\n    // this should be larger than most values put into `evaluate_quadratic_expression`\n    // TODO: try and detect cases where x might be too large at comptime\n    // N.B. BARRETT_REDUCTION_OVERFLOW_BITS affects how `redc_param` is generated.\n    // `redc_param` = 2^{modulus_bits() * 2 + BARRETT_REDUCTION_OVERFLOW_BITS} / modulus\n    // NOTE: very niche edge case error that we need to be aware of:\n    //       N must be large enough to cover the modulus *plus* BARRETT_REDUCTION_OVERFLOW_BITS\n    //       i.e. a 359-bit prime needs (I think) 4 limbs to represent or we may overflow when calling __barrett_reduction\n    let mut quotient = __shr(mulout, (k + k + BARRETT_REDUCTION_OVERFLOW_BITS));\n    // the quotient has bunch of zero limbs now, so we can just take the first N limbs as a result\n    let mut smaller_quotient = [0; N];\n    for i in 0..N {\n        smaller_quotient[i] = quotient[i] as u128;\n    }\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient_full should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient_full: [Field; 3 * N] = __into_field_array(quotient);\n\n    // quotient_mul_modulus_normalized can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus_normalized: [Field; 2 * N] = [0; 2 * N];\n\n    // First, accumulate the products into quotient_mul_modulus_normalized\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus_normalized[i + j] +=\n                partial_quotient_full[i] * modulus[j] as Field;\n        }\n    }\n\n    // Then, split the accumulated values and propagate higher bits\n    let long_quotient_mul_modulus_normalized: [u128; 2 * N] =\n        __normalize_limbs(quotient_mul_modulus_normalized, 2 * N);\n    let mut quotient_mul_modulus_normalized: [u128; N] = [0; N];\n    for i in 0..N {\n        quotient_mul_modulus_normalized[i] = long_quotient_mul_modulus_normalized[i];\n    }\n\n    let mut long_remainder = __helper_sub(x, long_quotient_mul_modulus_normalized);\n    // ugly but have to remove a bunch of zeros from this\n    let mut remainder = [0; N];\n    for i in 0..N {\n        remainder[i] = long_remainder[i];\n    }\n    // barrett reduction is quirky so might need to remove a few modulus from the remainder\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n\n    (smaller_quotient, remainder)\n}\n\n/**\n* @brief compute the log of the size of the primitive root\n* @details find the maximum value k where x^k = 1, where x = primitive root\n*          This is needed for our Tonelli-Shanks sqrt algorithm\n**/\npub(crate) unconstrained fn __primitive_root_log_size<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> u32 {\n    let mut one: [u128; N] = [0; N];\n    one[0] = 1;\n    let mut target = __helper_sub(params.modulus, one);\n    let mut result: u32 = 0;\n    for _ in 0..MOD_BITS {\n        let lsb_is_one = (target[0] & 1) == 1;\n        if (lsb_is_one) {\n            break;\n        }\n        result += 1;\n        target = __shr1(target);\n    }\n    result\n}\n\n/**\n* @brief inner loop fn for `find_multiplive_generator`\n* @details recursive function to get around the lack of a `while` keyword\n**/\nunconstrained fn __recursively_find_multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    target: [u128; N],\n    p_minus_one_over_two: [u128; N],\n) -> (bool, [u128; N]) {\n    let exped = __pow(params, target, p_minus_one_over_two);\n    let one: [u128; N] = __one();\n    let neg_one = __neg(params, one);\n    let found = exped == neg_one;\n    let mut result: (bool, [u128; N]) = (found, target);\n    if (!found) {\n        let _target: [u128; N] = __add(params, target, one);\n        result = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n            params,\n            _target,\n            p_minus_one_over_two,\n        );\n    }\n    result\n}\n\n/**\n* @brief find multiplicative generator `g` where `g` is the smallest value that is not a quadratic residue\n*        i.e. smallest g where g^2 = -1\n* @note WARNING if multiplicative generator does not exist, this function will enter an infinite loop!\n**/\npub(crate) unconstrained fn __multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> [u128; N] {\n    let mut target: [u128; N] = __one();\n    let p_minus_one_over_two = __shr1(__helper_sub(params.modulus, __one()));\n    let (_, target) = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n        params,\n        target,\n        p_minus_one_over_two,\n    );\n    target\n}\n\npub(crate) unconstrained fn __tonelli_shanks_sqrt_inner_loop_check<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    t2m: [u128; N],\n    i: u32,\n) -> u32 {\n    let one: [u128; N] = __one();\n    let is_one = t2m == one;\n    let mut result = i;\n    if (!is_one) {\n        let t2m = __mul::<_, MOD_BITS>(params, t2m, t2m);\n        let i = i + 1;\n        result = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, i);\n    }\n    result\n}\n\npub(crate) unconstrained fn __increment<let N: u32>(val: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 1;\n    for i in 0..N {\n        let mut add_term = (val[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shr<let N: u32>(input: [u128; N], shift: u32) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n\n    let num_shifted_limbs = shift / 120;\n    let limb_shift = (shift % 120) as u8;\n    let remainder_shift = (120 - limb_shift) as u8;\n    let mask: u128 = (((1 as u128) << limb_shift) - 1) << remainder_shift;\n    result[0] = (input[0 + num_shifted_limbs] >> limb_shift);\n    for i in 1..(N - num_shifted_limbs) {\n        let value = input[i + num_shifted_limbs];\n        result[i] = value >> limb_shift;\n        let remainder: u128 = (value << remainder_shift) & mask;\n        result[i - 1] = result[i - 1] + remainder;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shl<let N: u32>(input: [u128; N], shift: u32) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n\n    let num_shifted_limbs = shift / 120;\n    let limb_shift = (shift % 120) as u8;\n    let remainder_shift: u8 = 120 - limb_shift as u8;\n\n    // 83\n    // limb shift = 1\n    // inside shift = 19 bits to the left\n    // meaning we have 19 carry bits and 41 remainder bits\n    let mask: u128 = (1 as u128 << 120) - 1;\n    //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n    let value = input[0];\n\n    let mut remainder = (value >> remainder_shift);\n    result[num_shifted_limbs] = (value << limb_shift) & mask;\n\n    // shift 84. num shifted = 1\n    for i in 1..((N) - num_shifted_limbs) {\n        let value = input[i];\n        let upshift = ((value << limb_shift) + remainder) & mask;\n        result[i + num_shifted_limbs] = upshift;\n        remainder = (value >> remainder_shift);\n    }\n    result\n}\n\npub(crate) unconstrained fn __helper_sub<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut borrow: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    for i in 0..N {\n        borrow = ((rhs[i] + borrow_in) > lhs[i]) as u128;\n        let sub = (borrow << 120) + lhs[i] as u128 - rhs[i] as u128 - borrow_in;\n        result[i] = sub;\n        borrow_in = borrow;\n    }\n    result\n}\n\npub(crate) unconstrained fn __helper_add<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (lhs[i] + rhs[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shr1<let N: u32>(mut input: [u128; N]) -> [u128; N] {\n    let value = input[N - 1];\n    input[N - 1] = value >> 1;\n\n    let mut remainder = (value & 1) << 119;\n\n    for i in 1..N {\n        let value = input[N - 1 - i];\n        input[N - 1 - i] = (value >> 1) + remainder;\n        remainder = (value << 119) & TWO_POW_119;\n    }\n    input\n}\n\npub(crate) unconstrained fn __get_msb<let N: u32>(val: [u128; N]) -> u32 {\n    let mut count = 0;\n    for i in 0..N {\n        let v = val[((N) - 1 - i)];\n        let v_low = v as u64 % TWO_POW_60 as u64;\n        let v_high = ((v - v_low as u128) / TWO_POW_60) as u64;\n        if (v_high > 0) {\n            count = 60 * ((2 * N) - 1 - (i * 2)) + get_msb64(v_high);\n            break;\n        }\n        if (v_low > 0) {\n            count = 60 * ((2 * N) - 1 - (i * 2 + 1)) + get_msb64(v_low);\n            break;\n        }\n    }\n    count\n}\n\npub(crate) fn __get_bit<let N: u32>(input: [u128; N], bit: u32) -> bool {\n    let segment_index: u32 = bit / 120;\n    let uint_index = bit % 120;\n    let limb: u128 = input[segment_index];\n    let value = (limb >> uint_index as u8) & 1;\n    value == 1\n}\n\npub(crate) fn __into_field_array<let N: u32>(input: [u128; N]) -> [Field; N] {\n    let mut result: [Field; N] = [0; N];\n    for i in 0..N {\n        result[i] = input[i] as Field;\n    }\n    result\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/unconstrained_helpers.nr"},"103":{"source":"use crate::fns::constrained_ops::derive_from_seed;\nuse crate::fns::unconstrained_helpers::{\n    __barrett_reduction, __get_bit, __get_msb, __helper_add, __helper_sub, __increment,\n    __multiplicative_generator, __primitive_root_log_size, __shl, __shr,\n    __tonelli_shanks_sqrt_inner_loop_check,\n};\nuse crate::params::BigNumParams as P;\nuse crate::utils::split_bits;\nuse super::unconstrained_helpers::__shr1;\n\npub(crate) unconstrained fn __one<let N: u32>() -> [u128; N] {\n    let mut limbs: [u128; N] = [0; N];\n    limbs[0] = 1;\n    limbs\n}\n\n/// Deterministically derives a big_num from a seed value.\n///\n/// Takes a seed byte array and generates a big_num in the range [0, modulus-1].\n///\n/// ## Value Parameters\n///\n/// - `params`: The BigNum parameters containing modulus and reduction info\n/// - `seed`:  Input seed bytes to derive from.\n///\n/// ## Returns\n///\n///  An array of field elements derived from the seed (the limbs of the big_num)\npub(crate) unconstrained fn __derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [u128; N] {\n    let out = derive_from_seed::<N, MOD_BITS, SeedBytes>(params, seed);\n    out\n}\n\npub(crate) unconstrained fn __eq<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> bool {\n    lhs == rhs\n}\n\npub(crate) unconstrained fn __is_zero<let N: u32>(limbs: [u128; N]) -> bool {\n    let mut result: bool = true;\n    for i in 0..N {\n        result = result & (limbs[i] == 0);\n    }\n\n    result\n}\n\n/**\n* @brief given an input `x`, compute `2p - x` (unconstrained)\n*\n* @description we subtract the input from double the modulus, because all constrained BigNum operations\n*              only guarantee that the output is in the range [0, ceil(log2(p))].\n*              I.E. the input may be larger than the modulus `p`.\n*              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n*              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n*              because such a check is expensive and usually unneccesary.\n*/\npub(crate) unconstrained fn __neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    limbs: [u128; N],\n) -> [u128; N] {\n    let f: [u128; N] = limbs;\n    __helper_sub(params.modulus, f)\n}\n\npub(crate) unconstrained fn __add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (lhs[i] + rhs[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    // check if the result is greater than the modulus\n    if __gte(result, params.modulus) {\n        __helper_sub(result, params.modulus)\n    } else {\n        result\n    }\n}\n\n/**\n* @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n* @description see `__neg` for why we use 2p instead of p\n**/\npub(crate) unconstrained fn __sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    __add(params, lhs, __neg(params, rhs))\n}\n\npub(crate) unconstrained fn __mul_with_quotient<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut mul: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..N {\n        for j in 0..N {\n            mul[i + j] += (lhs[i] as Field * rhs[j] as Field);\n        }\n    }\n    let to_reduce: [u128; (N * 2)] = split_bits::__normalize_limbs(mul, 2 * N);\n    let (q, r) = __barrett_reduction(to_reduce, params.redc_param, MOD_BITS, params.modulus);\n    // ([0; N], [0; N])\n    (q, r)\n}\n\npub(crate) unconstrained fn __mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let (_, b) = __mul_with_quotient::<_, MOD_BITS>(params, lhs, rhs);\n    b\n}\n\npub(crate) unconstrained fn __div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    let inv_divisor: [u128; N] = __invmod::<_, MOD_BITS>(params, divisor);\n    __mul::<_, MOD_BITS>(params, numerator, inv_divisor)\n}\n\n/**\n* @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) unconstrained fn __udiv_mod<let N: u32>(\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut quotient: [u128; N] = [0; N];\n    let mut remainder: [u128; N] = numerator;\n\n    let b = divisor;\n    let numerator_msb = __get_msb(numerator);\n    let divisor_msb = __get_msb(divisor);\n    if divisor_msb > numerator_msb {\n        ([0; N], numerator)\n    } else {\n        let mut bit_difference = __get_msb(remainder) - __get_msb(divisor);\n        let mut accumulator: [u128; N] = __one();\n        let mut divisor = __shl(divisor, bit_difference);\n        accumulator = __shl(accumulator, bit_difference);\n\n        if (__gte(divisor, __increment(remainder))) {\n            divisor = __shr1(divisor);\n            accumulator = __shr1(accumulator);\n        }\n\n        for _ in 0..(N * 120) {\n            if (__gte(remainder, b) == false) {\n                break;\n            }\n            // we've shunted 'divisor' up to have the same bit length as our remainder.\n            // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n            if (__gte(remainder, divisor)) {\n                remainder = __helper_sub(remainder, divisor);\n                // we can use OR here instead of +, as\n                // accumulator is always a nice power of two\n                quotient = __helper_add(quotient, accumulator);\n            }\n            divisor = __shr1(divisor); // >>= 1;\n            accumulator = __shr1(accumulator); //  >>= 1;\n        }\n\n        (quotient, remainder)\n    }\n}\n\npub(crate) unconstrained fn __invmod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [u128; N] {\n    let one = __one();\n    let exp = __helper_sub(params.modulus, __helper_add(one, one));\n    __pow::<_, MOD_BITS>(params, val, exp)\n}\n\npub(crate) unconstrained fn __pow<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n    exponent: [u128; N],\n) -> [u128; N] {\n    let x = exponent;\n    let num_bits = MOD_BITS + 1;\n\n    let mut accumulator: [u128; N] = __one::<N>();\n\n    for i in 0..num_bits {\n        accumulator = __mul::<_, MOD_BITS>(params, accumulator, accumulator);\n        if __get_bit(x, num_bits - i - 1) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, val);\n        }\n    }\n    accumulator\n}\n\npub(crate) unconstrained fn __batch_invert<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]; M],\n) -> [[u128; N]; M] {\n    // TODO: ugly! Will fail if input slice is empty\n\n    let mut accumulator: [u128; N] = __one::<N>();\n    let mut temporaries: [[u128; N]; M] = std::mem::zeroed();\n\n    for i in 0..M {\n        temporaries[i] = accumulator;\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    let mut result: [[u128; N]; M] = [[0; N]; M];\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    for i in 0..M {\n        let idx = M - 1 - i;\n        if (!__is_zero(x[idx])) {\n            let T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result[idx] = T0;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __batch_invert_slice<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]],\n) -> [[u128; N]] {\n    // TODO: ugly! Will fail if input slice is empty\n    let mut accumulator: [u128; N] = __one::<N>();\n    let mut temporaries: [[u128; N]] = &[];\n    for i in 0..x.len() {\n        temporaries = temporaries.push_back(accumulator);\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    let mut result: [[u128; N]] = [];\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    for i in 0..x.len() {\n        let idx = x.len() - 1 - i;\n        if (!__is_zero(x[idx])) {\n            let T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result = result.push_front(T0);\n        } else {\n            result = result.push_front([0; N]);\n        };\n    }\n\n    result\n}\n\n/**\n* @brief compute a modular square root using the Tonelli-Shanks algorithm\n* @details only use for prime fields! Function may infinite loop if used for non-prime fields\n* @note this is unconstrained fn. To constrain a square root, validate that output^2 = self\n* TODO: create fn that constrains nonexistence of square root (i.e. find x where x^2 = -self)\n**/\npub(crate) unconstrained fn __tonelli_shanks_sqrt<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    input: [u128; N],\n) -> std::option::Option<[u128; N]> {\n    // Tonelli-shanks algorithm begins by finding a field element Q and integer S,\n    // such that (p - 1) = Q.2^{s}\n    // We can compute the square root of a, by considering a^{(Q + 1) / 2} = R\n    // Once we have found such an R, we have\n    // R^{2} = a^{Q + 1} = a^{Q}a\n    // If a^{Q} = 1, we have found our square root.\n    // Otherwise, we have a^{Q} = t, where t is a 2^{s-1}'th root of unity.\n    // This is because t^{2^{s-1}} = a^{Q.2^{s-1}}.\n    // We know that (p - 1) = Q.w^{s}, therefore t^{2^{s-1}} = a^{(p - 1) / 2}\n    // From Euler's criterion, if a is a quadratic residue, a^{(p - 1) / 2} = 1\n    // i.e. t^{2^{s-1}} = 1\n    // To proceed with computing our square root, we want to transform t into a smaller subgroup,\n    // specifically, the (s-2)'th roots of unity.\n    // We do this by finding some value b,such that\n    // (t.b^2)^{2^{s-2}} = 1 and R' = R.b\n    // Finding such a b is trivial, because from Euler's criterion, we know that,\n    // for any quadratic non-residue z, z^{(p - 1) / 2} = -1\n    // i.e. z^{Q.2^{s-1}} = -1\n    // => z^Q is a 2^{s-1}'th root of -1\n    // => z^{Q^2} is a 2^{s-2}'th root of -1\n    // Since t^{2^{s-1}} = 1, we know that t^{2^{s - 2}} = -1\n    // => t.z^{Q^2} is a 2^{s - 2}'th root of unity.\n    // We can iteratively transform t into ever smaller subgroups, until t = 1.\n    // At each iteration, we need to find a new value for b, which we can obtain\n    // by repeatedly squaring z^{Q}\n    let one = __one();\n    let primitive_root_log_size = __primitive_root_log_size::<_, MOD_BITS>(params);\n    let Q = __shr(\n        __helper_sub(params.modulus, one),\n        primitive_root_log_size - 1,\n    );\n    let two = __helper_add(one, one);\n    let Q_minus_one_over_two = __shr(__helper_sub(Q, two), 2);\n    let mut z = __multiplicative_generator::<_, MOD_BITS>(params); // the generator is a non-residue\n    let mut b = __pow::<_, MOD_BITS>(params, input, Q_minus_one_over_two);\n    let mut r = __mul::<_, MOD_BITS>(params, input, b);\n    let mut t = __mul::<_, MOD_BITS>(params, r, b);\n    let mut check: [u128; N] = t;\n    for _ in 0..primitive_root_log_size - 1 {\n        check = __mul::<_, MOD_BITS>(params, check, check);\n    }\n    let mut result = Option::none();\n    if (__eq(check, one)) {\n        let mut t1 = __pow::<_, MOD_BITS>(params, z, Q_minus_one_over_two);\n        let mut t2 = __mul::<_, MOD_BITS>(params, t1, z);\n        let mut c = __mul::<_, MOD_BITS>(params, t2, t1);\n        let mut m: u32 = primitive_root_log_size;\n        // tonelli shanks inner 1\n        // (if t2m == 1) then skip\n        // else increase i and square t2m and go again\n        // algorithm runtime should only be max the number of bits in modulus\n        for _ in 0..MOD_BITS {\n            if (__eq(t, one)) {\n                result = Option::some(r);\n                break;\n            }\n            let mut t2m = t;\n            // while loop time\n            let i = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, 0);\n            let mut j = m - i - 1;\n            b = c;\n            for _ in 0..j {\n                // how big\n                if (j == 0) {\n                    break;\n                }\n                b = __mul(params, b, b);\n                //j -= 1;\n            }\n            c = __mul::<_, MOD_BITS>(params, b, b);\n            t = __mul::<_, MOD_BITS>(params, t, c);\n            r = __mul::<_, MOD_BITS>(params, r, b);\n            m = i;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __gte<let N: u32, let MOD_BITS: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> bool {\n    let mut result = false;\n    let mut early_exit = false;\n    for i in 0..(N) {\n        let idx = (N) - 1 - i;\n        if (rhs[idx] == lhs[idx]) {\n            continue;\n        }\n\n        result = rhs[idx] < lhs[idx];\n        early_exit = true;\n        break;\n    }\n    if early_exit {\n        result\n    } else {\n        lhs[0] == rhs[0]\n    }\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/unconstrained_ops.nr"},"105":{"source":"pub struct BigNumParams<let N: u32, let MOD_BITS: u32> {\n    pub has_multiplicative_inverse: bool,\n\n    // @brief modulus: all BigNum operations are evaluated modulo this value\n    pub modulus: [u128; N],\n\n    // @brief double_modulus: used when performing negations and subtractions\n    // @note we borrow 1 from the last limb. This is for easing up the operations that might underflow\n    pub double_modulus: [u128; N],\n\n    // @brief redc_param used for __barrett_reduction. See https://en.wikipedia.org/wiki/Barrett_reduction\n    pub redc_param: [u128; N],\n}\n\n// To be implemented by the user for any BigNum they define, or within the predefined BigNums in the `fields/` dir.\npub trait BigNumParamsGetter<let N: u32, let MOD_BITS: u32> {\n    fn get_params() -> BigNumParams<N, MOD_BITS>;\n}\n\nimpl<let N: u32, let MOD_BITS: u32> BigNumParams<N, MOD_BITS> {\n    pub fn new(\n        has_multiplicative_inverse: bool,\n        modulus: [u128; N],\n        redc_param: [u128; N],\n    ) -> Self {\n        Self {\n            has_multiplicative_inverse,\n            modulus,\n            double_modulus: get_double_modulus(modulus),\n            redc_param,\n        }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::cmp::Eq for BigNumParams<N, MOD_BITS> {\n    fn eq(self, other: Self) -> bool {\n        (self.has_multiplicative_inverse == other.has_multiplicative_inverse)\n            & (self.modulus == other.modulus)\n            & (self.double_modulus == other.double_modulus)\n            & (self.redc_param == other.redc_param)\n    }\n}\n\nfn get_double_modulus<let N: u32>(modulus: [u128; N]) -> [u128; N] {\n    let TWO_POW_120: u128 = 0x1000000000000000000000000000000;\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (modulus[i] + modulus[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n\n    result[0] += TWO_POW_120;\n    for i in 1..N - 1 {\n        result[i] += (TWO_POW_120 - 1);\n    }\n    result[N - 1] -= 1;\n    result\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/params.nr"},"106":{"source":"use crate::params::BigNumParams;\nuse crate::utils::map::map;\n\nuse crate::fns::{\n    constrained_ops::{\n        add, assert_is_not_equal, conditional_select, derive_from_seed, div, eq, is_zero, mul, neg,\n        sub, udiv, udiv_mod, umod, validate_in_field, validate_in_range,\n    },\n    expressions::{__compute_quadratic_expression, evaluate_quadratic_expression},\n    serialization::{from_be_bytes, to_le_bytes},\n    unconstrained_ops::{\n        __add, __batch_invert, __batch_invert_slice, __derive_from_seed, __div, __eq, __invmod,\n        __is_zero, __mul, __neg, __pow, __sub, __tonelli_shanks_sqrt, __udiv_mod,\n    },\n};\nuse std::ops::Neg;\n\npub struct RuntimeBigNum<let N: u32, let MOD_BITS: u32> {\n    pub limbs: [u128; N],\n    pub params: BigNumParams<N, MOD_BITS>,\n}\n\n// All functions prefixed `__` are unconstrained!\n// They're not actually decorated as `unconstrained` because to return the `params` (as part of Self) from an `unconstrained` fn would cause range constraints. Instead, each `__` fn wraps a call to an unconstrained fn, so that the already-range-constrained `params` can be inserted into Self after the unconstrained call.\nimpl<let N: u32, let MOD_BITS: u32> RuntimeBigNum<N, MOD_BITS> {\n\n    pub fn zero(params: BigNumParams<N, MOD_BITS>) -> Self {\n        let limbs: [u128; N] = [0; N];\n        Self { limbs, params }\n    }\n\n    pub fn one(params: BigNumParams<N, MOD_BITS>) -> Self {\n        let mut result = RuntimeBigNum::zero(params);\n        result.limbs[0] = 1;\n        result\n    }\n\n    pub fn derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self {\n        let limbs = derive_from_seed::<_, MOD_BITS, _>(params, seed);\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub unconstrained fn __derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self {\n        let limbs = __derive_from_seed::<_, MOD_BITS, _>(params, seed);\n        Self { limbs, params }\n    }\n\n    pub fn from_slice(params: BigNumParams<N, MOD_BITS>, limbs: [u128]) -> Self {\n        Self { limbs: limbs.as_array(), params }\n    }\n\n    pub fn from_array(params: BigNumParams<N, MOD_BITS>, limbs: [u128; N]) -> Self {\n        Self { limbs, params }\n    }\n\n    pub fn from_be_bytes<let NBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        x: [u8; NBytes],\n    ) -> Self {\n        Self { limbs: from_be_bytes::<_, MOD_BITS, _>(x), params }\n    }\n\n    pub fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes] {\n        to_le_bytes::<_, MOD_BITS, _>(self.limbs)\n    }\n\n    pub fn modulus(self) -> Self {\n        let params = self.params;\n        Self { limbs: params.modulus, params }\n    }\n\n    pub fn modulus_bits() -> u32 {\n        MOD_BITS\n    }\n\n    pub fn num_limbs() -> u32 {\n        N\n    }\n\n    // fn get(self) -> [Field] {\n    //     self.get_limbs()\n    // }\n\n    pub fn get_limbs(self) -> [u128; N] {\n        self.limbs\n    }\n\n    pub fn get_limb(self, idx: u32) -> u128 {\n        self.limbs[idx]\n    }\n\n    pub fn set_limb(&mut self, idx: u32, value: u128) {\n        self.limbs[idx] = value;\n    }\n\n    pub unconstrained fn __eq(self, other: Self) -> bool {\n        assert(self.params == other.params);\n        __eq(self.limbs, other.limbs)\n    }\n\n    pub unconstrained fn __is_zero(self) -> bool {\n        __is_zero(self.limbs)\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __neg(self) -> Self {\n        let params = self.params;\n        let limbs = unsafe { __neg(params, self.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __add(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __add(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __sub(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __sub(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __mul(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __mul::<_, MOD_BITS>(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __div(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        let limbs = unsafe { __div::<_, MOD_BITS>(params, self.limbs, divisor.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = self.params;\n        assert(params == divisor.params);\n        let (q, r) = unsafe { __udiv_mod(self.limbs, divisor.limbs) };\n        (Self { limbs: q, params }, Self { limbs: r, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __invmod(self) -> Self {\n        let params = self.params;\n        assert(params.has_multiplicative_inverse);\n        let limbs = unsafe { __invmod::<_, MOD_BITS>(params, self.limbs) };\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __pow(self, exponent: Self) -> Self {\n        let params = self.params;\n        assert(params == exponent.params);\n        let limbs = unsafe { __pow::<_, MOD_BITS>(params, self.limbs, exponent.limbs) };\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __batch_invert<let M: u32>(x: [Self; M]) -> [Self; M] {\n        let params = x[0].params;\n        assert(params.has_multiplicative_inverse);\n        let all_limbs =\n            unsafe { __batch_invert::<_, MOD_BITS, _>(params, x.map(|bn| Self::get_limbs(bn))) };\n        all_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // Note: can't return a slice from this unconstrained to a constrained function.\n    pub unconstrained fn __batch_invert_slice<let M: u32>(x: [Self]) -> [Self] {\n        let params = x[0].params;\n        assert(params.has_multiplicative_inverse);\n        let all_limbs = {\n            let inv_slice =\n                __batch_invert_slice::<_, MOD_BITS>(params, x.map(|bn| Self::get_limbs(bn)));\n            inv_slice.as_array()\n        };\n        all_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self> {\n        let params = self.params;\n        let maybe_limbs = unsafe { __tonelli_shanks_sqrt(params, self.limbs) };\n        maybe_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) -> (Self, Self) {\n        let (q_limbs, r_limbs) = unsafe {\n            __compute_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n                params,\n                map(lhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n                lhs_flags,\n                map(rhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n                rhs_flags,\n                map(linear_terms, |bn| Self::get_limbs(bn)),\n                linear_flags,\n            )\n        };\n        (Self { limbs: q_limbs, params }, Self { limbs: r_limbs, params })\n    }\n\n    pub fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) {\n        evaluate_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n            params,\n            map(lhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n            lhs_flags,\n            map(rhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n            rhs_flags,\n            map(linear_terms, |bn| Self::get_limbs(bn)),\n            linear_flags,\n        )\n    }\n\n    pub fn validate_in_field(self: Self) {\n        let params = self.params;\n        validate_in_field::<_, MOD_BITS>(params, self.limbs);\n    }\n\n    pub fn validate_in_range(self) {\n        validate_in_range::<_, _, MOD_BITS>(self.limbs);\n    }\n\n    pub fn assert_is_not_equal(self, other: Self) {\n        let params = self.params;\n        assert(params == other.params);\n        assert_is_not_equal(params, self.limbs, other.limbs);\n    }\n\n    pub fn udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = self.params;\n        assert(params == divisor.params);\n        let (q, r) = udiv_mod::<_, MOD_BITS>(params, self.limbs, divisor.limbs);\n        (Self { limbs: q, params }, Self { limbs: r, params })\n    }\n\n    pub fn udiv(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: udiv::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n\n    pub fn umod(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: umod::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n\n    pub fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        let params = lhs.params;\n        assert(params == rhs.params);\n        Self { limbs: conditional_select(lhs.limbs, rhs.limbs, predicate), params }\n    }\n\n    pub fn is_zero(self) -> bool {\n        is_zero::<N, MOD_BITS>(self.limbs)\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Add for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn add(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: add::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Sub for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn sub(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: sub::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Mul for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: mul::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Div for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: div::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> Neg for RuntimeBigNum<N, MOD_BITS> {\n    fn neg(self) -> Self {\n        let params = self.params;\n        Self { limbs: neg::<_, MOD_BITS>(params, self.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::cmp::Eq for RuntimeBigNum<N, MOD_BITS> {\n    fn eq(self, other: Self) -> bool {\n        let params = self.params;\n        assert(params == other.params);\n        eq::<_, MOD_BITS>(params, self.limbs, other.limbs)\n    }\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/runtime_bignum.nr"},"113":{"source":"use crate::constants::TWO_POW_120;\n\nunconstrained fn split_120_bits(mut x: Field) -> (u128, u128) {\n    // Here we're taking advantage of truncating 128 bit limbs from the input field\n    // and then subtracting them from the input such that the field division is equivalent to integer division.\n    let low = (x as u128) % TWO_POW_120;\n    let high = ((x - low as Field) / TWO_POW_120 as Field) as u128;\n    (low, high)\n}\n\npub(crate) unconstrained fn __normalize_limbs<let N: u32>(\n    input: [Field; N],\n    range: u32,\n) -> [u128; N] {\n    let mut normalized: [u128; N] = [0; N];\n    let mut next: Field = input[0];\n    for i in 0..(range - 1) {\n        let (lo, hi) = split_120_bits(next);\n        normalized[i] = lo as u128;\n        next = input[i + 1] + hi as Field;\n    }\n    {\n        let (lo, hi) = split_120_bits(next);\n        normalized[range - 1] = lo as u128;\n        assert(hi == 0);\n    }\n    normalized\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/utils/split_bits.nr"},"131":{"source":"use std::hash::sha256_compression;\nuse std::runtime::is_unconstrained;\n\nuse constants::{\n    BLOCK_BYTE_PTR, BLOCK_SIZE, HASH, INITIAL_STATE, INT_BLOCK, INT_BLOCK_SIZE, INT_SIZE,\n    INT_SIZE_PTR, MSG_BLOCK, MSG_SIZE_PTR, STATE, TWO_POW_16, TWO_POW_24, TWO_POW_32, TWO_POW_8,\n};\n\nmod constants;\nmod tests;\n\n// Implementation of SHA-256 mapping a byte array of variable length to\n// 32 bytes.\n\n// Deprecated in favour of `sha256_var`\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> HASH\n// docs:end:sha256\n{\n    digest(input)\n}\n\n// SHA-256 hash function\n#[no_predicates]\npub fn digest<let N: u32>(msg: [u8; N]) -> HASH {\n    sha256_var(msg, N as u64)\n}\n\n// Variable size SHA-256 hash\npub fn sha256_var<let N: u32>(msg: [u8; N], message_size: u64) -> HASH {\n    let message_size = message_size as u32;\n    assert(message_size <= N);\n\n    if std::runtime::is_unconstrained() {\n        // Safety: SHA256 is running as an unconstrained function.\n        unsafe {\n            __sha256_var(msg, message_size)\n        }\n    } else {\n        let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n        // Intermediate hash, starting with the canonical initial value\n        let mut h: STATE = INITIAL_STATE;\n        // Pointer into msg_block on a 64 byte scale\n        let mut msg_byte_ptr = 0;\n        let num_blocks = N / BLOCK_SIZE;\n        for i in 0..num_blocks {\n            let msg_start = BLOCK_SIZE * i;\n            let (new_msg_block, new_msg_byte_ptr) =\n                unsafe { build_msg_block(msg, message_size, msg_start) };\n\n            if msg_start < message_size {\n                msg_block = new_msg_block;\n            }\n\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n\n            // If the block is filled, compress it.\n            // An un-filled block is handled after this loop.\n            if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n                h = sha256_compression(msg_block, h);\n            }\n        }\n\n        let modulo = N % BLOCK_SIZE;\n        // Handle setup of the final msg block.\n        // This case is only hit if the msg is less than the block size,\n        // or our message cannot be evenly split into blocks.\n        if modulo != 0 {\n            let msg_start = BLOCK_SIZE * num_blocks;\n            let (new_msg_block, new_msg_byte_ptr) =\n                unsafe { build_msg_block(msg, message_size, msg_start) };\n\n            if msg_start < message_size {\n                msg_block = new_msg_block;\n            }\n\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n                verify_msg_block_padding(msg_block, msg_byte_ptr);\n            }\n        }\n\n        // If we had modulo == 0 then it means the last block was full,\n        // and we can reset the pointer to zero to overwrite it.\n        if msg_byte_ptr == BLOCK_SIZE {\n            msg_byte_ptr = 0;\n        }\n\n        // Pad the rest such that we have a [u32; 2] block at the end representing the length\n        // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n        // Here we rely on the fact that everything beyond the available input is set to 0.\n        let index = msg_byte_ptr / INT_SIZE;\n        msg_block[index] = set_item_byte_then_zeros(msg_block[index], msg_byte_ptr, 1 << 7);\n\n        msg_byte_ptr = msg_byte_ptr + 1;\n        let last_block = msg_block;\n\n        // If we don't have room to write the size, compress the block and reset it.\n        if msg_byte_ptr > MSG_SIZE_PTR {\n            h = sha256_compression(msg_block, h);\n            // `attach_len_to_msg_block` will zero out everything after the `msg_byte_ptr`.\n            msg_byte_ptr = 0;\n        }\n\n        msg_block = unsafe { attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size) };\n\n        verify_msg_len(msg_block, last_block, msg_byte_ptr, message_size);\n\n        hash_final_block(msg_block, h)\n    }\n}\n\n// Variable size SHA-256 hash\nunconstrained fn __sha256_var<let N: u32>(msg: [u8; N], message_size: u32) -> HASH {\n    let num_full_blocks = message_size / BLOCK_SIZE;\n    // Intermediate hash, starting with the canonical initial value\n    let mut h: STATE = INITIAL_STATE;\n    // Pointer into msg_block on a 64 byte scale\n    for i in 0..num_full_blocks {\n        let (msg_block, _) = build_msg_block(msg, message_size, BLOCK_SIZE * i);\n        h = sha256_compression(msg_block, h);\n    }\n\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    let modulo = message_size % BLOCK_SIZE;\n    let (mut msg_block, mut msg_byte_ptr): (INT_BLOCK, u32) = if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_full_blocks;\n        let (new_msg_block, new_msg_byte_ptr) = build_msg_block(msg, message_size, msg_start);\n\n        (new_msg_block, new_msg_byte_ptr)\n    } else {\n        // If we had modulo == 0 then it means the last block was full,\n        // and we can reset the pointer to zero to overwrite it.\n        ([0; INT_BLOCK_SIZE], 0)\n    };\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    // Here we rely on the fact that everything beyond the available input is set to 0.\n    let index = msg_byte_ptr / INT_SIZE;\n    msg_block[index] = set_item_byte_then_zeros(msg_block[index], msg_byte_ptr, 1 << 7);\n\n    // If we don't have room to write the size, compress the block and reset it.\n    let (h, mut msg_byte_ptr): (STATE, u32) = if msg_byte_ptr >= MSG_SIZE_PTR {\n        // `attach_len_to_msg_block` will zero out everything after the `msg_byte_ptr`.\n        (sha256_compression(msg_block, h), 0)\n    } else {\n        (h, msg_byte_ptr + 1)\n    };\n    msg_block = attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size);\n\n    hash_final_block(msg_block, h)\n}\n\n// Take `BLOCK_SIZE` number of bytes from `msg` starting at `msg_start`.\n// Returns the block and the length that has been copied rather than padded with zeros.\nunconstrained fn build_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_start: u32,\n) -> (MSG_BLOCK, BLOCK_BYTE_PTR) {\n    let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if message_size < msg_start {\n        // This function is sometimes called with `msg_start` past the end of the message.\n        // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n        0\n    } else if message_size < msg_start + BLOCK_SIZE {\n        message_size - msg_start\n    } else {\n        BLOCK_SIZE\n    };\n\n    // Figure out the number of items in the int array that we have to pack.\n    // e.g. if the input is [0,1,2,3,4,5] then we need to pack it as 2 items: [0123, 4500]\n    let mut int_input = block_input / INT_SIZE;\n    if block_input % INT_SIZE != 0 {\n        int_input = int_input + 1;\n    };\n\n    for i in 0..int_input {\n        let mut msg_item: u32 = 0;\n        // Always construct the integer as 4 bytes, even if it means going beyond the input.\n        for j in 0..INT_SIZE {\n            let k = i * INT_SIZE + j;\n            let msg_byte = if k < block_input {\n                msg[msg_start + k]\n            } else {\n                0\n            };\n            msg_item = lshift8(msg_item, 1) + msg_byte as u32;\n        }\n        msg_block[i] = msg_item;\n    }\n\n    // Returning the index as if it was a 64 byte array.\n    // We have to project it down to 16 items and bit shifting to get a byte back if we need it.\n    (msg_block, block_input)\n}\n\n// Verify the block we are compressing was appropriately constructed by `build_msg_block`\n// and matches the input data. Returns the index of the first unset item.\n// If `message_size` is less than `msg_start` then this is called with the old non-empty block;\n// in that case we can skip verification, ie. no need to check that everything is zero.\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: MSG_BLOCK,\n    msg_start: u32,\n) -> BLOCK_BYTE_PTR {\n    let mut msg_byte_ptr = 0;\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n    // We might have to go beyond the input to pad the fields.\n    if msg_end % INT_SIZE != 0 {\n        msg_end = msg_end + INT_SIZE - msg_end % INT_SIZE;\n    }\n\n    // Reconstructed packed item.\n    let mut msg_item: u32 = 0;\n\n    // Inclusive at the end so that we can compare the last item.\n    let mut i: u32 = 0;\n    for k in msg_start..=msg_end {\n        if k % INT_SIZE == 0 {\n            // If we consumed some input we can compare against the block.\n            if (msg_start < message_size) & (k > msg_start) {\n                assert_eq(msg_block[i], msg_item as u32);\n                i = i + 1;\n                msg_item = 0;\n            }\n        }\n        // Shift the accumulator\n        msg_item = lshift8(msg_item, 1);\n        // If we have input to consume, add it at the rightmost position.\n        if k < message_size & k < msg_end {\n            msg_item = msg_item + msg[k] as u32;\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\n// Verify the block we are compressing was appropriately padded with zeros by `build_msg_block`.\n// This is only relevant for the last, potentially partially filled block.\nfn verify_msg_block_padding(msg_block: MSG_BLOCK, msg_byte_ptr: BLOCK_BYTE_PTR) {\n    // Check all the way to the end of the block.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_BLOCK_SIZE);\n}\n\n// Verify that a region of ints in the message block are (partially) zeroed,\n// up to an (exclusive) maximum which can either be the end of the block\n// or just where the size is to be written.\nfn verify_msg_block_zeros(\n    msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    max_int_byte_ptr: u32,\n) {\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // First integer which is supposed to be (partially) zero.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        let zeros = INT_SIZE - modulo;\n        let mask = if zeros == 3 {\n            TWO_POW_24\n        } else if zeros == 2 {\n            TWO_POW_16\n        } else {\n            TWO_POW_8\n        };\n        assert_eq(msg_block[int_byte_ptr] % mask, zero);\n        int_byte_ptr = int_byte_ptr + 1;\n    }\n\n    // Check the rest of the items.\n    for i in 0..max_int_byte_ptr {\n        if i >= int_byte_ptr {\n            assert_eq(msg_block[i], zero);\n        }\n    }\n}\n\n// Verify that up to the byte pointer the two blocks are equal.\n// At the byte pointer the new block can be partially zeroed.\nfn verify_msg_block_equals_last(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n) {\n    // msg_byte_ptr is the position at which they are no longer have to be the same.\n    // First integer which is supposed to be (partially) zero contains that pointer.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Reconstruct the partially zero item from the last block.\n        let last_field = last_block[int_byte_ptr];\n        let mut msg_item: u32 = 0;\n        // Reset to where they are still equal.\n        msg_byte_ptr = msg_byte_ptr - modulo;\n        for i in 0..INT_SIZE {\n            msg_item = lshift8(msg_item, 1);\n            if i < modulo {\n                msg_item = msg_item + get_item_byte(last_field, msg_byte_ptr) as u32;\n                msg_byte_ptr = msg_byte_ptr + 1;\n            }\n        }\n        assert_eq(msg_block[int_byte_ptr], msg_item);\n    }\n\n    for i in 0..INT_SIZE_PTR {\n        if i < int_byte_ptr {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n    }\n}\n\n// Set the rightmost `zeros` number of bytes to 0.\n#[inline_always]\nfn set_item_zeros(item: u32, zeros: u8) -> u32 {\n    lshift8(rshift8(item, zeros), zeros)\n}\n\n// Replace one byte in the item with a value, and set everything after it to zero.\nfn set_item_byte_then_zeros(msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR, msg_byte: u8) -> u32 {\n    let zeros = INT_SIZE - msg_byte_ptr % INT_SIZE;\n    let zeroed_item = set_item_zeros(msg_item, zeros as u8);\n    let new_item = byte_into_item(msg_byte, msg_byte_ptr);\n    zeroed_item + new_item\n}\n\n// Get a byte of a message item according to its overall position in the `BLOCK_SIZE` space.\nfn get_item_byte(mut msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR) -> u8 {\n    // How many times do we have to shift to the right to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    msg_item = rshift8(msg_item, shifts as u8);\n    // At this point the byte we want is in the rightmost position.\n    msg_item as u8\n}\n\n// Project a byte into a position in a field based on the overall block pointer.\n// For example putting 1 into pointer 5 would be 100, because overall we would\n// have [____, 0100] with indexes [0123,4567].\n#[inline_always]\nfn byte_into_item(msg_byte: u8, msg_byte_ptr: BLOCK_BYTE_PTR) -> u32 {\n    let mut msg_item = msg_byte as u32;\n    // How many times do we have to shift to the left to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    lshift8(msg_item, shifts as u8)\n}\n\n// Construct a field out of 4 bytes.\n#[inline_always]\nfn make_item(b0: u8, b1: u8, b2: u8, b3: u8) -> u32 {\n    let mut item = b0 as u32;\n    item = lshift8(item, 1) + b1 as u32;\n    item = lshift8(item, 1) + b2 as u32;\n    item = lshift8(item, 1) + b3 as u32;\n    item\n}\n\n// Shift by 8 bits to the left between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise multiplies by 256.\n#[inline_always]\nfn lshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        // Brillig wouldn't shift 0<<4 without overflow.\n        if shifts >= 4 {\n            0\n        } else {\n            item << (8 * shifts)\n        }\n    } else {\n        // We can do a for loop up to INT_SIZE or an if-else.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item * TWO_POW_8\n        } else if shifts == 2 {\n            item * TWO_POW_16\n        } else if shifts == 3 {\n            item * TWO_POW_24\n        } else {\n            // Doesn't make sense, but it's most likely called on 0 anyway.\n            0\n        }\n    }\n}\n\n// Shift by 8 bits to the right between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise divides by 256.\nfn rshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        item >> (8 * shifts)\n    } else {\n        // Division wouldn't work on `Field`.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item / TWO_POW_8\n        } else if shifts == 2 {\n            item / TWO_POW_16\n        } else if shifts == 3 {\n            item / TWO_POW_24\n        } else {\n            0\n        }\n    }\n}\n\n// Zero out all bytes between the end of the message and where the length is appended,\n// then write the length into the last 8 bytes of the block.\nunconstrained fn attach_len_to_msg_block(\n    mut msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) -> MSG_BLOCK {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 bits (i.e. until msg_byte_ptr = 56).\n    // There can be one item which has to be partially zeroed.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Index of the block in which we find the item we need to partially zero.\n        let i = msg_byte_ptr / INT_SIZE;\n        let zeros = INT_SIZE - modulo;\n        msg_block[i] = set_item_zeros(msg_block[i], zeros as u8);\n        msg_byte_ptr = msg_byte_ptr + zeros;\n    }\n\n    // The rest can be zeroed without bit shifting anything.\n    for i in (msg_byte_ptr / INT_SIZE)..INT_SIZE_PTR {\n        msg_block[i] = 0;\n    }\n\n    // Set the last two 4 byte ints as the first/second half of the 8 bytes of the length.\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..=1 {\n        let shift = i * 4;\n        msg_block[INT_SIZE_PTR + i] = make_item(\n            len_bytes[shift],\n            len_bytes[shift + 1],\n            len_bytes[shift + 2],\n            len_bytes[shift + 3],\n        );\n    }\n    msg_block\n}\n\n// Verify that the message length was correctly written by `attach_len_to_msg_block`,\n// and that everything between the byte pointer and the size pointer was zeroed,\n// and that everything before the byte pointer was untouched.\nfn verify_msg_len(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) {\n    // Check zeros up to the size pointer.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_SIZE_PTR);\n\n    // Check that up to the pointer we match the last block.\n    verify_msg_block_equals_last(msg_block, last_block, msg_byte_ptr);\n\n    // We verify the message length was inserted correctly by reversing the byte decomposition.\n    let mut reconstructed_len: u64 = 0;\n    for i in INT_SIZE_PTR..INT_BLOCK_SIZE {\n        reconstructed_len = reconstructed_len * TWO_POW_32;\n        reconstructed_len = reconstructed_len + msg_block[i] as u64;\n    }\n    let len = 8 * message_size as u64;\n    assert_eq(reconstructed_len, len);\n}\n\n// Perform the final compression, then transform the `STATE` into `HASH`.\nfn hash_final_block(msg_block: MSG_BLOCK, mut state: STATE) -> HASH {\n    let mut out_h: HASH = [0; 32]; // Digest as sequence of bytes\n    // Hash final padded block\n    state = sha256_compression(msg_block, state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[j] as Field).to_be_bytes();\n        for k in 0..4 {\n            out_h[4 * j + k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n\nmod equivalence_test {\n\n    #[test]\n    fn test_implementations_agree(msg: [u8; 100], message_size: u64) {\n        let message_size = message_size % 100;\n        let unconstrained_sha = unsafe { super::__sha256_var(msg, message_size as u32) };\n        let sha = super::sha256_var(msg, message_size);\n        assert_eq(sha, unconstrained_sha);\n    }\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/sha256/v0.1.2/src/sha256.nr"},"134":{"source":"use dep::bignum::RuntimeBigNum;\n\n/**\n * @brief Compare a recovered byte hash from an RSA signature to the original message hash\n * @details Taken from https://github.com/richardliang/noir-rsa\n **/\nfn compare_signature_sha256<let N: u32>(padded_sha256_hash: [u8; N], msg_hash: [u8; 32]) -> bool {\n    // Get length of sig (e.g. 1048 = 128 bytes, 2048 = 256 bytes)\n    // NOTE: Assume MAX_BYTES < 2^32 bit number. MAX_BYTES of 259 > 2^8 bits so need to cast it to u32\n    for i in 0..32 {\n        // Padded hash is reversed\n        assert(padded_sha256_hash[31 - i] == msg_hash[i]);\n    }\n\n    let hash_prefix: [u8; 19] =\n        [32, 4, 0, 5, 1, 2, 4, 3, 101, 1, 72, 134, 96, 9, 6, 13, 48, 49, 48];\n\n    for i in 32..51 {\n        assert(hash_prefix[i - 32] == padded_sha256_hash[i]);\n    }\n\n    assert(padded_sha256_hash[51] == 0);\n\n    // Sub 32 bytes for hash, 19 bytes for prefix, 1 byte for 0, 1 byte for 1, 1 byte for 0\n    let ps_len = N - 54;\n    for i in 52..N {\n        if i < 52 + ps_len {\n            // PS padding which depends on RSA modulus / sig length. 1024 bits = 128 bytes = 128 - 54 = 74 bytes of 0xFF padding\n            assert(padded_sha256_hash[i] == 255);\n        } else if i == 52 + ps_len {\n            // Pad 0x01\n            assert(padded_sha256_hash[i] == 1);\n        } else if i == 53 + ps_len {\n            // 0x00\n            assert(padded_sha256_hash[i] == 0);\n        } else {\n            // Padded with 0 until MAX_BYTES\n            assert(padded_sha256_hash[i] == 0);\n        }\n    }\n\n    true\n}\n\n/**\n * @brief Verify an RSA signature generated via the pkcs1v15 signature scheme.\n * @note The `exponent` can be either 65537 or 3 (i.e. the most common values in use for RSA)\n * Rough cost: 2,048 bit RSA: 26,888 gates per verification\n *             1,024 bit RSA: 11,983 gates per verification\n * A circuit that verifies 1 signature (and does nothing else) will cost ~32k due to initialization costs of lookup tables\n **/\npub fn verify_sha256_pkcs1v15<let NumLimbs: u32, let ModBits: u32>(\n    msg_hash: [u8; 32],\n    sig: RuntimeBigNum<NumLimbs, ModBits>,\n    exponent: u32,\n) -> bool {\n    assert((exponent == 3) | (exponent == 65537), \"Exponent must be 65537 or 3\");\n    let mut exponentiated = sig * sig; // sig^2\n    if exponent == 65537 {\n        // e = 65537 = 1 0000 0000 0000 0001\n        exponentiated = exponentiated * exponentiated; // sig^4\n        exponentiated = exponentiated * exponentiated; // sig^8\n        exponentiated = exponentiated * exponentiated; // sig^16\n        exponentiated = exponentiated * exponentiated; // sig^32\n        exponentiated = exponentiated * exponentiated; // sig^64\n        exponentiated = exponentiated * exponentiated; // sig^128\n        exponentiated = exponentiated * exponentiated; // sig^256\n        exponentiated = exponentiated * exponentiated; // sig^512\n        exponentiated = exponentiated * exponentiated; // sig^1024\n        exponentiated = exponentiated * exponentiated; // sig^2048\n        exponentiated = exponentiated * exponentiated; // sig^4096\n        exponentiated = exponentiated * exponentiated; // sig^8192\n        exponentiated = exponentiated * exponentiated; // sig^16384\n        exponentiated = exponentiated * exponentiated; // sig^32768\n        exponentiated = exponentiated * exponentiated; // sig^65536\n    }\n    // otherwise, e = 3 = 11\n    exponentiated = exponentiated * sig; // either sig^2 * sig = sig^3 or sig^65536 * sig = sig^65537\n    let mut padded_sha256_hash_bytes: [u8; (ModBits + 7) / 8] = exponentiated.to_le_bytes();\n    compare_signature_sha256(padded_sha256_hash_bytes, msg_hash)\n}\n\nmod tests {\n\n    use crate::types::RBN2048;\n    use super::verify_sha256_pkcs1v15;\n    use bignum::params::BigNumParams;\n    use bignum::RuntimeBigNum;\n\n    #[test]\n    fn test_verify_sha256_pkcs1v15_1024() {\n        // Output of `cargo run -- --msg \"hello world! test#123\" --bits 1024` in the `signature_gen` directory\n        let sha256_hash: [u8; 32] = [\n            220, 155, 229, 143, 122, 133, 55, 215, 75, 44, 132, 111, 57, 33, 248, 84, 213, 170, 193,\n            96, 253, 57, 124, 13, 251, 42, 92, 147, 105, 172, 233, 85,\n        ];\n\n        let params: BigNumParams<9, 1024> = BigNumParams::new(\n            false,\n            [\n                0xab238ad9cb37979a43aefbf10be8fb,\n                0x31347febe45fe8c2dac1dd30900704,\n                0xa5a9a6b9cd0cc2b9d13bbd4e068263,\n                0x5eac6390f7873fe97ff9bb14a173ea,\n                0xbc41f700c91fd733a2c63177bbdbd4,\n                0x41442bd58769a3595b659a2ec9c6be,\n                0x4ddc91395f330382aa2e2d3fbe147,\n                0x3d008ff255a0bc71c7887f5728ba1,\n                0xb640c3a8f511c64e,\n            ],\n            [\n                0x5d53d2634c6a0918266043968ce263,\n                0x5dd4be3dce0323a492ee9340aec4db,\n                0xf82d0e2e5c8319f01a460c72c01854,\n                0x236e6fc6e62e8a1d522acda5fb3892,\n                0xdaf755619d66e580901aa224d03174,\n                0x8366291616480e7e1f202dbcedda87,\n                0x40ba1202537d1e94561ccc05265586,\n                0x69b993d857ba89ea5de9822aeb4b93,\n                0x167968c0000761a273,\n            ],\n        );\n\n        let signature: RuntimeBigNum<9, 1024> = RuntimeBigNum {\n            params,\n            limbs: [\n                0xc3850e84ea02da3f028ff422f4d6a9,\n                0x9761f0bd9021f76d45c60df0670a19,\n                0xc1ede421a43607ab623ed4d5a17fc8,\n                0x86197b4315206f4d53200b42555831,\n                0xe95783b69db28c26a83706f39d04cd,\n                0x18b178dc1a9ec76fb22b57e4dfa703,\n                0xdd0e19cd5a09ab48e7af4d0e3470e3,\n                0x10004dfab1cf91304e80e6baa4dfc7,\n                0x241c3fd77b90adef,\n            ],\n        };\n\n        assert(verify_sha256_pkcs1v15(sha256_hash, signature, 65537));\n    }\n\n    #[test]\n    fn test_verify_sha256_pkcs1v15_2048() {\n        // Output of `cargo run -- --msg \"Hello World! This is Noir-RSA\"` in the `signature_gen` directory\n        let sha256_hash: [u8; 32] = [\n            91, 207, 46, 60, 22, 153, 217, 144, 2, 127, 224, 143, 181, 45, 32, 120, 122, 131, 166,\n            79, 166, 183, 43, 158, 116, 105, 73, 207, 196, 77, 33, 5,\n        ];\n\n        let params: BigNumParams<18, 2048> = BigNumParams::new(\n            false,\n            [\n                0x8d5e7d9daedd6cfd1c9bdf0227e05b,\n                0xbfb937fc4d3cf02cc0af780f3cab44,\n                0xd20637ef7adcf5d238ee87bccc9bca,\n                0xb9db4f2663108e2f8b673f7612ae8b,\n                0x85f894ef669b36bfd3d86b0a28873,\n                0xdcc70e1884e38b8229cce3b884121d,\n                0x35488d1138e0b03e1676f7f5d8a5b3,\n                0xe1a97820e7dcbb4eab35c9b71bb273,\n                0x97d19eb3c63249ddbfcff915863f54,\n                0x3a78c7af6da0f6af0d67b1ca4b6065,\n                0xd7a3c433c020f624821e5e678c7d69,\n                0x52d5b53240feae82ffea3d2a3d9b09,\n                0xb8aad5e19e2163f68997c6fdd71906,\n                0x5db432d06e8b0bf59511100c7894e2,\n                0xadc0bbc4c54da10d1cc88438ea3127,\n                0xece1cf6a1501109cd2734d5893c8d9,\n                0x7196b90acdf06c31b1288064fd0c27,\n                0xc8,\n            ],\n            [\n                0x1b1deccf4dbde852c34a5d6908a0f,\n                0xbc9e5bdab22f023fbcca58692bccf5,\n                0x1f65439685623e45396ff55751c3bf,\n                0x2b6ad2c5f8e3aac15d0ccbab816bfa,\n                0x5ca2e8e3048243c16c708a8030ab0d,\n                0x30079bfeb1fa51e5501581173ca19c,\n                0xff8d5f6bea485fdcc2716327f69ab4,\n                0x36b599d81589416b5b5f037986b999,\n                0x75612e34a4ff29f0a19a7823512f58,\n                0x288b6897929b54c3b26a5faa07c00f,\n                0x4b5675fa13ab7444f1f047d3eb1bbe,\n                0x6ba0ac610ef9f267ab30fe25bb1c84,\n                0xa386b48ee03168d5cea3ecb9dc901f,\n                0xacf1a01f7dba44e050c976142fb1f6,\n                0x97a63b5cb7efc60d3502946aec63cf,\n                0x12cc1d5cab10a1e9e2398d29b9e3ef,\n                0x4635cf25c66e76bba8034df46204fb,\n                0x146f,\n            ],\n        );\n\n        let signature: RuntimeBigNum<18, 2048> = RuntimeBigNum {\n            params,\n            limbs: [\n                0xad29e07d16a278de49a371b9760a27,\n                0x86311920cc0e17a3c20cdff4c56dbb,\n                0x863556c6c5247dd83668dd825716ae,\n                0xc247c960945f4485b46c33b87425ca,\n                0x7326463c5c4cd5b08e21b938d9ed9a,\n                0x4f89fe0c82da08a0259eddb34d0da1,\n                0x43a74e76d4e1bd2666f1591889af0d,\n                0x240f7b80f0ff29f4253ee3019f832d,\n                0xc6edd131fbaaf725fd423dac52b362,\n                0x85f9732679242163e8afff44f6104d,\n                0xd3c3bbcb1757013fd6fb80f31dd9a6,\n                0x9008633f15df440e6df6d21ee585a2,\n                0x324df3425ed256e283be5b6b761741,\n                0xc60c1302929bd0e07caa4aeff4e8fd,\n                0x600d804ff13ba8d0e1bc9508714212,\n                0x50f7e75e5751d7edd61167027926be,\n                0x0db41d39442023e1420a8a84fe81d9,\n                0xab,\n            ],\n        };\n        assert(verify_sha256_pkcs1v15(sha256_hash, signature, 65537));\n    }\n\n    #[test]\n    fn test_verify_sha256_pkcs1v15_2048_exponent_3() {\n        // Output of `cargo run -- --msg \"hello world\" -e 3` in the `signature_gen` directory\n        let sha256_hash: [u8; 32] = [\n            185, 77, 39, 185, 147, 77, 62, 8, 165, 46, 82, 215, 218, 125, 171, 250, 196, 132, 239,\n            227, 122, 83, 128, 238, 144, 136, 247, 172, 226, 239, 205, 233,\n        ];\n\n        let params: BigNumParams<18, 2048> = BigNumParams::new(\n            false,\n            [\n                0xe40ee47801326543c8e84b85d567c1,\n                0x5b54ea87f0ce29de1995697b0696fd,\n                0x457078f8fdce68b437cac0970b2452,\n                0x473ec776fee3731b6ab06e35875ddc,\n                0x62dedd594e5f12c80c3ccb5791a6cd,\n                0xecb934b9d8272c5e3a418145345499,\n                0xd1af643b3d785470ed0c6cd633f706,\n                0xb58a57b9e96eccbdfc7c17f0333d4,\n                0x2ebd34b5039fc596504927c282c60d,\n                0x3a44928a74f25fc1043bb37ce4dfa8,\n                0x91448459f9617fac33a2816162ac9e,\n                0x70cb910d9f3e1a78864640ec6c8240,\n                0x9aed33f6b31f1c9de67248a98c180,\n                0x7f1416e032c79488c94b311e87bd9c,\n                0x7191b4ebb1b3fffa949fa48ed01e5,\n                0x350a75cbaeca6bfdd71ca83cdbcae9,\n                0xfb1d274fa207457c6814d42c09f9cf,\n                0xd4,\n            ],\n            [\n                0x803bf4d38110a7d37fdd05f590dee9,\n                0xa68d317c933f37cab5ab4e7c00a3b9,\n                0x476a05a536bf5f2aa1b8850146cba7,\n                0xca297ea8b5528d91d4836ff27c30ab,\n                0x75cf2eaab76eefa12bbd570f1aea9f,\n                0x8f6a8ab877d9c5bcd98c37bdc5c2d3,\n                0xd497db1f6ebe83decacaa647fabea6,\n                0x686b27ca330e25e7a7cf197f6433ef,\n                0xfde04d2225c8308b07580af0058a0f,\n                0xa29fb69777c0e916976243b2b09855,\n                0xf983592285852e7e1c2cb3ae968323,\n                0x673608017f9f5acf67a01b73728d70,\n                0xeeff82521c0bc432a05f4b7444fac0,\n                0x85a89c4d229f60aaa3aa7ac7dac1e2,\n                0xcfecff93bc9fbfe0d6dff6091f2db8,\n                0xf20f047dcb224b4447bd098c07f8c2,\n                0x554bb53cadeb3eaab911a189f90227,\n                0x133b,\n            ],\n        );\n\n        let signature: RuntimeBigNum<18, 2048> = RuntimeBigNum {\n            params,\n            limbs: [\n                0xa250eff812c63eaaeaa3f04641c05f,\n                0xecc09613cb8b289c1f37c8f92e6a05,\n                0x2c0a0510058360c07af65d46f594fd,\n                0x943d67513363d3de430c94a1dafe7c,\n                0x511ec8e9b10bc6c6ff0d6c232ccf92,\n                0x50ffd07b3c093b3f5fc027de847731,\n                0xc268e1489449943fdafdf89ff168c3,\n                0x0b8b7f9f49b492f78fda58d252f23a,\n                0x491c6c4ef836a6a8730b7bf81e865e,\n                0x8746c75fb079d014e419543f56d7f0,\n                0x65804c417d6168a8bc0025d255cebf,\n                0xf695e91b77890b8e3fd775fa56e627,\n                0x5e90001c0218550f4083ae28025a2f,\n                0x526bd4eff34f25f62a698f0470e0a6,\n                0x7f224306a7d9daf536b1559434c6c6,\n                0x88809f16fe1fcea3c87511d9319735,\n                0x7694685fee0bfab4a9196b92ec6f2e,\n                0xa7,\n            ],\n        };\n\n        assert(verify_sha256_pkcs1v15(sha256_hash, signature, 3));\n    }\n\n    #[test]\n    fn smoke_test() {\n        // Output of `cargo run -- --msg \"hello world\"` in the `signature_gen` directory\n        // Create runtime params:\n        let modulus_limbs = [\n            0x65af46d235241cf0e8fbe8cff4abb7,\n            0xeead39ba3f377ddd5ccb2ef2085190,\n            0xe483f94c0a98e8b618d92fb926f596,\n            0x1fa8c1b2c62cca6db090cd74a29db2,\n            0xc38e22042fcb74585a7e535301f50f,\n            0xcbc4378e5212752743ae78a75a44a9,\n            0xf5acc41788d9a346a0f75630a8b2b6,\n            0xf7a741bb3ecf1aadd5a327f362abd8,\n            0x4d5f24e815db43a1b2cc2ba40f8715,\n            0xe501f1a01305cb198475a4bff0da2e,\n            0xd541b78cfbc2b314083c340840c82c,\n            0xa0ab069c26b2a0458f4c642bf72526,\n            0x2ccb676d8f22517116fee0d2340533,\n            0x7cf2a7cf772025c0a83747bbc18228,\n            0xf9475f17988a56f17b3bdf88dc72dc,\n            0x4ff228bee24415fae7a7c05771e830,\n            0x55acd96b485515c38906106cf0d189,\n            0xb9,\n        ];\n        let redc_limbs = [\n            0x172c8f156f020ad88d30fa3ba47f03,\n            0x1740a43a67cb9a7be1ac1422d77246,\n            0x2d967be1edf369834317e04856e591,\n            0x65d9fa0de5fdab598c04d9a515156a,\n            0xc6791a661ea7621db7e6c4ec48f466,\n            0xa4a1a7c06d3e8a0bcbc540c6af6788,\n            0xdcaffeb149f5bf646caa00d7355715,\n            0xb75471630a9d0fefb5cb61e66991a1,\n            0x97c041a0fc30fdff3d5ed16997da02,\n            0xbfbe7d217694b269e1ed37819c2f17,\n            0x1b44ffc3180531e2ab8bdf7848a3a9,\n            0x9f004af11132cb68bb55998ed7616a,\n            0x1b15dbbb96ce80f479724bbd768a0c,\n            0x59ba1419093ae6ed2592ffb3065867,\n            0xa35b69affa3bb3f4713f315e50b584,\n            0xa873210f83a6de0d8cbb816af3e37,\n            0xbe4fe7cf98da87ec87638030797e92,\n            0x1619,\n        ];\n\n        let signature_limbs = [\n            0x2f397c4611d4a4271453e1e50e1578,\n            0xe506a7f47c721a4943783e8ad459e6,\n            0x6cc4ae1d91cb381cba9673470999fb,\n            0x1e127364d07f94e58227f50fbf5687,\n            0xf64a2579c7189f882d68832d16faa4,\n            0x3b014b74c6c6f76f2f8af170fa0fe4,\n            0x7df41e68c86815a6fdc33968c66b67,\n            0x6a57ac06282527242fddb6ed08dbdc,\n            0xac40d37b819c4b6193f90a634e4fc7,\n            0x96606ed166a7f032d858cd40ac73a5,\n            0x8eb7d4351159a46733f92610d5c597,\n            0xc8e8e9faa9738e82dbe774a3f5cf07,\n            0x89ca84fd54ee3d5cca87c9f178375e,\n            0xdb7a1465fc76507ea498a351af70dd,\n            0x6ac6fe14f51c711f983125c776f712,\n            0x3254c17fef51bf4194a8a1674634e3,\n            0xee38c83c77c6e1ff7b70a5d9d1dd0f,\n            0x26,\n        ];\n\n        let hash: [u8; 32] = [\n            0xb9, 0x4d, 0x27, 0xb9, 0x93, 0x4d, 0x3e, 0x08, 0xa5, 0x2e, 0x52, 0xd7, 0xda, 0x7d,\n            0xab, 0xfa, 0xc4, 0x84, 0xef, 0xe3, 0x7a, 0x53, 0x80, 0xee, 0x90, 0x88, 0xf7, 0xac,\n            0xe2, 0xef, 0xcd, 0xe9,\n        ];\n\n        let has_multiplicative_inverse = false;\n        let params: BigNumParams<18, 2048> =\n            BigNumParams::new(has_multiplicative_inverse, modulus_limbs, redc_limbs);\n\n        let signature: RBN2048 = RBN2048::from_array(params, signature_limbs);\n\n        assert(verify_sha256_pkcs1v15(hash, signature, 65537));\n    }\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir_rsa/v0.7.0/src/rsa.nr"},"136":{"source":"mod utils;\n\npub use utils::{conditional_select, DebugRandomEngine, lt_f};\nuse std::collections::bounded_vec::BoundedVec;\n\n/**\n * @brief represents a byte-array of up to MaxBytes, that is used as a \"haystack\" array,\n *        where we want to validate a substring \"needle\" is present in the \"haystack\"\n * @details the \"body\" parameter contains some input bytes, zero-padded to the nearest multiple of 31\n *          We pack \"bytes\" into 31-byte \"chunks\", as this is the maximum number of bytes we can fit\n *          into a field element without overflowing.\n *          TODO: once we can derive generics via arithmetic on other generics, we want this \"31\" parameter\n *          to be defined by the backend being used instead of being hardcoded to 31\n *\n * @note We perform this 31-byte packing because it dramatically reduces the number of constraints required for substring matching. See (chicken)\n *\n * @tparam MaxBytes: the maximum number of bytes that StringBody can contain\n * @tparam MaxPaddedBytes: the maximum number of bytes after zero-padding to the nearest multiple of 31\n * @tparam PaddedChunks: the number of 31-byte chunks needed to represent MaxPaddedBytes\n **/\npub struct StringBody<let MaxPaddedBytes: u32, let PaddedChunks: u32, let MaxBytes: u32> {\n    pub body: [u8; MaxPaddedBytes],\n    chunks: [Field; PaddedChunks],\n    pub byte_length: u32,\n}\n\n/**\n * @brief represents a byte-array of up to MaxBytes, that is used as a \"needle\" array,\n *        where we want to validate a substring \"needle\" is present in the \"haystack\"\n * @tparam MaxBytes: the maximum number of bytes that StringBody can contain\n * @tparam MaxPaddedBytes: the maximum number of bytes after zero-padding to the nearest multiple of 31\n * @tparam PaddedChunksMinusOne: the number of 31-byte chunks needed to represent MaxPaddedBytes minus one!\n *\n * @note PaddedChunksMinusOne is because we are going to do the following:\n *                            1. align the SubString bytes according to the StringBody bytes being matched against\n *                            2. split the aligned bytes into 31-byte chunks. The 1st and last chunks might contain\n *                               fewer than 31 bytes due to the above alignment\n *                            3. validate the aligned-byte-chunks match the StringBody byte chunks\n *       To account for the fact that the 1st and last chunks might have fewer bytes we treat those separately\n *       The param PaddedChunksMinusOne is the number of 31-byte chunks required to represent SubString *EXCLUDING* the initial and final chunks\n */\npub struct SubString<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> {\n    pub body: [u8; MaxPaddedBytes],\n    pub byte_length: u32,\n}\n\npub type StringBody32 = StringBody<62, 2, 32>;\npub type StringBody64 = StringBody<93, 3, 64>;\npub type StringBody128 = StringBody<155, 5, 128>;\npub type StringBody256 = StringBody<279, 9, 256>;\npub type StringBody512 = StringBody<527, 17, 512>;\npub type StringBody1024 = StringBody<1054, 34, 1024>;\npub type StringBody2048 = StringBody<2077, 67, 2048>;\npub type StringBody4096 = StringBody<4123, 133, 4096>;\npub type StringBody8192 = StringBody<8215, 265, 8192>;\npub type StringBody16384 = StringBody<16399, 529, 16384>;\n\npub type SubString32 = SubString<62, 1, 32>;\npub type SubString64 = SubString<93, 2, 64>;\npub type SubString128 = SubString<155, 4, 128>;\npub type SubString256 = SubString<279, 8, 256>;\npub type SubString512 = SubString<527, 16, 512>;\npub type SubString1024 = SubString<1054, 33, 1024>;\n\npub trait SubStringTrait {\n    fn match_chunks<let HaystackChunks: u32>(\n        self,\n        haystack: [Field; HaystackChunks],\n        num_bytes_in_first_chunk: Field,\n        body_chunk_offset: Field,\n        num_full_chunks: Field,\n    );\n\n    fn len(self) -> u32;\n    fn get(self, idx: Field) -> u8;\n    fn get_body(self) -> [u8];\n}\n\n// ######################################################\n// S U B S T R I N G\n// ######################################################\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> SubString<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n\n    /**\n     * @brief construct a SubString object from an input byte array\n     * @details the input byte array must have a number of bytes less than or equal to MaxBytes\n     **/\n    pub fn new<let InputBytes: u32>(input: [u8; InputBytes], input_length: u32) -> Self {\n        assert(MaxBytes <= MaxPaddedBytes);\n        assert(input_length <= MaxBytes);\n        assert(InputBytes <= MaxBytes);\n        let mut body: [u8; MaxPaddedBytes] = [0; MaxPaddedBytes];\n        for i in 0..InputBytes {\n            body[i] = input[i];\n        }\n        SubString { body, byte_length: input_length }\n    }\n\n    /**\n     * @brief concatenate two SubString objects together\n     * @details each SubString can have different MaxBytes sizes, however we need OtherBytes <= MaxBytes\n     *          (use concat_into for cases where this is not the case)\n     **/\n    pub fn concat<let OtherPaddedBytes: u32, let OtherPaddedChunks: u32, let OtherMaxBytes: u32>(\n        self,\n        other: SubString<OtherPaddedBytes, OtherPaddedChunks, OtherMaxBytes>,\n    ) -> Self {\n        assert(\n            OtherPaddedBytes <= MaxPaddedBytes,\n            \"SubString::concat. SubString being concatted has larger max length. Try calling concat_into\",\n        );\n        assert(\n            self.byte_length + other.byte_length <= MaxPaddedBytes,\n            \"SubString::concat, concatenated string exceeds MaxPaddedBytes\",\n        );\n        let mut body = self.body;\n        let offset: u32 = self.byte_length;\n        for i in 0..MaxPaddedBytes {\n            if (i + offset < MaxPaddedBytes) {\n                body[i + offset] = other.body[i];\n            }\n        }\n        SubString { body, byte_length: self.byte_length + other.byte_length }\n    }\n\n    /**\n     * @brief concatenate two SubString objects together. Return type has OtherPaddedBytes max bytes\n     * @details each SubString can have different MaxBytes sizes, however we need MaxBytes <= OtherBytes\n     *          (use concat for cases where this is not the case)\n     **/\n    pub fn concat_into<let OtherPaddedBytes: u32, let OtherPaddedChunks: u32, let OtherMaxBytes: u32>(\n        self,\n        other: SubString<OtherPaddedBytes, OtherPaddedChunks, OtherMaxBytes>,\n    ) -> SubString<OtherPaddedBytes, OtherPaddedChunks, OtherMaxBytes> {\n        assert(\n            MaxPaddedBytes <= OtherPaddedBytes,\n            \"SubString::concat_into. SubString being concat has larger max length. Try calling concat\",\n        );\n        assert(\n            self.byte_length + other.byte_length <= OtherPaddedBytes,\n            \"SubString::concat_into, concatenated string exceeds MaxPaddedBytes\",\n        );\n        let mut body: [u8; OtherPaddedBytes] = [0; OtherPaddedBytes];\n        for i in 0..MaxBytes {\n            body[i] = self.body[i];\n        }\n\n        let offset: u32 = self.byte_length;\n        for i in 0..OtherPaddedBytes {\n            if (i + offset < OtherPaddedBytes) {\n                body[i + offset] = other.body[i];\n            }\n        }\n        SubString { body, byte_length: self.byte_length + other.byte_length }\n    }\n}\n\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> SubStringTrait for SubString<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n\n    fn len(self) -> u32 {\n        self.byte_length\n    }\n    fn get(self, idx: Field) -> u8 {\n        self.body[idx as u32]\n    }\n    fn get_body(self) -> [u8] {\n        let x = self.body.as_slice();\n        x\n    }\n\n    /**\n     * @brief given some `haystack` 31-byte chunks, validate that there exist `num_full_chunks`\n     *        in the SubString, starting at byte position `starting_needle_byte`.\n     *        The selected chunks must be equal to the haystack chunks starting at `starting_haystack_chunk`\n     **/\n    fn match_chunks<let HaystackChunks: u32>(\n        self,\n        haystack: [Field; HaystackChunks],\n        starting_needle_byte: Field,\n        starting_haystack_chunk: Field,\n        num_full_chunks: Field,\n    ) {\n        let mut substring_chunks: [Field; PaddedChunksMinusOne] = [0; PaddedChunksMinusOne];\n        // pack the substring into 31 byte chunks.\n        // This is fairly expensive as we need a ROM table to access the SubString.body\n        // which is 2 gates per byte\n        for i in 0..PaddedChunksMinusOne {\n            let mut slice: Field = 0;\n            for j in 0..31 {\n                slice *= 256;\n                let substring_idx = starting_needle_byte as Field + (i as Field * 31) + j as Field;\n                let mut byte = self.body[substring_idx];\n                slice += byte as Field;\n            }\n            std::as_witness(slice);\n            substring_chunks[i] = slice;\n        }\n        // iterate over the needle chunks and validate they match the haystack chunks\n        for i in 0..PaddedChunksMinusOne {\n            let predicate: Field = lt_f(i as Field, num_full_chunks) as Field;\n            let lhs = substring_chunks[i];\n            let rhs = haystack[predicate as Field * (i as Field + starting_haystack_chunk)];\n            assert(predicate * (lhs - rhs) == 0);\n        }\n    }\n}\n\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> From<BoundedVec<u8, MaxBytes>> for SubString<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n    fn from(input: BoundedVec<u8, MaxBytes>) -> Self {\n        Self::new(input.storage(), input.len() as u32)\n    }\n}\n\n// ######################################################\n// S T R I N G   B O D Y\n// ######################################################\nimpl<let MaxPaddedBytes: u32, let PaddedChunks: u32, let MaxBytes: u32> StringBody<MaxPaddedBytes, PaddedChunks, MaxBytes> {\n\n    /**\n     * @brief construct a StringBody object from an input byte array\n     * @details the input byte array must have a number of bytes less than or equal to MaxBytes\n     **/\n    pub fn new<let InputBytes: u32>(data: [u8; InputBytes], length: u32) -> Self {\n        assert(length <= MaxBytes);\n        assert(length <= InputBytes);\n        let mut body: [u8; MaxPaddedBytes] = [0; MaxPaddedBytes];\n        for i in 0..InputBytes {\n            body[i] = data[i];\n        }\n        StringBody { body, chunks: compute_chunks(body), byte_length: length }\n    }\n\n    /**\n     * @brief Validate a substring exists in the StringBody. Returns a success flag and the position within the StringBody that the match was found\n     **/\n    pub fn substring_match<NeedleSubString>(self, substring: NeedleSubString) -> (bool, u32)\n    where\n        NeedleSubString: SubStringTrait,\n    {\n        // use unconstrained function to determine:\n        // a: is the substring present in the body text\n        // b: the position of the first match in the body text\n        let position: u32 = unsafe {\n            // Safety: The rest of this function checks this.\n            utils::search(\n                self.body,\n                substring.get_body(),\n                self.byte_length,\n                substring.len(),\n            )\n        };\n\n        assert(\n            position + substring.len() <= self.byte_length,\n            \"substring not present in main text (match found if a padding text included. is main text correctly formatted?)\",\n        );\n        let substring_length = substring.len();\n\n        // chunk_index = which 31-byte haystack chunk does the needle begin in?\n        let chunk_index: u32 = position / 31;\n        // chunk_offset = how many haystack bytes are present in the 1st haystack chunk?\n        let chunk_offset: u32 = position % 31;\n        // how many needle bytes are in 1st haystack chunk?\n        let num_bytes_in_first_chunk: u32 = 31 - chunk_offset;\n        let mut starting_needle_byte_index_of_final_chunk: Field = 0;\n        let mut chunk_index_of_final_haystack_chunk_with_matching_needle_bytes: Field = 0;\n        let mut num_full_chunks = 0;\n\n        // is there only one haystack chunk that contains needle bytes?\n        let merge_initial_final_needle_chunks =\n            lt_f(substring_length as Field, num_bytes_in_first_chunk as Field);\n\n        // if the above is false...\n        if (!merge_initial_final_needle_chunks) {\n            // compute how many full 31-byte haystack chunks contain 31 needle bytes\n            num_full_chunks = (substring_length - num_bytes_in_first_chunk) / 31;\n            // for the final haystack chunk that contains needle bytes, where in the needle does this chunk begin?\n            starting_needle_byte_index_of_final_chunk =\n                num_full_chunks as Field * 31 + num_bytes_in_first_chunk as Field;\n\n            // what is the index of the final haystack chunk that contains needle bytes?\n            chunk_index_of_final_haystack_chunk_with_matching_needle_bytes =\n                num_full_chunks as Field + chunk_index as Field + 1;\n        } else {\n            starting_needle_byte_index_of_final_chunk = 0;\n            // if the needle bytes does NOT span more than 1 haystack chunk,\n            // the final haystack index will be the same as the initial haystack index\n            chunk_index_of_final_haystack_chunk_with_matching_needle_bytes = chunk_index as Field;\n        }\n\n        // To minimize the number of comparisons between the haystack bytes and the needle bytes,\n        // we pack both the haystack bytes and needle bytes into 31-byte Field \"chunks\" and compare chunks.\n        // To do this correctly, we need to align the needle chunks with the haystack chunks\n        /*\n            e.g. consider a toy example where we pack 3 bytes into a chunk\n            haystack: [VWXZYABCDEQRSTU]\n            needle: [ABCDE]\n        when constructing needle chunks, we need to align according to where the needle is located in the haystack\n            haystack chunks:   [VWX] [ZYA] [BCD] [EQR] [STU]\n                                      _..   ...   .__\n            processed needle chunks: [ZYA] [BCD] [EQR]\n        a \"_\" symbole means that a chunk byte has been sourced from the haystack bytes,\n            a \".\" symbol means a byte is sourced from the needle bytes\n        Both the initial and final chunks of the processed needle are \"composite\" constructions.\n            If chunk byte index < `position` or is > `position + needle length\", byte is sourced from haystack, otherwise byte is sourced from needle\n        The way we execute this in code is to define an \"initial\" needle chunk and a \"final\" needle chunk.\n            Num needle bytes in initial chunk = position % 31\n            Num needle bytes in final chunk = (needle_length - (position % 31)) % 31\n        If needle_length < 31 then the \"initial\" and \"final\" chunks\n            are actually the *same* chunk and we must perform a merge operation\n            (see later in algo for comments)\n        */\n        // instead of directly reading haystack bytes, we derive the bytes from the haystack chunks.\n        // This way we don't have to instantiate the haystack bytes as a ROM table, which would cost 2 * haystack.length gates\n        let offset_to_first_needle_byte_in_chunk: Field = chunk_offset as Field;\n        let initial_haystack_chunk = self.chunks[chunk_index];\n        let final_haystack_chunk =\n            self.chunks[chunk_index_of_final_haystack_chunk_with_matching_needle_bytes];\n\n        let initial_body_bytes: [u8; 31] = initial_haystack_chunk.to_be_bytes();\n        let final_body_bytes: [u8; 31] = final_haystack_chunk.to_be_bytes();\n\n        // When defining the initial chunk bytes, we can represent as Field elements as we are deriving values from known bytes.\n        // This saves us a few gates\n        let mut initial_chunk: [Field; 31] = [0; 31];\n        let mut final_chunk: [Field; 31] = [0; 31];\n        for i in 0..31 {\n            // if i < offset_to_first_needle_byte_in_chunk, we read from the haystack\n            // otherwise we read from the needle\n            // n.b. this can be done with an if statement, but the following code produces fewer constraints\n            let idx: Field = i as Field;\n            let predicate: Field = lt_f(i as Field, offset_to_first_needle_byte_in_chunk) as Field;\n            let lhs: Field = initial_body_bytes[i] as Field;\n            // if i < offset_to_first_needle_byte_in_chunk then `idx - offset_to_first_needle_byte_in_chunk` is negative\n            // to ensure we access array correctly we need to set the lookup index to 0 if predicate = 0\n            let substring_idx = (1 - predicate) * (idx - offset_to_first_needle_byte_in_chunk);\n            let rhs: Field = substring.get(substring_idx) as Field;\n            let byte: Field = predicate * (lhs - rhs) + rhs;\n            initial_chunk[i] = byte;\n        }\n\n        // If `merge_initial_final_needle_chunks = true`, `final_chunk` will contain the full needle data,\n        // this requires some complex logic to determine where we are sourcing the needle bytes from.\n        // Either they come from the `initial_chunk`, the haystack bytes or the substring bytes.\n        for i in 0..31 {\n            let mut lhs_index: Field =\n                starting_needle_byte_index_of_final_chunk as Field + i as Field;\n            let predicate = lt_f(lhs_index, substring_length as Field);\n            /*\n                | merge_initial_final_needle_chunks | predicate | byte_source              |\n                | false                             | false     | body_bytes[i]            |\n                | false                             | true      | substring[lhs_idx]       |\n                | true                              | false     | body_bytes[i]            |\n                | true                              | true      | initial_chunk[lhs_index] |\n            NOTE: if `merge = true` and `predicate = true`, we read from `initial_chunk` to short-circuit some extra logic.\n                      if `initial_chunk` did not exist, then we would need to validate whether `i < offset_to_first_needle_byte_in_chunk`.\n                      if true, the byte source would be body_bytes, otherwise the source would be substring bytes\n            */\n            let substring_idx = (predicate as Field) * lhs_index;\n            let byte_from_substring = substring.get(substring_idx) as Field;\n            let byte_from_initial_chunk = initial_chunk[i] as Field;\n            let byte_from_haystack = final_body_bytes[i] as Field;\n\n            // TODO: find out why this cuts 1 gate per iteration\n            std::as_witness(byte_from_initial_chunk);\n\n            let p = predicate as Field;\n            let m = merge_initial_final_needle_chunks as Field;\n            // p * (m * (a - b) + (b - c)) + c\n            let ab = byte_from_initial_chunk - byte_from_substring;\n            std::as_witness(ab);\n            let bc = byte_from_substring - byte_from_haystack;\n            let t0 = m * ab + bc;\n            let destination_byte = p * t0 + byte_from_haystack;\n\n            final_chunk[i] = destination_byte;\n        }\n\n        // TODO: moving this above the previous code block adds 31 gates. find out why? :/\n        let mut initial_needle_chunk: Field = 0;\n        let mut final_needle_chunk: Field = 0;\n\n        // Construct the initial and final needle chunks from the byte arrays we previously built.\n        // Validate they match the initial and final haystack chunks\n        for i in 0..31 {\n            initial_needle_chunk *= 256;\n            initial_needle_chunk += initial_chunk[i];\n            final_needle_chunk *= 256;\n            final_needle_chunk += final_chunk[i];\n        }\n\n        std::as_witness(initial_needle_chunk);\n        std::as_witness(final_needle_chunk);\n\n        initial_needle_chunk = merge_initial_final_needle_chunks as Field\n            * (final_needle_chunk - initial_needle_chunk)\n            + initial_needle_chunk;\n        assert(initial_needle_chunk == initial_haystack_chunk);\n        assert(final_needle_chunk == final_haystack_chunk);\n\n        // Step 3: Construct needle chunks (for all but the 1st and last chunks) and validate they match the haystack chunks.\n        //         This part is much simpler as we know that all bytes in the chunk are sourced from the needle chunk.\n        // NOTE:   If we chose to not pack bytes into 31-byte chunks, the string matching algorithm would be simpler but more expensive.\n        //         Instead of matching chunks with each other, we would match individual byte values.\n        //         i.e. the number of iterations in this loop would be 31x greater\n        //         each loop iteration would also require a predicate, to check whether the byte index was within the needle range or not\n        //         Combined these two operations would add about 10 gates per loop iteration,\n        //         combined with a 31x iteration length would make this algorithm much more costly than the chunked variant\n        let body_chunk_offset: Field = chunk_index as Field + 1;\n        substring.match_chunks(\n            self.chunks,\n            num_bytes_in_first_chunk as Field,\n            body_chunk_offset,\n            num_full_chunks as Field,\n        );\n        (true, position)\n    }\n}\n\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> From<BoundedVec<u8, MaxBytes>> for StringBody<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n    fn from(input: BoundedVec<u8, MaxBytes>) -> Self {\n        Self::new(input.storage(), input.len() as u32)\n    }\n}\n\n/// Given an input byte array, convert into 31-byte chunks\n///\n/// Cost: ~0.5 gates per byte\nfn compute_chunks<let MaxPaddedBytes: u32, let PaddedChunks: u32>(\n    body: [u8; MaxPaddedBytes],\n) -> [Field; PaddedChunks] {\n    let mut chunks: [Field; PaddedChunks] = [0; PaddedChunks];\n    for i in 0..PaddedChunks {\n        let mut limb: Field = 0;\n        for j in 0..31 {\n            limb *= 256;\n            limb += body[i * 31 + j] as Field;\n        }\n        chunks[i] = limb;\n        std::as_witness(chunks[i]);\n    }\n    chunks\n}\n\n#[test]\nfn test() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        .as_bytes();\n    let needle_text = \" dolor in reprehenderit in voluptate velit esse\".as_bytes();\n\n    let mut haystack: StringBody512 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString64 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_small_needle() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        .as_bytes();\n    let needle_text = \"olor\".as_bytes();\n    let mut haystack: StringBody512 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString32 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_needle_aligned_on_byte_boundary() {\n    let haystack_text = \"the quick brown fox jumped over the lazy dog\".as_bytes();\n    let needle_text = \" the lazy dog\".as_bytes();\n\n    let mut haystack: StringBody256 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString256 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_needle_haystack_equal_size() {\n    let haystack_text =\n        \"the quick brown fox jumped over the lazy dog lorem ipsum blahhhh\".as_bytes();\n    let needle_text = \"the quick brown fox jumped over the lazy dog lorem ipsum blahhhh\".as_bytes();\n\n    let mut haystack: StringBody64 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString64 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_concat() {\n    let email_text = \"account recovery for Bartholomew Fibblesworth\".as_bytes();\n    let username = \"Bartholomew Fibblesworth\".as_bytes();\n    let mut padded_email_text: [u8; 256] = [0; 256];\n    let mut padded_username: [u8; 100] = [0; 100];\n    for i in 0..username.len() {\n        padded_username[i] = username[i];\n    }\n    for i in 0..email_text.len() {\n        padded_email_text[i] = email_text[i];\n    }\n    let needle_text_init = \"account recovery for \".as_bytes();\n\n    let needle_start: SubString128 = SubString::new(needle_text_init, needle_text_init.len());\n    let needle_end: SubString128 = SubString::new(padded_username, username.len());\n    let needle = needle_start.concat(needle_end);\n\n    for i in 0..45 {\n        assert(needle.body[i] == email_text[i]);\n    }\n\n    let haystack: StringBody256 = StringBody::new(padded_email_text, 200);\n    let (result, _): (bool, u32) = haystack.substring_match(needle);\n    assert(result == true);\n}\n\n#[test]\nfn test_concat_into() {\n    let email_text = \"account recovery for Bartholomew Fibblesworth\".as_bytes();\n    let username = \"Bartholomew Fibblesworth\".as_bytes();\n    let mut padded_email_text: [u8; 256] = [0; 256];\n    let mut padded_username: [u8; 100] = [0; 100];\n    for i in 0..username.len() {\n        padded_username[i] = username[i];\n    }\n    for i in 0..email_text.len() {\n        padded_email_text[i] = email_text[i];\n    }\n    let needle_text_init = \"account recovery for \".as_bytes();\n\n    let needle_start: SubString32 = SubString::new(needle_text_init, needle_text_init.len());\n    let needle_end: SubString128 = SubString::new(padded_username, username.len());\n    let needle = needle_start.concat_into(needle_end);\n\n    for i in 0..45 {\n        assert(needle.body[i] == email_text[i]);\n    }\n\n    let haystack: StringBody256 = StringBody::new(padded_email_text, 200);\n    let (result, _): (bool, u32) = haystack.substring_match(needle);\n    assert(result == true);\n}\n\n#[test]\nunconstrained fn test_partial_match() {\n    let mut Engine = DebugRandomEngine { seed: 0 };\n    let mut foo: [u8; 1024] = Engine.get_random_bytes();\n    let mut bar: [u8; 128] = [0; 128];\n    for i in 0..128 {\n        bar[i] = foo[i + 123];\n    }\n    let position = utils::search(foo, bar.as_slice(), 1024, 128);\n\n    assert(position == 123);\n}\n\n#[test]\nfn test_substring_from_bounded_vec() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        .as_bytes();\n    let needle_text = \" dolor in reprehenderit in voluptate velit esse\".as_bytes();\n\n    let mut haystack: StringBody512 = BoundedVec::from(haystack_text).into();\n    let mut needle: SubString64 = BoundedVec::from(needle_text).into();\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_string_body_from_bounded_vec() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        .as_bytes();\n\n    let mut haystack: StringBody512 = BoundedVec::from(haystack_text).into();\n    let needle_text = \" dolor in reprehenderit in voluptate velit esse\".as_bytes();\n    let mut needle: SubString64 = BoundedVec::from(needle_text).into();\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn regression_20() {\n    let haystack: [u8; 128] = [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x92, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x6e, 0x00, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    ];\n\n    let needle: [u8; 32] = [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00,\n    ];\n    let needle_len: u32 = 0x20;\n    let id_haystack: StringBody128 = StringBody::new(haystack, 128);\n    let pk_needle: SubString32 = SubString::new(needle, needle_len);\n    let (result, _): (bool, u32) = id_haystack.substring_match(pk_needle);\n    assert(result);\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir_string_search/v0.3.2/src/lib.nr"},"137":{"source":"pub unconstrained fn search<let N: u32>(\n    haystack: [u8; N],\n    needle: [u8],\n    haystack_length: u32,\n    needle_length: u32,\n) -> u32 {\n    assert(needle_length > 0, \"needle length of size 0 not supported\");\n    assert(haystack_length > 0, \"haystack length of size 0 not supported\");\n    let mut found = false;\n    let mut found_index: u32 = 0;\n    for i in 0..haystack_length - needle_length + 1 {\n        if (found == true) {\n            break;\n        }\n        for j in 0..needle_length {\n            if haystack[i + j] != needle[j] {\n                break;\n            } else if (j == needle_length - 1) {\n                found = true;\n            }\n            if (found == true) {\n                found_index = i;\n                break;\n            }\n        }\n    }\n    assert(found == true, \"utils::search could not find needle in haystack\");\n    found_index\n}\n\nunconstrained fn __conditional_select(lhs: u8, rhs: u8, predicate: bool) -> u8 {\n    if (predicate) {\n        lhs\n    } else {\n        rhs\n    }\n}\n\npub fn conditional_select<T>(lhs: u8, rhs: u8, predicate: bool) -> u8 {\n    // Safety: This is all just a very verbose `if (predicate) { lhs } else { rhs }`\n    // formulated as `rhs + (lhs - rhs) * predicate`\n    unsafe {\n        let result = __conditional_select(lhs, rhs, predicate);\n        let result_f = result as Field;\n        let lhs_f = lhs as Field;\n        let rhs_f = rhs as Field;\n\n        let diff = lhs_f - rhs_f;\n        std::as_witness(diff);\n        assert_eq((predicate as Field) * diff + rhs_f, result_f);\n        result\n    }\n}\n\npub unconstrained fn get_lt_predicate_f(x: Field, y: Field) -> bool {\n    let a = x as u32;\n    let b = y as u32;\n    a < b\n}\n\npub fn lt_f(x: Field, y: Field) -> bool {\n    // Safety: As `x` and `y` are known to be valid `u32`s, this function reimplements the\n    // compiler's internal implementation of `lt`\n    unsafe {\n        let predicate = get_lt_predicate_f(x, y);\n        let delta = y as Field - x as Field;\n        let lt_parameter = 2 * (predicate as Field) * delta - predicate as Field - delta;\n        lt_parameter.assert_max_bit_size::<32>();\n\n        predicate\n    }\n}\n\npub struct DebugRandomEngine {\n    pub seed: Field,\n}\n\nimpl DebugRandomEngine {\n    unconstrained fn get_random_32_bytes(&mut self) -> [u8; 32] {\n        self.seed += 1;\n        let input: [u8; 32] = self.seed.to_be_bytes();\n        let hash: [u8; 32] = std::hash::blake3(input);\n        hash\n    }\n    unconstrained fn get_random_field(&mut self) -> Field {\n        let hash = self.get_random_32_bytes();\n        let mut result: Field = 0;\n        for i in 0..32 {\n            result *= 256;\n            result += hash[i] as Field;\n        }\n        result\n    }\n\n    pub unconstrained fn get_random_bytes<let NBytes: u32>(&mut self) -> [u8; NBytes] {\n        let num_chunks = (NBytes / 32) + ((NBytes % 32) != 0) as u32;\n\n        let mut result: [u8; NBytes] = [0; NBytes];\n        for i in 0..num_chunks - 1 {\n            let bytes = self.get_random_32_bytes();\n            for j in 0..32 {\n                result[i * 32 + j] = bytes[j];\n            }\n        }\n\n        let bytes = self.get_random_32_bytes();\n        for j in 0..(NBytes - (num_chunks - 1) * 32) {\n            result[(num_chunks - 1) * 32 + j] = bytes[j];\n        }\n        result\n    }\n}\n","path":"/Users/unomasanori/nargo/github.com/noir-lang/noir_string_search/v0.3.2/src/utils.nr"},"138":{"source":"use crate::{KEY_LIMBS_1024, KEY_LIMBS_2048, RSA_EXPONENT};\nuse bignum::{params::BigNumParams, RuntimeBigNum};\nuse poseidon::poseidon;\nuse rsa::{rsa::verify_sha256_pkcs1v15, types::{RBN1024, RBN2048}};\nuse sha256::sha256_var;\n\npub struct RSAPubkey<let KEY_LIMBS: u32> {\n    modulus: [Field; KEY_LIMBS],\n    redc: [Field; KEY_LIMBS],\n}\n\nimpl<let KEY_LIMBS: u32> RSAPubkey<KEY_LIMBS> {\n\n    pub fn new(modulus: [Field; KEY_LIMBS], redc: [Field; KEY_LIMBS]) -> Self {\n        let pubkey = Self { modulus, redc };\n        pubkey\n    }\n}\n\nimpl RSAPubkey<KEY_LIMBS_1024> {\n    pub fn verify_dkim_signature<let MAX_HEADER_LENGTH: u32>(\n        self,\n        header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n        signature: [Field; KEY_LIMBS_1024],\n    ) -> [u8; 32] {\n        // hash the header\n        let header_hash = sha256_var(header.storage(), header.len() as u64);\n\n        let params: BigNumParams<KEY_LIMBS_1024, 1024> = BigNumParams::new(\n            false,\n            convert_field_to_u128(self.modulus),\n            convert_field_to_u128(self.redc),\n        );\n\n        let signature: RBN1024 =\n            RuntimeBigNum::from_array(params, convert_field_to_u128(signature));\n        signature.validate_in_range();\n\n        // verify the DKIM signature over the header\n        assert(verify_sha256_pkcs1v15(header_hash, signature, RSA_EXPONENT));\n\n        header_hash\n    }\n\n    pub fn hash(self) -> Field {\n        // validate\n        self.validate_in_range();\n        let mut dkim_preimage = [0; 9];\n        // compose first 4 limbs of modulus and redc\n        for i in 0..4 {\n            let modulus_hi = self.modulus[i * 2] * 2.pow_32(120);\n            let redc_hi = self.redc[i * 2] * 2.pow_32(120);\n            dkim_preimage[i] = modulus_hi + self.modulus[i * 2 + 1];\n            dkim_preimage[i + 4] = redc_hi + self.redc[i * 2 + 1];\n        }\n        // compose last two elements of redc and modulus together\n        let modulus_hi = self.modulus[8] * 2.pow_32(120);\n        dkim_preimage[8] = modulus_hi + self.redc[8];\n        // hash the pubkey\n        poseidon::bn254::hash_9(dkim_preimage)\n    }\n\n    pub fn validate_in_range(self) {\n        for i in 0..(KEY_LIMBS_1024 - 1) {\n            self.modulus[i].assert_max_bit_size::<120>();\n            self.redc[i].assert_max_bit_size::<120>();\n        }\n        self.modulus[KEY_LIMBS_1024 - 1].assert_max_bit_size::<1024 - ((KEY_LIMBS_1024 - 1) * 120)>();\n        self.redc[KEY_LIMBS_1024 - 1].assert_max_bit_size::<120>();\n    }\n}\n\nimpl RSAPubkey<KEY_LIMBS_2048> {\n    pub fn verify_dkim_signature<let MAX_HEADER_LENGTH: u32>(\n        self,\n        header: BoundedVec<u8, MAX_HEADER_LENGTH>,\n        signature: [Field; KEY_LIMBS_2048],\n    ) -> [u8; 32] {\n        // hash the header\n        let header_hash = sha256_var(header.storage(), header.len() as u64);\n\n        let params: BigNumParams<KEY_LIMBS_2048, 2048> = BigNumParams::new(\n            false,\n            convert_field_to_u128(self.modulus),\n            convert_field_to_u128(self.redc),\n        );\n\n        let signature: RBN2048 =\n            RuntimeBigNum::from_array(params, convert_field_to_u128(signature));\n        signature.validate_in_range();\n\n        // verify the DKIM signature over the header\n        assert(verify_sha256_pkcs1v15(header_hash, signature, RSA_EXPONENT));\n\n        header_hash\n    }\n\n    pub fn hash(self) -> Field {\n        // validate range\n        self.validate_in_range();\n        let mut chunk1 = [0; 9];\n        let mut chunk2 = [0; 9];\n\n        // compose limbs\n        for i in 0..9 {\n            let modulus_hi = self.modulus[i * 2] * 2.pow_32(120);\n            let redc_hi = self.redc[i * 2] * 2.pow_32(120);\n            chunk1[i] = modulus_hi + self.modulus[i * 2 + 1];\n            chunk2[i] = redc_hi + self.redc[i * 2 + 1];\n        }\n\n        let hash_of_chunk1 = poseidon::bn254::hash_9(chunk1);\n        let hash_of_chunk2 = poseidon::bn254::hash_9(chunk2);\n\n        poseidon::bn254::hash_2([hash_of_chunk1, hash_of_chunk2])\n    }\n\n    pub fn validate_in_range(self) {\n        for i in 0..(KEY_LIMBS_2048 - 1) {\n            self.modulus[i].assert_max_bit_size::<120>();\n            self.redc[i].assert_max_bit_size::<120>();\n        }\n        self.modulus[KEY_LIMBS_2048 - 1].assert_max_bit_size::<2048 - ((KEY_LIMBS_2048 - 1) * 120)>();\n        self.redc[KEY_LIMBS_2048 - 1].assert_max_bit_size::<120>(); // we get 2053 sometimes?\n    }\n}\n\n// convert a Field array to a u128 array with generic number of limbs\nfn convert_field_to_u128<let KEY_LIMBS: u32>(signature: [Field; KEY_LIMBS]) -> [u128; KEY_LIMBS] {\n    let mut u128_signature: [u128; KEY_LIMBS] = [0; KEY_LIMBS];\n    for i in 0..KEY_LIMBS {\n        u128_signature[i] = signature[i] as u128;\n    }\n    u128_signature\n}\n","path":"/Users/unomasanori/nargo/github.com/masaun/zkemail.nr/feat/update-packages_nodash-v0.41.1/lib/src/dkim.nr"}},"names":["main"],"brillig_names":["build_msg_block_iter","pad_msg_block","attach_len_to_msg_block","__mul","__compute_quadratic_expression_with_borrow_flags","extract_claim_unconstrained","__boundary_check","__validate_decoded","search","get_lt_predicate_f","extract_claim_unconstrained","get_domain_start_index_in_email","build_msg_block","attach_len_to_msg_block","decompose_hint","print_unconstrained","print_unconstrained","print_unconstrained","is_position_found_in_email_body","is_salary_found_in_email_body","directive_integer_quotient","directive_invert","directive_to_radix"]}